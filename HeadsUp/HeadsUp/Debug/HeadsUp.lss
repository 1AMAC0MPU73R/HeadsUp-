
HeadsUp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000022  00800100  000026ea  0000275e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000026ea  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00002780  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000027dc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000130  00000000  00000000  0000281c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000016d6  00000000  00000000  0000294c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005e4  00000000  00000000  00004022  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000d5f  00000000  00000000  00004606  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000004d0  00000000  00000000  00005368  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000006e7  00000000  00000000  00005838  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000a8c  00000000  00000000  00005f1f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000100  00000000  00000000  000069ab  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	c6 c0       	rjmp	.+396    	; 0x18e <__ctors_end>
       2:	00 00       	nop
       4:	da c0       	rjmp	.+436    	; 0x1ba <__bad_interrupt>
       6:	00 00       	nop
       8:	d8 c0       	rjmp	.+432    	; 0x1ba <__bad_interrupt>
       a:	00 00       	nop
       c:	d6 c0       	rjmp	.+428    	; 0x1ba <__bad_interrupt>
       e:	00 00       	nop
      10:	d4 c0       	rjmp	.+424    	; 0x1ba <__bad_interrupt>
      12:	00 00       	nop
      14:	d2 c0       	rjmp	.+420    	; 0x1ba <__bad_interrupt>
      16:	00 00       	nop
      18:	d0 c0       	rjmp	.+416    	; 0x1ba <__bad_interrupt>
      1a:	00 00       	nop
      1c:	ce c0       	rjmp	.+412    	; 0x1ba <__bad_interrupt>
      1e:	00 00       	nop
      20:	cc c0       	rjmp	.+408    	; 0x1ba <__bad_interrupt>
      22:	00 00       	nop
      24:	ca c0       	rjmp	.+404    	; 0x1ba <__bad_interrupt>
      26:	00 00       	nop
      28:	c8 c0       	rjmp	.+400    	; 0x1ba <__bad_interrupt>
      2a:	00 00       	nop
      2c:	c6 c0       	rjmp	.+396    	; 0x1ba <__bad_interrupt>
      2e:	00 00       	nop
      30:	c4 c0       	rjmp	.+392    	; 0x1ba <__bad_interrupt>
      32:	00 00       	nop
      34:	c2 c0       	rjmp	.+388    	; 0x1ba <__bad_interrupt>
      36:	00 00       	nop
      38:	c0 c0       	rjmp	.+384    	; 0x1ba <__bad_interrupt>
      3a:	00 00       	nop
      3c:	be c0       	rjmp	.+380    	; 0x1ba <__bad_interrupt>
      3e:	00 00       	nop
      40:	bc c0       	rjmp	.+376    	; 0x1ba <__bad_interrupt>
      42:	00 00       	nop
      44:	ba c0       	rjmp	.+372    	; 0x1ba <__bad_interrupt>
      46:	00 00       	nop
      48:	b8 c0       	rjmp	.+368    	; 0x1ba <__bad_interrupt>
      4a:	00 00       	nop
      4c:	b6 c0       	rjmp	.+364    	; 0x1ba <__bad_interrupt>
      4e:	00 00       	nop
      50:	b4 c0       	rjmp	.+360    	; 0x1ba <__bad_interrupt>
      52:	00 00       	nop
      54:	b2 c0       	rjmp	.+356    	; 0x1ba <__bad_interrupt>
      56:	00 00       	nop
      58:	b0 c0       	rjmp	.+352    	; 0x1ba <__bad_interrupt>
      5a:	00 00       	nop
      5c:	ae c0       	rjmp	.+348    	; 0x1ba <__bad_interrupt>
      5e:	00 00       	nop
      60:	ac c0       	rjmp	.+344    	; 0x1ba <__bad_interrupt>
      62:	00 00       	nop
      64:	aa c0       	rjmp	.+340    	; 0x1ba <__bad_interrupt>
      66:	00 00       	nop
      68:	a8 c0       	rjmp	.+336    	; 0x1ba <__bad_interrupt>
      6a:	00 00       	nop
      6c:	a6 c0       	rjmp	.+332    	; 0x1ba <__bad_interrupt>
      6e:	00 00       	nop
      70:	a4 c0       	rjmp	.+328    	; 0x1ba <__bad_interrupt>
      72:	00 00       	nop
      74:	a2 c0       	rjmp	.+324    	; 0x1ba <__bad_interrupt>
      76:	00 00       	nop
      78:	a0 c0       	rjmp	.+320    	; 0x1ba <__bad_interrupt>
      7a:	00 00       	nop
      7c:	9e c0       	rjmp	.+316    	; 0x1ba <__bad_interrupt>
      7e:	00 00       	nop
      80:	9c c0       	rjmp	.+312    	; 0x1ba <__bad_interrupt>
      82:	00 00       	nop
      84:	9a c0       	rjmp	.+308    	; 0x1ba <__bad_interrupt>
      86:	00 00       	nop
      88:	98 c0       	rjmp	.+304    	; 0x1ba <__bad_interrupt>
	...

0000008c <__trampolines_end>:
      8c:	6e 61       	ori	r22, 0x1E	; 30
      8e:	6e 00       	.word	0x006e	; ????

00000090 <__c.2177>:
      90:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      a0:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      b0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      c0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      d0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      e0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      f0:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     100:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     110:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     120:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     130:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     140:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     150:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     160:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     170:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     180:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000018e <__ctors_end>:
     18e:	11 24       	eor	r1, r1
     190:	1f be       	out	0x3f, r1	; 63
     192:	cf ef       	ldi	r28, 0xFF	; 255
     194:	d0 e4       	ldi	r29, 0x40	; 64
     196:	de bf       	out	0x3e, r29	; 62
     198:	cd bf       	out	0x3d, r28	; 61

0000019a <__do_copy_data>:
     19a:	11 e0       	ldi	r17, 0x01	; 1
     19c:	a0 e0       	ldi	r26, 0x00	; 0
     19e:	b1 e0       	ldi	r27, 0x01	; 1
     1a0:	ea ee       	ldi	r30, 0xEA	; 234
     1a2:	f6 e2       	ldi	r31, 0x26	; 38
     1a4:	00 e0       	ldi	r16, 0x00	; 0
     1a6:	0b bf       	out	0x3b, r16	; 59
     1a8:	02 c0       	rjmp	.+4      	; 0x1ae <__do_copy_data+0x14>
     1aa:	07 90       	elpm	r0, Z+
     1ac:	0d 92       	st	X+, r0
     1ae:	a2 32       	cpi	r26, 0x22	; 34
     1b0:	b1 07       	cpc	r27, r17
     1b2:	d9 f7       	brne	.-10     	; 0x1aa <__do_copy_data+0x10>
     1b4:	ab d1       	rcall	.+854    	; 0x50c <main>
     1b6:	0c 94 73 13 	jmp	0x26e6	; 0x26e6 <_exit>

000001ba <__bad_interrupt>:
     1ba:	22 cf       	rjmp	.-444    	; 0x0 <__vectors>

000001bc <_ZN3rtc3getEv>:

class rtc{

	public:
		rtc( );
		rtc_time get( ){ return get_time( ); }
     1bc:	2f 92       	push	r2
     1be:	3f 92       	push	r3
     1c0:	4f 92       	push	r4
     1c2:	5f 92       	push	r5
     1c4:	6f 92       	push	r6
     1c6:	7f 92       	push	r7
     1c8:	8f 92       	push	r8
     1ca:	9f 92       	push	r9
     1cc:	af 92       	push	r10
     1ce:	bf 92       	push	r11
     1d0:	cf 92       	push	r12
     1d2:	df 92       	push	r13
     1d4:	ef 92       	push	r14
     1d6:	ff 92       	push	r15
     1d8:	0f 93       	push	r16
     1da:	1f 93       	push	r17
     1dc:	cf 93       	push	r28
     1de:	df 93       	push	r29
     1e0:	cd b7       	in	r28, 0x3d	; 61
     1e2:	de b7       	in	r29, 0x3e	; 62
     1e4:	29 97       	sbiw	r28, 0x09	; 9
     1e6:	0f b6       	in	r0, 0x3f	; 63
     1e8:	f8 94       	cli
     1ea:	de bf       	out	0x3e, r29	; 62
     1ec:	0f be       	out	0x3f, r0	; 63
     1ee:	cd bf       	out	0x3d, r28	; 61
     1f0:	99 87       	std	Y+9, r25	; 0x09
     1f2:	88 87       	std	Y+8, r24	; 0x08
     1f4:	88 85       	ldd	r24, Y+8	; 0x08
     1f6:	99 85       	ldd	r25, Y+9	; 0x09
     1f8:	0e 94 81 0b 	call	0x1702	; 0x1702 <_ZN3rtc8get_timeEv>
     1fc:	a2 2e       	mov	r10, r18
     1fe:	b3 2e       	mov	r11, r19
     200:	c4 2e       	mov	r12, r20
     202:	d5 2e       	mov	r13, r21
     204:	e6 2e       	mov	r14, r22
     206:	f7 2e       	mov	r15, r23
     208:	08 2f       	mov	r16, r24
     20a:	19 2f       	mov	r17, r25
     20c:	2a 2d       	mov	r18, r10
     20e:	3b 2d       	mov	r19, r11
     210:	4c 2d       	mov	r20, r12
     212:	5d 2d       	mov	r21, r13
     214:	6e 2d       	mov	r22, r14
     216:	7f 2d       	mov	r23, r15
     218:	80 2f       	mov	r24, r16
     21a:	91 2f       	mov	r25, r17
     21c:	29 83       	std	Y+1, r18	; 0x01
     21e:	3a 83       	std	Y+2, r19	; 0x02
     220:	4b 83       	std	Y+3, r20	; 0x03
     222:	5c 83       	std	Y+4, r21	; 0x04
     224:	6d 83       	std	Y+5, r22	; 0x05
     226:	7e 83       	std	Y+6, r23	; 0x06
     228:	8f 83       	std	Y+7, r24	; 0x07
     22a:	60 e0       	ldi	r22, 0x00	; 0
     22c:	69 81       	ldd	r22, Y+1	; 0x01
     22e:	50 e0       	ldi	r21, 0x00	; 0
     230:	5a 81       	ldd	r21, Y+2	; 0x02
     232:	40 e0       	ldi	r20, 0x00	; 0
     234:	4b 81       	ldd	r20, Y+3	; 0x03
     236:	30 e0       	ldi	r19, 0x00	; 0
     238:	3c 81       	ldd	r19, Y+4	; 0x04
     23a:	20 e0       	ldi	r18, 0x00	; 0
     23c:	2d 81       	ldd	r18, Y+5	; 0x05
     23e:	90 e0       	ldi	r25, 0x00	; 0
     240:	9e 81       	ldd	r25, Y+6	; 0x06
     242:	80 e0       	ldi	r24, 0x00	; 0
     244:	8f 81       	ldd	r24, Y+7	; 0x07
     246:	26 2e       	mov	r2, r22
     248:	35 2e       	mov	r3, r21
     24a:	44 2e       	mov	r4, r20
     24c:	53 2e       	mov	r5, r19
     24e:	62 2e       	mov	r6, r18
     250:	79 2e       	mov	r7, r25
     252:	88 2e       	mov	r8, r24
     254:	a2 2c       	mov	r10, r2
     256:	b3 2c       	mov	r11, r3
     258:	c4 2c       	mov	r12, r4
     25a:	d5 2c       	mov	r13, r5
     25c:	e6 2c       	mov	r14, r6
     25e:	f7 2c       	mov	r15, r7
     260:	08 2d       	mov	r16, r8
     262:	19 2d       	mov	r17, r9
     264:	2a 2d       	mov	r18, r10
     266:	3b 2d       	mov	r19, r11
     268:	4c 2d       	mov	r20, r12
     26a:	5d 2d       	mov	r21, r13
     26c:	6e 2d       	mov	r22, r14
     26e:	7f 2d       	mov	r23, r15
     270:	80 2f       	mov	r24, r16
     272:	91 2f       	mov	r25, r17
     274:	29 96       	adiw	r28, 0x09	; 9
     276:	0f b6       	in	r0, 0x3f	; 63
     278:	f8 94       	cli
     27a:	de bf       	out	0x3e, r29	; 62
     27c:	0f be       	out	0x3f, r0	; 63
     27e:	cd bf       	out	0x3d, r28	; 61
     280:	df 91       	pop	r29
     282:	cf 91       	pop	r28
     284:	1f 91       	pop	r17
     286:	0f 91       	pop	r16
     288:	ff 90       	pop	r15
     28a:	ef 90       	pop	r14
     28c:	df 90       	pop	r13
     28e:	cf 90       	pop	r12
     290:	bf 90       	pop	r11
     292:	af 90       	pop	r10
     294:	9f 90       	pop	r9
     296:	8f 90       	pop	r8
     298:	7f 90       	pop	r7
     29a:	6f 90       	pop	r6
     29c:	5f 90       	pop	r5
     29e:	4f 90       	pop	r4
     2a0:	3f 90       	pop	r3
     2a2:	2f 90       	pop	r2
     2a4:	08 95       	ret

000002a6 <_ZN3rtc3setEP8rtc_time>:
		void set( rtc_time* rtmSetTime ){ set_time( rtmSetTime ); }
     2a6:	cf 93       	push	r28
     2a8:	df 93       	push	r29
     2aa:	00 d0       	rcall	.+0      	; 0x2ac <_ZN3rtc3setEP8rtc_time+0x6>
     2ac:	00 d0       	rcall	.+0      	; 0x2ae <_ZN3rtc3setEP8rtc_time+0x8>
     2ae:	cd b7       	in	r28, 0x3d	; 61
     2b0:	de b7       	in	r29, 0x3e	; 62
     2b2:	9a 83       	std	Y+2, r25	; 0x02
     2b4:	89 83       	std	Y+1, r24	; 0x01
     2b6:	7c 83       	std	Y+4, r23	; 0x04
     2b8:	6b 83       	std	Y+3, r22	; 0x03
     2ba:	2b 81       	ldd	r18, Y+3	; 0x03
     2bc:	3c 81       	ldd	r19, Y+4	; 0x04
     2be:	89 81       	ldd	r24, Y+1	; 0x01
     2c0:	9a 81       	ldd	r25, Y+2	; 0x02
     2c2:	b9 01       	movw	r22, r18
     2c4:	0e 94 ee 0b 	call	0x17dc	; 0x17dc <_ZN3rtc8set_timeEP8rtc_time>
     2c8:	0f 90       	pop	r0
     2ca:	0f 90       	pop	r0
     2cc:	0f 90       	pop	r0
     2ce:	0f 90       	pop	r0
     2d0:	df 91       	pop	r29
     2d2:	cf 91       	pop	r28
     2d4:	08 95       	ret

000002d6 <_Z14Test_On_PortA0v>:


void Test_On_PortA0();


void Test_On_PortA0(){
     2d6:	cf 93       	push	r28
     2d8:	df 93       	push	r29
     2da:	cd b7       	in	r28, 0x3d	; 61
     2dc:	de b7       	in	r29, 0x3e	; 62
     2de:	6c 97       	sbiw	r28, 0x1c	; 28
     2e0:	0f b6       	in	r0, 0x3f	; 63
     2e2:	f8 94       	cli
     2e4:	de bf       	out	0x3e, r29	; 62
     2e6:	0f be       	out	0x3f, r0	; 63
     2e8:	cd bf       	out	0x3d, r28	; 61
	
	DDRA |= 0x01;
     2ea:	81 e2       	ldi	r24, 0x21	; 33
     2ec:	90 e0       	ldi	r25, 0x00	; 0
     2ee:	21 e2       	ldi	r18, 0x21	; 33
     2f0:	30 e0       	ldi	r19, 0x00	; 0
     2f2:	f9 01       	movw	r30, r18
     2f4:	20 81       	ld	r18, Z
     2f6:	21 60       	ori	r18, 0x01	; 1
     2f8:	fc 01       	movw	r30, r24
     2fa:	20 83       	st	Z, r18
	
	PORTA |= ( 1 << PINA0);
     2fc:	82 e2       	ldi	r24, 0x22	; 34
     2fe:	90 e0       	ldi	r25, 0x00	; 0
     300:	22 e2       	ldi	r18, 0x22	; 34
     302:	30 e0       	ldi	r19, 0x00	; 0
     304:	f9 01       	movw	r30, r18
     306:	20 81       	ld	r18, Z
     308:	21 60       	ori	r18, 0x01	; 1
     30a:	fc 01       	movw	r30, r24
     30c:	20 83       	st	Z, r18
     30e:	80 e0       	ldi	r24, 0x00	; 0
     310:	90 e0       	ldi	r25, 0x00	; 0
     312:	aa e7       	ldi	r26, 0x7A	; 122
     314:	b3 e4       	ldi	r27, 0x43	; 67
     316:	89 83       	std	Y+1, r24	; 0x01
     318:	9a 83       	std	Y+2, r25	; 0x02
     31a:	ab 83       	std	Y+3, r26	; 0x03
     31c:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     31e:	20 e0       	ldi	r18, 0x00	; 0
     320:	30 e0       	ldi	r19, 0x00	; 0
     322:	4a e7       	ldi	r20, 0x7A	; 122
     324:	53 e4       	ldi	r21, 0x43	; 67
     326:	69 81       	ldd	r22, Y+1	; 0x01
     328:	7a 81       	ldd	r23, Y+2	; 0x02
     32a:	8b 81       	ldd	r24, Y+3	; 0x03
     32c:	9c 81       	ldd	r25, Y+4	; 0x04
     32e:	0e 94 d3 0d 	call	0x1ba6	; 0x1ba6 <__mulsf3>
     332:	dc 01       	movw	r26, r24
     334:	cb 01       	movw	r24, r22
     336:	8d 83       	std	Y+5, r24	; 0x05
     338:	9e 83       	std	Y+6, r25	; 0x06
     33a:	af 83       	std	Y+7, r26	; 0x07
     33c:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     33e:	20 e0       	ldi	r18, 0x00	; 0
     340:	30 e0       	ldi	r19, 0x00	; 0
     342:	40 e8       	ldi	r20, 0x80	; 128
     344:	5f e3       	ldi	r21, 0x3F	; 63
     346:	6d 81       	ldd	r22, Y+5	; 0x05
     348:	7e 81       	ldd	r23, Y+6	; 0x06
     34a:	8f 81       	ldd	r24, Y+7	; 0x07
     34c:	98 85       	ldd	r25, Y+8	; 0x08
     34e:	0e 94 52 0d 	call	0x1aa4	; 0x1aa4 <__cmpsf2>
     352:	88 23       	and	r24, r24
     354:	2c f4       	brge	.+10     	; 0x360 <_Z14Test_On_PortA0v+0x8a>
		__ticks = 1;
     356:	81 e0       	ldi	r24, 0x01	; 1
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	9a 87       	std	Y+10, r25	; 0x0a
     35c:	89 87       	std	Y+9, r24	; 0x09
     35e:	3f c0       	rjmp	.+126    	; 0x3de <_Z14Test_On_PortA0v+0x108>
	else if (__tmp > 65535)
     360:	20 e0       	ldi	r18, 0x00	; 0
     362:	3f ef       	ldi	r19, 0xFF	; 255
     364:	4f e7       	ldi	r20, 0x7F	; 127
     366:	57 e4       	ldi	r21, 0x47	; 71
     368:	6d 81       	ldd	r22, Y+5	; 0x05
     36a:	7e 81       	ldd	r23, Y+6	; 0x06
     36c:	8f 81       	ldd	r24, Y+7	; 0x07
     36e:	98 85       	ldd	r25, Y+8	; 0x08
     370:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <__gesf2>
     374:	18 16       	cp	r1, r24
     376:	4c f5       	brge	.+82     	; 0x3ca <_Z14Test_On_PortA0v+0xf4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     378:	20 e0       	ldi	r18, 0x00	; 0
     37a:	30 e0       	ldi	r19, 0x00	; 0
     37c:	40 e2       	ldi	r20, 0x20	; 32
     37e:	51 e4       	ldi	r21, 0x41	; 65
     380:	69 81       	ldd	r22, Y+1	; 0x01
     382:	7a 81       	ldd	r23, Y+2	; 0x02
     384:	8b 81       	ldd	r24, Y+3	; 0x03
     386:	9c 81       	ldd	r25, Y+4	; 0x04
     388:	0e 94 d3 0d 	call	0x1ba6	; 0x1ba6 <__mulsf3>
     38c:	dc 01       	movw	r26, r24
     38e:	cb 01       	movw	r24, r22
     390:	bc 01       	movw	r22, r24
     392:	cd 01       	movw	r24, r26
     394:	0e 94 56 0d 	call	0x1aac	; 0x1aac <__fixunssfsi>
     398:	dc 01       	movw	r26, r24
     39a:	cb 01       	movw	r24, r22
     39c:	9a 87       	std	Y+10, r25	; 0x0a
     39e:	89 87       	std	Y+9, r24	; 0x09
     3a0:	0f c0       	rjmp	.+30     	; 0x3c0 <_Z14Test_On_PortA0v+0xea>
     3a2:	89 e1       	ldi	r24, 0x19	; 25
     3a4:	90 e0       	ldi	r25, 0x00	; 0
     3a6:	9c 87       	std	Y+12, r25	; 0x0c
     3a8:	8b 87       	std	Y+11, r24	; 0x0b
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
     3aa:	8b 85       	ldd	r24, Y+11	; 0x0b
     3ac:	9c 85       	ldd	r25, Y+12	; 0x0c
     3ae:	01 97       	sbiw	r24, 0x01	; 1
     3b0:	f1 f7       	brne	.-4      	; 0x3ae <_Z14Test_On_PortA0v+0xd8>
     3b2:	9c 87       	std	Y+12, r25	; 0x0c
     3b4:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3b6:	89 85       	ldd	r24, Y+9	; 0x09
     3b8:	9a 85       	ldd	r25, Y+10	; 0x0a
     3ba:	01 97       	sbiw	r24, 0x01	; 1
     3bc:	9a 87       	std	Y+10, r25	; 0x0a
     3be:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3c0:	89 85       	ldd	r24, Y+9	; 0x09
     3c2:	9a 85       	ldd	r25, Y+10	; 0x0a
     3c4:	89 2b       	or	r24, r25
     3c6:	69 f7       	brne	.-38     	; 0x3a2 <_Z14Test_On_PortA0v+0xcc>
     3c8:	14 c0       	rjmp	.+40     	; 0x3f2 <_Z14Test_On_PortA0v+0x11c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     3ca:	6d 81       	ldd	r22, Y+5	; 0x05
     3cc:	7e 81       	ldd	r23, Y+6	; 0x06
     3ce:	8f 81       	ldd	r24, Y+7	; 0x07
     3d0:	98 85       	ldd	r25, Y+8	; 0x08
     3d2:	0e 94 56 0d 	call	0x1aac	; 0x1aac <__fixunssfsi>
     3d6:	dc 01       	movw	r26, r24
     3d8:	cb 01       	movw	r24, r22
     3da:	9a 87       	std	Y+10, r25	; 0x0a
     3dc:	89 87       	std	Y+9, r24	; 0x09
     3de:	89 85       	ldd	r24, Y+9	; 0x09
     3e0:	9a 85       	ldd	r25, Y+10	; 0x0a
     3e2:	9e 87       	std	Y+14, r25	; 0x0e
     3e4:	8d 87       	std	Y+13, r24	; 0x0d
     3e6:	8d 85       	ldd	r24, Y+13	; 0x0d
     3e8:	9e 85       	ldd	r25, Y+14	; 0x0e
     3ea:	01 97       	sbiw	r24, 0x01	; 1
     3ec:	f1 f7       	brne	.-4      	; 0x3ea <_Z14Test_On_PortA0v+0x114>
     3ee:	9e 87       	std	Y+14, r25	; 0x0e
     3f0:	8d 87       	std	Y+13, r24	; 0x0d
	_delay_ms(250);
	PORTA &= ~( 1 << PINA0);
     3f2:	82 e2       	ldi	r24, 0x22	; 34
     3f4:	90 e0       	ldi	r25, 0x00	; 0
     3f6:	22 e2       	ldi	r18, 0x22	; 34
     3f8:	30 e0       	ldi	r19, 0x00	; 0
     3fa:	f9 01       	movw	r30, r18
     3fc:	20 81       	ld	r18, Z
     3fe:	2e 7f       	andi	r18, 0xFE	; 254
     400:	fc 01       	movw	r30, r24
     402:	20 83       	st	Z, r18
     404:	80 e0       	ldi	r24, 0x00	; 0
     406:	90 e0       	ldi	r25, 0x00	; 0
     408:	aa e7       	ldi	r26, 0x7A	; 122
     40a:	b3 e4       	ldi	r27, 0x43	; 67
     40c:	8f 87       	std	Y+15, r24	; 0x0f
     40e:	98 8b       	std	Y+16, r25	; 0x10
     410:	a9 8b       	std	Y+17, r26	; 0x11
     412:	ba 8b       	std	Y+18, r27	; 0x12

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     414:	20 e0       	ldi	r18, 0x00	; 0
     416:	30 e0       	ldi	r19, 0x00	; 0
     418:	4a e7       	ldi	r20, 0x7A	; 122
     41a:	53 e4       	ldi	r21, 0x43	; 67
     41c:	6f 85       	ldd	r22, Y+15	; 0x0f
     41e:	78 89       	ldd	r23, Y+16	; 0x10
     420:	89 89       	ldd	r24, Y+17	; 0x11
     422:	9a 89       	ldd	r25, Y+18	; 0x12
     424:	0e 94 d3 0d 	call	0x1ba6	; 0x1ba6 <__mulsf3>
     428:	dc 01       	movw	r26, r24
     42a:	cb 01       	movw	r24, r22
     42c:	8b 8b       	std	Y+19, r24	; 0x13
     42e:	9c 8b       	std	Y+20, r25	; 0x14
     430:	ad 8b       	std	Y+21, r26	; 0x15
     432:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
     434:	20 e0       	ldi	r18, 0x00	; 0
     436:	30 e0       	ldi	r19, 0x00	; 0
     438:	40 e8       	ldi	r20, 0x80	; 128
     43a:	5f e3       	ldi	r21, 0x3F	; 63
     43c:	6b 89       	ldd	r22, Y+19	; 0x13
     43e:	7c 89       	ldd	r23, Y+20	; 0x14
     440:	8d 89       	ldd	r24, Y+21	; 0x15
     442:	9e 89       	ldd	r25, Y+22	; 0x16
     444:	0e 94 52 0d 	call	0x1aa4	; 0x1aa4 <__cmpsf2>
     448:	88 23       	and	r24, r24
     44a:	2c f4       	brge	.+10     	; 0x456 <_Z14Test_On_PortA0v+0x180>
		__ticks = 1;
     44c:	81 e0       	ldi	r24, 0x01	; 1
     44e:	90 e0       	ldi	r25, 0x00	; 0
     450:	98 8f       	std	Y+24, r25	; 0x18
     452:	8f 8b       	std	Y+23, r24	; 0x17
     454:	3f c0       	rjmp	.+126    	; 0x4d4 <_Z14Test_On_PortA0v+0x1fe>
	else if (__tmp > 65535)
     456:	20 e0       	ldi	r18, 0x00	; 0
     458:	3f ef       	ldi	r19, 0xFF	; 255
     45a:	4f e7       	ldi	r20, 0x7F	; 127
     45c:	57 e4       	ldi	r21, 0x47	; 71
     45e:	6b 89       	ldd	r22, Y+19	; 0x13
     460:	7c 89       	ldd	r23, Y+20	; 0x14
     462:	8d 89       	ldd	r24, Y+21	; 0x15
     464:	9e 89       	ldd	r25, Y+22	; 0x16
     466:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <__gesf2>
     46a:	18 16       	cp	r1, r24
     46c:	4c f5       	brge	.+82     	; 0x4c0 <_Z14Test_On_PortA0v+0x1ea>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     46e:	20 e0       	ldi	r18, 0x00	; 0
     470:	30 e0       	ldi	r19, 0x00	; 0
     472:	40 e2       	ldi	r20, 0x20	; 32
     474:	51 e4       	ldi	r21, 0x41	; 65
     476:	6f 85       	ldd	r22, Y+15	; 0x0f
     478:	78 89       	ldd	r23, Y+16	; 0x10
     47a:	89 89       	ldd	r24, Y+17	; 0x11
     47c:	9a 89       	ldd	r25, Y+18	; 0x12
     47e:	0e 94 d3 0d 	call	0x1ba6	; 0x1ba6 <__mulsf3>
     482:	dc 01       	movw	r26, r24
     484:	cb 01       	movw	r24, r22
     486:	bc 01       	movw	r22, r24
     488:	cd 01       	movw	r24, r26
     48a:	0e 94 56 0d 	call	0x1aac	; 0x1aac <__fixunssfsi>
     48e:	dc 01       	movw	r26, r24
     490:	cb 01       	movw	r24, r22
     492:	98 8f       	std	Y+24, r25	; 0x18
     494:	8f 8b       	std	Y+23, r24	; 0x17
     496:	0f c0       	rjmp	.+30     	; 0x4b6 <_Z14Test_On_PortA0v+0x1e0>
     498:	89 e1       	ldi	r24, 0x19	; 25
     49a:	90 e0       	ldi	r25, 0x00	; 0
     49c:	9a 8f       	std	Y+26, r25	; 0x1a
     49e:	89 8f       	std	Y+25, r24	; 0x19
     4a0:	89 8d       	ldd	r24, Y+25	; 0x19
     4a2:	9a 8d       	ldd	r25, Y+26	; 0x1a
     4a4:	01 97       	sbiw	r24, 0x01	; 1
     4a6:	f1 f7       	brne	.-4      	; 0x4a4 <_Z14Test_On_PortA0v+0x1ce>
     4a8:	9a 8f       	std	Y+26, r25	; 0x1a
     4aa:	89 8f       	std	Y+25, r24	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4ac:	8f 89       	ldd	r24, Y+23	; 0x17
     4ae:	98 8d       	ldd	r25, Y+24	; 0x18
     4b0:	01 97       	sbiw	r24, 0x01	; 1
     4b2:	98 8f       	std	Y+24, r25	; 0x18
     4b4:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     4b6:	8f 89       	ldd	r24, Y+23	; 0x17
     4b8:	98 8d       	ldd	r25, Y+24	; 0x18
     4ba:	89 2b       	or	r24, r25
     4bc:	69 f7       	brne	.-38     	; 0x498 <_Z14Test_On_PortA0v+0x1c2>
     4be:	14 c0       	rjmp	.+40     	; 0x4e8 <_Z14Test_On_PortA0v+0x212>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     4c0:	6b 89       	ldd	r22, Y+19	; 0x13
     4c2:	7c 89       	ldd	r23, Y+20	; 0x14
     4c4:	8d 89       	ldd	r24, Y+21	; 0x15
     4c6:	9e 89       	ldd	r25, Y+22	; 0x16
     4c8:	0e 94 56 0d 	call	0x1aac	; 0x1aac <__fixunssfsi>
     4cc:	dc 01       	movw	r26, r24
     4ce:	cb 01       	movw	r24, r22
     4d0:	98 8f       	std	Y+24, r25	; 0x18
     4d2:	8f 8b       	std	Y+23, r24	; 0x17
     4d4:	8f 89       	ldd	r24, Y+23	; 0x17
     4d6:	98 8d       	ldd	r25, Y+24	; 0x18
     4d8:	9c 8f       	std	Y+28, r25	; 0x1c
     4da:	8b 8f       	std	Y+27, r24	; 0x1b
     4dc:	8b 8d       	ldd	r24, Y+27	; 0x1b
     4de:	9c 8d       	ldd	r25, Y+28	; 0x1c
     4e0:	01 97       	sbiw	r24, 0x01	; 1
     4e2:	f1 f7       	brne	.-4      	; 0x4e0 <_Z14Test_On_PortA0v+0x20a>
     4e4:	9c 8f       	std	Y+28, r25	; 0x1c
     4e6:	8b 8f       	std	Y+27, r24	; 0x1b
	_delay_ms(250);
	PORTA |= ( 1 << PINA0);
     4e8:	82 e2       	ldi	r24, 0x22	; 34
     4ea:	90 e0       	ldi	r25, 0x00	; 0
     4ec:	22 e2       	ldi	r18, 0x22	; 34
     4ee:	30 e0       	ldi	r19, 0x00	; 0
     4f0:	f9 01       	movw	r30, r18
     4f2:	20 81       	ld	r18, Z
     4f4:	21 60       	ori	r18, 0x01	; 1
     4f6:	fc 01       	movw	r30, r24
     4f8:	20 83       	st	Z, r18
}
     4fa:	6c 96       	adiw	r28, 0x1c	; 28
     4fc:	0f b6       	in	r0, 0x3f	; 63
     4fe:	f8 94       	cli
     500:	de bf       	out	0x3e, r29	; 62
     502:	0f be       	out	0x3f, r0	; 63
     504:	cd bf       	out	0x3d, r28	; 61
     506:	df 91       	pop	r29
     508:	cf 91       	pop	r28
     50a:	08 95       	ret

0000050c <main>:
#include <avr/io.h>
#include <util/delay.h>
#include "headsup.h"


int main(){
     50c:	af 92       	push	r10
     50e:	bf 92       	push	r11
     510:	cf 92       	push	r12
     512:	df 92       	push	r13
     514:	ef 92       	push	r14
     516:	ff 92       	push	r15
     518:	0f 93       	push	r16
     51a:	1f 93       	push	r17
     51c:	cf 93       	push	r28
     51e:	df 93       	push	r29
     520:	cd b7       	in	r28, 0x3d	; 61
     522:	de b7       	in	r29, 0x3e	; 62
     524:	a7 97       	sbiw	r28, 0x27	; 39
     526:	0f b6       	in	r0, 0x3f	; 63
     528:	f8 94       	cli
     52a:	de bf       	out	0x3e, r29	; 62
     52c:	0f be       	out	0x3f, r0	; 63
     52e:	cd bf       	out	0x3d, r28	; 61
	
	rtc_time rtmCurrent;
	lcd lcdNHD;
     530:	ce 01       	movw	r24, r28
     532:	46 96       	adiw	r24, 0x16	; 22
     534:	bc d0       	rcall	.+376    	; 0x6ae <_ZN3lcdC1Ev>
	rtc rtcDS;
     536:	ce 01       	movw	r24, r28
     538:	47 96       	adiw	r24, 0x17	; 23
     53a:	bd d7       	rcall	.+3962   	; 0x14b6 <_ZN3rtcC1Ev>
	unsigned char uchCurrenttime[ LINE_SIZE ] ;


	rtmCurrent.ucSeconds = 0x50;
     53c:	80 e5       	ldi	r24, 0x50	; 80
     53e:	8f 87       	std	Y+15, r24	; 0x0f
	rtmCurrent.ucMinutes = 0x59;
     540:	89 e5       	ldi	r24, 0x59	; 89
     542:	88 8b       	std	Y+16, r24	; 0x10
	rtmCurrent.ucHours = 0x72;
     544:	82 e7       	ldi	r24, 0x72	; 114
     546:	89 8b       	std	Y+17, r24	; 0x11
	
	Test_On_PortA0();
     548:	c6 de       	rcall	.-628    	; 0x2d6 <_Z14Test_On_PortA0v>
	lcdNHD.test_LCD_Screen();
     54a:	ce 01       	movw	r24, r28
     54c:	46 96       	adiw	r24, 0x16	; 22
     54e:	61 d5       	rcall	.+2754   	; 0x1012 <_ZN3lcd15test_LCD_ScreenEv>

	rtcDS.set(&rtmCurrent);
     550:	9e 01       	movw	r18, r28
     552:	21 5f       	subi	r18, 0xF1	; 241
     554:	3f 4f       	sbci	r19, 0xFF	; 255
     556:	ce 01       	movw	r24, r28
     558:	47 96       	adiw	r24, 0x17	; 23
     55a:	b9 01       	movw	r22, r18
     55c:	a4 de       	rcall	.-696    	; 0x2a6 <_ZN3rtc3setEP8rtc_time>

	for(;;){
		rtmCurrent=rtcDS.get();
     55e:	ce 01       	movw	r24, r28
     560:	47 96       	adiw	r24, 0x17	; 23
     562:	2c de       	rcall	.-936    	; 0x1bc <_ZN3rtc3getEv>
     564:	a2 2e       	mov	r10, r18
     566:	b3 2e       	mov	r11, r19
     568:	c4 2e       	mov	r12, r20
     56a:	d5 2e       	mov	r13, r21
     56c:	e6 2e       	mov	r14, r22
     56e:	f7 2e       	mov	r15, r23
     570:	08 2f       	mov	r16, r24
     572:	19 2f       	mov	r17, r25
     574:	2a 2d       	mov	r18, r10
     576:	3b 2d       	mov	r19, r11
     578:	4c 2d       	mov	r20, r12
     57a:	5d 2d       	mov	r21, r13
     57c:	6e 2d       	mov	r22, r14
     57e:	7f 2d       	mov	r23, r15
     580:	80 2f       	mov	r24, r16
     582:	91 2f       	mov	r25, r17
     584:	2f 87       	std	Y+15, r18	; 0x0f
     586:	38 8b       	std	Y+16, r19	; 0x10
     588:	49 8b       	std	Y+17, r20	; 0x11
     58a:	5a 8b       	std	Y+18, r21	; 0x12
     58c:	6b 8b       	std	Y+19, r22	; 0x13
     58e:	7c 8b       	std	Y+20, r23	; 0x14
     590:	8d 8b       	std	Y+21, r24	; 0x15
		rtcDS.rtm_to_char( rtmCurrent, uchCurrenttime, LINE_SIZE );
     592:	9e 01       	movw	r18, r28
     594:	28 5e       	subi	r18, 0xE8	; 232
     596:	3f 4f       	sbci	r19, 0xFF	; 255
     598:	ce 01       	movw	r24, r28
     59a:	47 96       	adiw	r24, 0x17	; 23
     59c:	68 94       	set
     59e:	cc 24       	eor	r12, r12
     5a0:	c4 f8       	bld	r12, 4
     5a2:	d1 2c       	mov	r13, r1
     5a4:	79 01       	movw	r14, r18
     5a6:	0f 85       	ldd	r16, Y+15	; 0x0f
     5a8:	18 89       	ldd	r17, Y+16	; 0x10
     5aa:	29 89       	ldd	r18, Y+17	; 0x11
     5ac:	3a 89       	ldd	r19, Y+18	; 0x12
     5ae:	4b 89       	ldd	r20, Y+19	; 0x13
     5b0:	5c 89       	ldd	r21, Y+20	; 0x14
     5b2:	6d 89       	ldd	r22, Y+21	; 0x15
     5b4:	0e 94 07 0c 	call	0x180e	; 0x180e <_ZN3rtc11rtm_to_charE8rtc_timePhj>
		lcdNHD.print( uchCurrenttime , LINE_TOP );
     5b8:	9e 01       	movw	r18, r28
     5ba:	28 5e       	subi	r18, 0xE8	; 232
     5bc:	3f 4f       	sbci	r19, 0xFF	; 255
     5be:	ce 01       	movw	r24, r28
     5c0:	46 96       	adiw	r24, 0x16	; 22
     5c2:	40 e0       	ldi	r20, 0x00	; 0
     5c4:	b9 01       	movw	r22, r18
     5c6:	6c d6       	rcall	.+3288   	; 0x12a0 <_ZN3lcd5printEPhh>
     5c8:	80 e0       	ldi	r24, 0x00	; 0
     5ca:	90 e0       	ldi	r25, 0x00	; 0
     5cc:	aa e7       	ldi	r26, 0x7A	; 122
     5ce:	b4 e4       	ldi	r27, 0x44	; 68
     5d0:	89 83       	std	Y+1, r24	; 0x01
     5d2:	9a 83       	std	Y+2, r25	; 0x02
     5d4:	ab 83       	std	Y+3, r26	; 0x03
     5d6:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     5d8:	20 e0       	ldi	r18, 0x00	; 0
     5da:	30 e0       	ldi	r19, 0x00	; 0
     5dc:	4a e7       	ldi	r20, 0x7A	; 122
     5de:	53 e4       	ldi	r21, 0x43	; 67
     5e0:	69 81       	ldd	r22, Y+1	; 0x01
     5e2:	7a 81       	ldd	r23, Y+2	; 0x02
     5e4:	8b 81       	ldd	r24, Y+3	; 0x03
     5e6:	9c 81       	ldd	r25, Y+4	; 0x04
     5e8:	0e 94 d3 0d 	call	0x1ba6	; 0x1ba6 <__mulsf3>
     5ec:	dc 01       	movw	r26, r24
     5ee:	cb 01       	movw	r24, r22
     5f0:	8d 83       	std	Y+5, r24	; 0x05
     5f2:	9e 83       	std	Y+6, r25	; 0x06
     5f4:	af 83       	std	Y+7, r26	; 0x07
     5f6:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     5f8:	20 e0       	ldi	r18, 0x00	; 0
     5fa:	30 e0       	ldi	r19, 0x00	; 0
     5fc:	40 e8       	ldi	r20, 0x80	; 128
     5fe:	5f e3       	ldi	r21, 0x3F	; 63
     600:	6d 81       	ldd	r22, Y+5	; 0x05
     602:	7e 81       	ldd	r23, Y+6	; 0x06
     604:	8f 81       	ldd	r24, Y+7	; 0x07
     606:	98 85       	ldd	r25, Y+8	; 0x08
     608:	0e 94 52 0d 	call	0x1aa4	; 0x1aa4 <__cmpsf2>
     60c:	88 23       	and	r24, r24
     60e:	2c f4       	brge	.+10     	; 0x61a <main+0x10e>
		__ticks = 1;
     610:	81 e0       	ldi	r24, 0x01	; 1
     612:	90 e0       	ldi	r25, 0x00	; 0
     614:	9a 87       	std	Y+10, r25	; 0x0a
     616:	89 87       	std	Y+9, r24	; 0x09
     618:	3f c0       	rjmp	.+126    	; 0x698 <main+0x18c>
	else if (__tmp > 65535)
     61a:	20 e0       	ldi	r18, 0x00	; 0
     61c:	3f ef       	ldi	r19, 0xFF	; 255
     61e:	4f e7       	ldi	r20, 0x7F	; 127
     620:	57 e4       	ldi	r21, 0x47	; 71
     622:	6d 81       	ldd	r22, Y+5	; 0x05
     624:	7e 81       	ldd	r23, Y+6	; 0x06
     626:	8f 81       	ldd	r24, Y+7	; 0x07
     628:	98 85       	ldd	r25, Y+8	; 0x08
     62a:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <__gesf2>
     62e:	18 16       	cp	r1, r24
     630:	4c f5       	brge	.+82     	; 0x684 <main+0x178>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     632:	20 e0       	ldi	r18, 0x00	; 0
     634:	30 e0       	ldi	r19, 0x00	; 0
     636:	40 e2       	ldi	r20, 0x20	; 32
     638:	51 e4       	ldi	r21, 0x41	; 65
     63a:	69 81       	ldd	r22, Y+1	; 0x01
     63c:	7a 81       	ldd	r23, Y+2	; 0x02
     63e:	8b 81       	ldd	r24, Y+3	; 0x03
     640:	9c 81       	ldd	r25, Y+4	; 0x04
     642:	0e 94 d3 0d 	call	0x1ba6	; 0x1ba6 <__mulsf3>
     646:	dc 01       	movw	r26, r24
     648:	cb 01       	movw	r24, r22
     64a:	bc 01       	movw	r22, r24
     64c:	cd 01       	movw	r24, r26
     64e:	0e 94 56 0d 	call	0x1aac	; 0x1aac <__fixunssfsi>
     652:	dc 01       	movw	r26, r24
     654:	cb 01       	movw	r24, r22
     656:	9a 87       	std	Y+10, r25	; 0x0a
     658:	89 87       	std	Y+9, r24	; 0x09
     65a:	0f c0       	rjmp	.+30     	; 0x67a <main+0x16e>
     65c:	89 e1       	ldi	r24, 0x19	; 25
     65e:	90 e0       	ldi	r25, 0x00	; 0
     660:	9c 87       	std	Y+12, r25	; 0x0c
     662:	8b 87       	std	Y+11, r24	; 0x0b
     664:	8b 85       	ldd	r24, Y+11	; 0x0b
     666:	9c 85       	ldd	r25, Y+12	; 0x0c
     668:	01 97       	sbiw	r24, 0x01	; 1
     66a:	f1 f7       	brne	.-4      	; 0x668 <main+0x15c>
     66c:	9c 87       	std	Y+12, r25	; 0x0c
     66e:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     670:	89 85       	ldd	r24, Y+9	; 0x09
     672:	9a 85       	ldd	r25, Y+10	; 0x0a
     674:	01 97       	sbiw	r24, 0x01	; 1
     676:	9a 87       	std	Y+10, r25	; 0x0a
     678:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     67a:	89 85       	ldd	r24, Y+9	; 0x09
     67c:	9a 85       	ldd	r25, Y+10	; 0x0a
     67e:	89 2b       	or	r24, r25
     680:	69 f7       	brne	.-38     	; 0x65c <main+0x150>
     682:	14 c0       	rjmp	.+40     	; 0x6ac <main+0x1a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     684:	6d 81       	ldd	r22, Y+5	; 0x05
     686:	7e 81       	ldd	r23, Y+6	; 0x06
     688:	8f 81       	ldd	r24, Y+7	; 0x07
     68a:	98 85       	ldd	r25, Y+8	; 0x08
     68c:	0e 94 56 0d 	call	0x1aac	; 0x1aac <__fixunssfsi>
     690:	dc 01       	movw	r26, r24
     692:	cb 01       	movw	r24, r22
     694:	9a 87       	std	Y+10, r25	; 0x0a
     696:	89 87       	std	Y+9, r24	; 0x09
     698:	89 85       	ldd	r24, Y+9	; 0x09
     69a:	9a 85       	ldd	r25, Y+10	; 0x0a
     69c:	9e 87       	std	Y+14, r25	; 0x0e
     69e:	8d 87       	std	Y+13, r24	; 0x0d
     6a0:	8d 85       	ldd	r24, Y+13	; 0x0d
     6a2:	9e 85       	ldd	r25, Y+14	; 0x0e
     6a4:	01 97       	sbiw	r24, 0x01	; 1
     6a6:	f1 f7       	brne	.-4      	; 0x6a4 <main+0x198>
     6a8:	9e 87       	std	Y+14, r25	; 0x0e
     6aa:	8d 87       	std	Y+13, r24	; 0x0d
		_delay_ms( 1000 );
	}
	
	return 0;
     6ac:	58 cf       	rjmp	.-336    	; 0x55e <main+0x52>

000006ae <_ZN3lcdC1Ev>:
}

void lcd::TWI_ClearFlagAndEnableWithAck()
{
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);// Clear Flag and Enable
}
     6ae:	cf 93       	push	r28
     6b0:	df 93       	push	r29
     6b2:	cd b7       	in	r28, 0x3d	; 61
     6b4:	de b7       	in	r29, 0x3e	; 62
     6b6:	60 97       	sbiw	r28, 0x10	; 16
     6b8:	0f b6       	in	r0, 0x3f	; 63
     6ba:	f8 94       	cli
     6bc:	de bf       	out	0x3e, r29	; 62
     6be:	0f be       	out	0x3f, r0	; 63
     6c0:	cd bf       	out	0x3d, r28	; 61
     6c2:	98 8b       	std	Y+16, r25	; 0x10
     6c4:	8f 87       	std	Y+15, r24	; 0x0f
     6c6:	8f 85       	ldd	r24, Y+15	; 0x0f
     6c8:	98 89       	ldd	r25, Y+16	; 0x10
     6ca:	7e d0       	rcall	.+252    	; 0x7c8 <_ZN3lcd8TWI_INITEv>
     6cc:	8f 85       	ldd	r24, Y+15	; 0x0f
     6ce:	98 89       	ldd	r25, Y+16	; 0x10
     6d0:	81 d2       	rcall	.+1282   	; 0xbd4 <_ZN3lcd8init_LCDEv>
     6d2:	80 e0       	ldi	r24, 0x00	; 0
     6d4:	90 e0       	ldi	r25, 0x00	; 0
     6d6:	a0 ea       	ldi	r26, 0xA0	; 160
     6d8:	b1 e4       	ldi	r27, 0x41	; 65
     6da:	89 83       	std	Y+1, r24	; 0x01
     6dc:	9a 83       	std	Y+2, r25	; 0x02
     6de:	ab 83       	std	Y+3, r26	; 0x03
     6e0:	bc 83       	std	Y+4, r27	; 0x04
     6e2:	20 e0       	ldi	r18, 0x00	; 0
     6e4:	30 e0       	ldi	r19, 0x00	; 0
     6e6:	4a e7       	ldi	r20, 0x7A	; 122
     6e8:	53 e4       	ldi	r21, 0x43	; 67
     6ea:	69 81       	ldd	r22, Y+1	; 0x01
     6ec:	7a 81       	ldd	r23, Y+2	; 0x02
     6ee:	8b 81       	ldd	r24, Y+3	; 0x03
     6f0:	9c 81       	ldd	r25, Y+4	; 0x04
     6f2:	0e 94 d3 0d 	call	0x1ba6	; 0x1ba6 <__mulsf3>
     6f6:	dc 01       	movw	r26, r24
     6f8:	cb 01       	movw	r24, r22
     6fa:	8d 83       	std	Y+5, r24	; 0x05
     6fc:	9e 83       	std	Y+6, r25	; 0x06
     6fe:	af 83       	std	Y+7, r26	; 0x07
     700:	b8 87       	std	Y+8, r27	; 0x08
     702:	20 e0       	ldi	r18, 0x00	; 0
     704:	30 e0       	ldi	r19, 0x00	; 0
     706:	40 e8       	ldi	r20, 0x80	; 128
     708:	5f e3       	ldi	r21, 0x3F	; 63
     70a:	6d 81       	ldd	r22, Y+5	; 0x05
     70c:	7e 81       	ldd	r23, Y+6	; 0x06
     70e:	8f 81       	ldd	r24, Y+7	; 0x07
     710:	98 85       	ldd	r25, Y+8	; 0x08
     712:	0e 94 52 0d 	call	0x1aa4	; 0x1aa4 <__cmpsf2>
     716:	88 23       	and	r24, r24
     718:	2c f4       	brge	.+10     	; 0x724 <_ZN3lcdC1Ev+0x76>
     71a:	81 e0       	ldi	r24, 0x01	; 1
     71c:	90 e0       	ldi	r25, 0x00	; 0
     71e:	9a 87       	std	Y+10, r25	; 0x0a
     720:	89 87       	std	Y+9, r24	; 0x09
     722:	3f c0       	rjmp	.+126    	; 0x7a2 <_ZN3lcdC1Ev+0xf4>
     724:	20 e0       	ldi	r18, 0x00	; 0
     726:	3f ef       	ldi	r19, 0xFF	; 255
     728:	4f e7       	ldi	r20, 0x7F	; 127
     72a:	57 e4       	ldi	r21, 0x47	; 71
     72c:	6d 81       	ldd	r22, Y+5	; 0x05
     72e:	7e 81       	ldd	r23, Y+6	; 0x06
     730:	8f 81       	ldd	r24, Y+7	; 0x07
     732:	98 85       	ldd	r25, Y+8	; 0x08
     734:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <__gesf2>
     738:	18 16       	cp	r1, r24
     73a:	4c f5       	brge	.+82     	; 0x78e <_ZN3lcdC1Ev+0xe0>
     73c:	20 e0       	ldi	r18, 0x00	; 0
     73e:	30 e0       	ldi	r19, 0x00	; 0
     740:	40 e2       	ldi	r20, 0x20	; 32
     742:	51 e4       	ldi	r21, 0x41	; 65
     744:	69 81       	ldd	r22, Y+1	; 0x01
     746:	7a 81       	ldd	r23, Y+2	; 0x02
     748:	8b 81       	ldd	r24, Y+3	; 0x03
     74a:	9c 81       	ldd	r25, Y+4	; 0x04
     74c:	0e 94 d3 0d 	call	0x1ba6	; 0x1ba6 <__mulsf3>
     750:	dc 01       	movw	r26, r24
     752:	cb 01       	movw	r24, r22
     754:	bc 01       	movw	r22, r24
     756:	cd 01       	movw	r24, r26
     758:	0e 94 56 0d 	call	0x1aac	; 0x1aac <__fixunssfsi>
     75c:	dc 01       	movw	r26, r24
     75e:	cb 01       	movw	r24, r22
     760:	9a 87       	std	Y+10, r25	; 0x0a
     762:	89 87       	std	Y+9, r24	; 0x09
     764:	0f c0       	rjmp	.+30     	; 0x784 <_ZN3lcdC1Ev+0xd6>
     766:	89 e1       	ldi	r24, 0x19	; 25
     768:	90 e0       	ldi	r25, 0x00	; 0
     76a:	9c 87       	std	Y+12, r25	; 0x0c
     76c:	8b 87       	std	Y+11, r24	; 0x0b
     76e:	8b 85       	ldd	r24, Y+11	; 0x0b
     770:	9c 85       	ldd	r25, Y+12	; 0x0c
     772:	01 97       	sbiw	r24, 0x01	; 1
     774:	f1 f7       	brne	.-4      	; 0x772 <_ZN3lcdC1Ev+0xc4>
     776:	9c 87       	std	Y+12, r25	; 0x0c
     778:	8b 87       	std	Y+11, r24	; 0x0b
     77a:	89 85       	ldd	r24, Y+9	; 0x09
     77c:	9a 85       	ldd	r25, Y+10	; 0x0a
     77e:	01 97       	sbiw	r24, 0x01	; 1
     780:	9a 87       	std	Y+10, r25	; 0x0a
     782:	89 87       	std	Y+9, r24	; 0x09
     784:	89 85       	ldd	r24, Y+9	; 0x09
     786:	9a 85       	ldd	r25, Y+10	; 0x0a
     788:	89 2b       	or	r24, r25
     78a:	69 f7       	brne	.-38     	; 0x766 <_ZN3lcdC1Ev+0xb8>
     78c:	14 c0       	rjmp	.+40     	; 0x7b6 <_ZN3lcdC1Ev+0x108>
     78e:	6d 81       	ldd	r22, Y+5	; 0x05
     790:	7e 81       	ldd	r23, Y+6	; 0x06
     792:	8f 81       	ldd	r24, Y+7	; 0x07
     794:	98 85       	ldd	r25, Y+8	; 0x08
     796:	0e 94 56 0d 	call	0x1aac	; 0x1aac <__fixunssfsi>
     79a:	dc 01       	movw	r26, r24
     79c:	cb 01       	movw	r24, r22
     79e:	9a 87       	std	Y+10, r25	; 0x0a
     7a0:	89 87       	std	Y+9, r24	; 0x09
     7a2:	89 85       	ldd	r24, Y+9	; 0x09
     7a4:	9a 85       	ldd	r25, Y+10	; 0x0a
     7a6:	9e 87       	std	Y+14, r25	; 0x0e
     7a8:	8d 87       	std	Y+13, r24	; 0x0d
     7aa:	8d 85       	ldd	r24, Y+13	; 0x0d
     7ac:	9e 85       	ldd	r25, Y+14	; 0x0e
     7ae:	01 97       	sbiw	r24, 0x01	; 1
     7b0:	f1 f7       	brne	.-4      	; 0x7ae <_ZN3lcdC1Ev+0x100>
     7b2:	9e 87       	std	Y+14, r25	; 0x0e
     7b4:	8d 87       	std	Y+13, r24	; 0x0d
     7b6:	60 96       	adiw	r28, 0x10	; 16
     7b8:	0f b6       	in	r0, 0x3f	; 63
     7ba:	f8 94       	cli
     7bc:	de bf       	out	0x3e, r29	; 62
     7be:	0f be       	out	0x3f, r0	; 63
     7c0:	cd bf       	out	0x3d, r28	; 61
     7c2:	df 91       	pop	r29
     7c4:	cf 91       	pop	r28
     7c6:	08 95       	ret

000007c8 <_ZN3lcd8TWI_INITEv>:
     7c8:	cf 93       	push	r28
     7ca:	df 93       	push	r29
     7cc:	00 d0       	rcall	.+0      	; 0x7ce <_ZN3lcd8TWI_INITEv+0x6>
     7ce:	cd b7       	in	r28, 0x3d	; 61
     7d0:	de b7       	in	r29, 0x3e	; 62
     7d2:	9a 83       	std	Y+2, r25	; 0x02
     7d4:	89 83       	std	Y+1, r24	; 0x01
     7d6:	84 e6       	ldi	r24, 0x64	; 100
     7d8:	90 e0       	ldi	r25, 0x00	; 0
     7da:	24 e6       	ldi	r18, 0x64	; 100
     7dc:	30 e0       	ldi	r19, 0x00	; 0
     7de:	f9 01       	movw	r30, r18
     7e0:	20 81       	ld	r18, Z
     7e2:	2f 77       	andi	r18, 0x7F	; 127
     7e4:	fc 01       	movw	r30, r24
     7e6:	20 83       	st	Z, r18
     7e8:	8c eb       	ldi	r24, 0xBC	; 188
     7ea:	90 e0       	ldi	r25, 0x00	; 0
     7ec:	2c eb       	ldi	r18, 0xBC	; 188
     7ee:	30 e0       	ldi	r19, 0x00	; 0
     7f0:	f9 01       	movw	r30, r18
     7f2:	20 81       	ld	r18, Z
     7f4:	2e 7f       	andi	r18, 0xFE	; 254
     7f6:	fc 01       	movw	r30, r24
     7f8:	20 83       	st	Z, r18
     7fa:	88 eb       	ldi	r24, 0xB8	; 184
     7fc:	90 e0       	ldi	r25, 0x00	; 0
     7fe:	22 e0       	ldi	r18, 0x02	; 2
     800:	fc 01       	movw	r30, r24
     802:	20 83       	st	Z, r18
     804:	89 eb       	ldi	r24, 0xB9	; 185
     806:	90 e0       	ldi	r25, 0x00	; 0
     808:	29 eb       	ldi	r18, 0xB9	; 185
     80a:	30 e0       	ldi	r19, 0x00	; 0
     80c:	f9 01       	movw	r30, r18
     80e:	20 81       	ld	r18, Z
     810:	2d 7f       	andi	r18, 0xFD	; 253
     812:	fc 01       	movw	r30, r24
     814:	20 83       	st	Z, r18
     816:	0f 90       	pop	r0
     818:	0f 90       	pop	r0
     81a:	df 91       	pop	r29
     81c:	cf 91       	pop	r28
     81e:	08 95       	ret

00000820 <_ZN3lcd23TWI_CheckStatusRegisterEh>:
     820:	cf 93       	push	r28
     822:	df 93       	push	r29
     824:	cd b7       	in	r28, 0x3d	; 61
     826:	de b7       	in	r29, 0x3e	; 62
     828:	2a 97       	sbiw	r28, 0x0a	; 10
     82a:	0f b6       	in	r0, 0x3f	; 63
     82c:	f8 94       	cli
     82e:	de bf       	out	0x3e, r29	; 62
     830:	0f be       	out	0x3f, r0	; 63
     832:	cd bf       	out	0x3d, r28	; 61
     834:	9a 83       	std	Y+2, r25	; 0x02
     836:	89 83       	std	Y+1, r24	; 0x01
     838:	6b 83       	std	Y+3, r22	; 0x03
     83a:	89 eb       	ldi	r24, 0xB9	; 185
     83c:	90 e0       	ldi	r25, 0x00	; 0
     83e:	fc 01       	movw	r30, r24
     840:	80 81       	ld	r24, Z
     842:	2a 96       	adiw	r28, 0x0a	; 10
     844:	0f b6       	in	r0, 0x3f	; 63
     846:	f8 94       	cli
     848:	de bf       	out	0x3e, r29	; 62
     84a:	0f be       	out	0x3f, r0	; 63
     84c:	cd bf       	out	0x3d, r28	; 61
     84e:	df 91       	pop	r29
     850:	cf 91       	pop	r28
     852:	08 95       	ret

00000854 <_ZN3lcd22TWI_ClearFlagAndEnableEv>:
     854:	cf 93       	push	r28
     856:	df 93       	push	r29
     858:	00 d0       	rcall	.+0      	; 0x85a <_ZN3lcd22TWI_ClearFlagAndEnableEv+0x6>
     85a:	cd b7       	in	r28, 0x3d	; 61
     85c:	de b7       	in	r29, 0x3e	; 62
     85e:	9a 83       	std	Y+2, r25	; 0x02
     860:	89 83       	std	Y+1, r24	; 0x01
     862:	8c eb       	ldi	r24, 0xBC	; 188
     864:	90 e0       	ldi	r25, 0x00	; 0
     866:	24 e8       	ldi	r18, 0x84	; 132
     868:	fc 01       	movw	r30, r24
     86a:	20 83       	st	Z, r18
     86c:	0f 90       	pop	r0
     86e:	0f 90       	pop	r0
     870:	df 91       	pop	r29
     872:	cf 91       	pop	r28
     874:	08 95       	ret

00000876 <_ZN3lcd8TWI_STOPEv>:

void lcd::TWI_STOP(){
     876:	cf 93       	push	r28
     878:	df 93       	push	r29
     87a:	00 d0       	rcall	.+0      	; 0x87c <_ZN3lcd8TWI_STOPEv+0x6>
     87c:	cd b7       	in	r28, 0x3d	; 61
     87e:	de b7       	in	r29, 0x3e	; 62
     880:	9a 83       	std	Y+2, r25	; 0x02
     882:	89 83       	std	Y+1, r24	; 0x01
	
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
     884:	8c eb       	ldi	r24, 0xBC	; 188
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	24 e9       	ldi	r18, 0x94	; 148
     88a:	fc 01       	movw	r30, r24
     88c:	20 83       	st	Z, r18
	
}
     88e:	0f 90       	pop	r0
     890:	0f 90       	pop	r0
     892:	df 91       	pop	r29
     894:	cf 91       	pop	r28
     896:	08 95       	ret

00000898 <_ZN3lcd22TWI_StartCommunicationEv>:

void lcd::TWI_StartCommunication(){
     898:	cf 93       	push	r28
     89a:	df 93       	push	r29
     89c:	00 d0       	rcall	.+0      	; 0x89e <_ZN3lcd22TWI_StartCommunicationEv+0x6>
     89e:	cd b7       	in	r28, 0x3d	; 61
     8a0:	de b7       	in	r29, 0x3e	; 62
     8a2:	9a 83       	std	Y+2, r25	; 0x02
     8a4:	89 83       	std	Y+1, r24	; 0x01
	
	TWCR = (1 << TWEN) | (1 << TWINT) | (1 << TWSTA);
     8a6:	8c eb       	ldi	r24, 0xBC	; 188
     8a8:	90 e0       	ldi	r25, 0x00	; 0
     8aa:	24 ea       	ldi	r18, 0xA4	; 164
     8ac:	fc 01       	movw	r30, r24
     8ae:	20 83       	st	Z, r18
	while ( ! (TWCR & (1 << TWINT)));				// wait for flag to be set
     8b0:	00 00       	nop
     8b2:	8c eb       	ldi	r24, 0xBC	; 188
     8b4:	90 e0       	ldi	r25, 0x00	; 0
     8b6:	fc 01       	movw	r30, r24
     8b8:	80 81       	ld	r24, Z
     8ba:	80 95       	com	r24
     8bc:	88 1f       	adc	r24, r24
     8be:	88 27       	eor	r24, r24
     8c0:	88 1f       	adc	r24, r24
     8c2:	88 23       	and	r24, r24
     8c4:	b1 f7       	brne	.-20     	; 0x8b2 <_ZN3lcd22TWI_StartCommunicationEv+0x1a>
	TWI_CheckStatusRegister(TW_START);
     8c6:	89 81       	ldd	r24, Y+1	; 0x01
     8c8:	9a 81       	ldd	r25, Y+2	; 0x02
     8ca:	68 e0       	ldi	r22, 0x08	; 8
     8cc:	a9 df       	rcall	.-174    	; 0x820 <_ZN3lcd23TWI_CheckStatusRegisterEh>
	
}
     8ce:	0f 90       	pop	r0
     8d0:	0f 90       	pop	r0
     8d2:	df 91       	pop	r29
     8d4:	cf 91       	pop	r28
     8d6:	08 95       	ret

000008d8 <_ZN3lcd16TWI_TransmitDataEhh>:

void lcd::TWI_TransmitData(uint8_t TwiData, uint8_t StatusCode){
     8d8:	cf 93       	push	r28
     8da:	df 93       	push	r29
     8dc:	00 d0       	rcall	.+0      	; 0x8de <_ZN3lcd16TWI_TransmitDataEhh+0x6>
     8de:	00 d0       	rcall	.+0      	; 0x8e0 <_ZN3lcd16TWI_TransmitDataEhh+0x8>
     8e0:	cd b7       	in	r28, 0x3d	; 61
     8e2:	de b7       	in	r29, 0x3e	; 62
     8e4:	9a 83       	std	Y+2, r25	; 0x02
     8e6:	89 83       	std	Y+1, r24	; 0x01
     8e8:	6b 83       	std	Y+3, r22	; 0x03
     8ea:	4c 83       	std	Y+4, r20	; 0x04
	
	TWDR = TwiData;
     8ec:	8b eb       	ldi	r24, 0xBB	; 187
     8ee:	90 e0       	ldi	r25, 0x00	; 0
     8f0:	2b 81       	ldd	r18, Y+3	; 0x03
     8f2:	fc 01       	movw	r30, r24
     8f4:	20 83       	st	Z, r18
	/*After TWDR is loaded with SLA+W, a specific val must be written to TWCR, instucting the TWINT hardware
	to transmit the SLA+W present in TWDR*/
	TWI_ClearFlagAndEnable();
     8f6:	89 81       	ldd	r24, Y+1	; 0x01
     8f8:	9a 81       	ldd	r25, Y+2	; 0x02
     8fa:	ac df       	rcall	.-168    	; 0x854 <_ZN3lcd22TWI_ClearFlagAndEnableEv>
	while ( ! (TWCR & (1 << TWINT)));	// wait for flag to be set
     8fc:	00 00       	nop
     8fe:	8c eb       	ldi	r24, 0xBC	; 188
     900:	90 e0       	ldi	r25, 0x00	; 0
     902:	fc 01       	movw	r30, r24
     904:	80 81       	ld	r24, Z
     906:	80 95       	com	r24
     908:	88 1f       	adc	r24, r24
     90a:	88 27       	eor	r24, r24
     90c:	88 1f       	adc	r24, r24
     90e:	88 23       	and	r24, r24
     910:	b1 f7       	brne	.-20     	; 0x8fe <_ZN3lcd16TWI_TransmitDataEhh+0x26>
	TWI_CheckStatusRegister(StatusCode);	// works!!
     912:	89 81       	ldd	r24, Y+1	; 0x01
     914:	9a 81       	ldd	r25, Y+2	; 0x02
     916:	6c 81       	ldd	r22, Y+4	; 0x04
     918:	83 df       	rcall	.-250    	; 0x820 <_ZN3lcd23TWI_CheckStatusRegisterEh>

}
     91a:	0f 90       	pop	r0
     91c:	0f 90       	pop	r0
     91e:	0f 90       	pop	r0
     920:	0f 90       	pop	r0
     922:	df 91       	pop	r29
     924:	cf 91       	pop	r28
     926:	08 95       	ret

00000928 <_ZN3lcd4ShowEPh>:


void lcd::Show(unsigned char* text){
     928:	cf 93       	push	r28
     92a:	df 93       	push	r29
     92c:	00 d0       	rcall	.+0      	; 0x92e <_ZN3lcd4ShowEPh+0x6>
     92e:	00 d0       	rcall	.+0      	; 0x930 <_ZN3lcd4ShowEPh+0x8>
     930:	00 d0       	rcall	.+0      	; 0x932 <_ZN3lcd4ShowEPh+0xa>
     932:	cd b7       	in	r28, 0x3d	; 61
     934:	de b7       	in	r29, 0x3e	; 62
     936:	9c 83       	std	Y+4, r25	; 0x04
     938:	8b 83       	std	Y+3, r24	; 0x03
     93a:	7e 83       	std	Y+6, r23	; 0x06
     93c:	6d 83       	std	Y+5, r22	; 0x05
	
	TWI_StartCommunication();
     93e:	8b 81       	ldd	r24, Y+3	; 0x03
     940:	9c 81       	ldd	r25, Y+4	; 0x04
     942:	aa df       	rcall	.-172    	; 0x898 <_ZN3lcd22TWI_StartCommunicationEv>
	
	TWI_TransmitData( SLA, TW_MT_SLA_ACK );
     944:	8b 81       	ldd	r24, Y+3	; 0x03
     946:	9c 81       	ldd	r25, Y+4	; 0x04
     948:	48 e1       	ldi	r20, 0x18	; 24
     94a:	6c e7       	ldi	r22, 0x7C	; 124
     94c:	c5 df       	rcall	.-118    	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData( SEND_DATA, TW_MT_DATA_ACK );
     94e:	8b 81       	ldd	r24, Y+3	; 0x03
     950:	9c 81       	ldd	r25, Y+4	; 0x04
     952:	48 e2       	ldi	r20, 0x28	; 40
     954:	60 e4       	ldi	r22, 0x40	; 64
     956:	c0 df       	rcall	.-128    	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	for( int valN = 0; valN < LINE_SIZE; valN++ ){
     958:	1a 82       	std	Y+2, r1	; 0x02
     95a:	19 82       	std	Y+1, r1	; 0x01
     95c:	13 c0       	rjmp	.+38     	; 0x984 <_ZN3lcd4ShowEPh+0x5c>
		TWI_TransmitData( *text, TW_MT_DATA_ACK );
     95e:	8d 81       	ldd	r24, Y+5	; 0x05
     960:	9e 81       	ldd	r25, Y+6	; 0x06
     962:	fc 01       	movw	r30, r24
     964:	20 81       	ld	r18, Z
     966:	8b 81       	ldd	r24, Y+3	; 0x03
     968:	9c 81       	ldd	r25, Y+4	; 0x04
     96a:	48 e2       	ldi	r20, 0x28	; 40
     96c:	62 2f       	mov	r22, r18
     96e:	b4 df       	rcall	.-152    	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
		++text;
     970:	8d 81       	ldd	r24, Y+5	; 0x05
     972:	9e 81       	ldd	r25, Y+6	; 0x06
     974:	01 96       	adiw	r24, 0x01	; 1
     976:	9e 83       	std	Y+6, r25	; 0x06
     978:	8d 83       	std	Y+5, r24	; 0x05
	
	TWI_StartCommunication();
	
	TWI_TransmitData( SLA, TW_MT_SLA_ACK );
	TWI_TransmitData( SEND_DATA, TW_MT_DATA_ACK );
	for( int valN = 0; valN < LINE_SIZE; valN++ ){
     97a:	89 81       	ldd	r24, Y+1	; 0x01
     97c:	9a 81       	ldd	r25, Y+2	; 0x02
     97e:	01 96       	adiw	r24, 0x01	; 1
     980:	9a 83       	std	Y+2, r25	; 0x02
     982:	89 83       	std	Y+1, r24	; 0x01
     984:	89 81       	ldd	r24, Y+1	; 0x01
     986:	9a 81       	ldd	r25, Y+2	; 0x02
     988:	40 97       	sbiw	r24, 0x10	; 16
     98a:	4c f3       	brlt	.-46     	; 0x95e <_ZN3lcd4ShowEPh+0x36>
		TWI_TransmitData( *text, TW_MT_DATA_ACK );
		++text;
	}
		
	TWI_STOP();
     98c:	8b 81       	ldd	r24, Y+3	; 0x03
     98e:	9c 81       	ldd	r25, Y+4	; 0x04
     990:	72 df       	rcall	.-284    	; 0x876 <_ZN3lcd8TWI_STOPEv>
	
}
     992:	26 96       	adiw	r28, 0x06	; 6
     994:	0f b6       	in	r0, 0x3f	; 63
     996:	f8 94       	cli
     998:	de bf       	out	0x3e, r29	; 62
     99a:	0f be       	out	0x3f, r0	; 63
     99c:	cd bf       	out	0x3d, r28	; 61
     99e:	df 91       	pop	r29
     9a0:	cf 91       	pop	r28
     9a2:	08 95       	ret

000009a4 <_ZN3lcd11SelectLine1Ev>:


void lcd::SelectLine1(void){
     9a4:	cf 93       	push	r28
     9a6:	df 93       	push	r29
     9a8:	00 d0       	rcall	.+0      	; 0x9aa <_ZN3lcd11SelectLine1Ev+0x6>
     9aa:	cd b7       	in	r28, 0x3d	; 61
     9ac:	de b7       	in	r29, 0x3e	; 62
     9ae:	9a 83       	std	Y+2, r25	; 0x02
     9b0:	89 83       	std	Y+1, r24	; 0x01
	
	TWI_StartCommunication();
     9b2:	89 81       	ldd	r24, Y+1	; 0x01
     9b4:	9a 81       	ldd	r25, Y+2	; 0x02
     9b6:	70 df       	rcall	.-288    	; 0x898 <_ZN3lcd22TWI_StartCommunicationEv>
	
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     9b8:	89 81       	ldd	r24, Y+1	; 0x01
     9ba:	9a 81       	ldd	r25, Y+2	; 0x02
     9bc:	48 e1       	ldi	r20, 0x18	; 24
     9be:	6c e7       	ldi	r22, 0x7C	; 124
     9c0:	8b df       	rcall	.-234    	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     9c2:	89 81       	ldd	r24, Y+1	; 0x01
     9c4:	9a 81       	ldd	r25, Y+2	; 0x02
     9c6:	48 e2       	ldi	r20, 0x28	; 40
     9c8:	60 e0       	ldi	r22, 0x00	; 0
     9ca:	86 df       	rcall	.-244    	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(LINE_1,TW_MT_DATA_ACK);
     9cc:	89 81       	ldd	r24, Y+1	; 0x01
     9ce:	9a 81       	ldd	r25, Y+2	; 0x02
     9d0:	48 e2       	ldi	r20, 0x28	; 40
     9d2:	60 e8       	ldi	r22, 0x80	; 128
     9d4:	81 df       	rcall	.-254    	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	
	TWI_STOP();
     9d6:	89 81       	ldd	r24, Y+1	; 0x01
     9d8:	9a 81       	ldd	r25, Y+2	; 0x02
     9da:	4d df       	rcall	.-358    	; 0x876 <_ZN3lcd8TWI_STOPEv>
}
     9dc:	0f 90       	pop	r0
     9de:	0f 90       	pop	r0
     9e0:	df 91       	pop	r29
     9e2:	cf 91       	pop	r28
     9e4:	08 95       	ret

000009e6 <_ZN3lcd11SelectLine2Ev>:


void lcd::SelectLine2(void){
     9e6:	cf 93       	push	r28
     9e8:	df 93       	push	r29
     9ea:	00 d0       	rcall	.+0      	; 0x9ec <_ZN3lcd11SelectLine2Ev+0x6>
     9ec:	cd b7       	in	r28, 0x3d	; 61
     9ee:	de b7       	in	r29, 0x3e	; 62
     9f0:	9a 83       	std	Y+2, r25	; 0x02
     9f2:	89 83       	std	Y+1, r24	; 0x01
	
	TWI_StartCommunication();
     9f4:	89 81       	ldd	r24, Y+1	; 0x01
     9f6:	9a 81       	ldd	r25, Y+2	; 0x02
     9f8:	4f df       	rcall	.-354    	; 0x898 <_ZN3lcd22TWI_StartCommunicationEv>
	
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     9fa:	89 81       	ldd	r24, Y+1	; 0x01
     9fc:	9a 81       	ldd	r25, Y+2	; 0x02
     9fe:	48 e1       	ldi	r20, 0x18	; 24
     a00:	6c e7       	ldi	r22, 0x7C	; 124
     a02:	6a df       	rcall	.-300    	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     a04:	89 81       	ldd	r24, Y+1	; 0x01
     a06:	9a 81       	ldd	r25, Y+2	; 0x02
     a08:	48 e2       	ldi	r20, 0x28	; 40
     a0a:	60 e0       	ldi	r22, 0x00	; 0
     a0c:	65 df       	rcall	.-310    	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(LINE_2,TW_MT_DATA_ACK);
     a0e:	89 81       	ldd	r24, Y+1	; 0x01
     a10:	9a 81       	ldd	r25, Y+2	; 0x02
     a12:	48 e2       	ldi	r20, 0x28	; 40
     a14:	60 ec       	ldi	r22, 0xC0	; 192
     a16:	60 df       	rcall	.-320    	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	
	TWI_STOP();
     a18:	89 81       	ldd	r24, Y+1	; 0x01
     a1a:	9a 81       	ldd	r25, Y+2	; 0x02
     a1c:	2c df       	rcall	.-424    	; 0x876 <_ZN3lcd8TWI_STOPEv>
}
     a1e:	0f 90       	pop	r0
     a20:	0f 90       	pop	r0
     a22:	df 91       	pop	r29
     a24:	cf 91       	pop	r28
     a26:	08 95       	ret

00000a28 <_ZN3lcd5CGRAMEv>:

void lcd::CGRAM(void)
{
     a28:	cf 93       	push	r28
     a2a:	df 93       	push	r29
     a2c:	cd b7       	in	r28, 0x3d	; 61
     a2e:	de b7       	in	r29, 0x3e	; 62
     a30:	60 97       	sbiw	r28, 0x10	; 16
     a32:	0f b6       	in	r0, 0x3f	; 63
     a34:	f8 94       	cli
     a36:	de bf       	out	0x3e, r29	; 62
     a38:	0f be       	out	0x3f, r0	; 63
     a3a:	cd bf       	out	0x3d, r28	; 61
     a3c:	98 8b       	std	Y+16, r25	; 0x10
     a3e:	8f 87       	std	Y+15, r24	; 0x0f
 	TWI_StartCommunication();
     a40:	8f 85       	ldd	r24, Y+15	; 0x0f
     a42:	98 89       	ldd	r25, Y+16	; 0x10
     a44:	29 df       	rcall	.-430    	; 0x898 <_ZN3lcd22TWI_StartCommunicationEv>
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     a46:	8f 85       	ldd	r24, Y+15	; 0x0f
     a48:	98 89       	ldd	r25, Y+16	; 0x10
     a4a:	48 e1       	ldi	r20, 0x18	; 24
     a4c:	6c e7       	ldi	r22, 0x7C	; 124
     a4e:	44 df       	rcall	.-376    	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);;
     a50:	8f 85       	ldd	r24, Y+15	; 0x0f
     a52:	98 89       	ldd	r25, Y+16	; 0x10
     a54:	48 e2       	ldi	r20, 0x28	; 40
     a56:	60 e0       	ldi	r22, 0x00	; 0
     a58:	3f df       	rcall	.-386    	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x38,TW_MT_DATA_ACK);		//go to instructino table 0
     a5a:	8f 85       	ldd	r24, Y+15	; 0x0f
     a5c:	98 89       	ldd	r25, Y+16	; 0x10
     a5e:	48 e2       	ldi	r20, 0x28	; 40
     a60:	68 e3       	ldi	r22, 0x38	; 56
     a62:	3a df       	rcall	.-396    	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x40,TW_MT_DATA_ACK);		//Set CGRAM address to 0x00
     a64:	8f 85       	ldd	r24, Y+15	; 0x0f
     a66:	98 89       	ldd	r25, Y+16	; 0x10
     a68:	48 e2       	ldi	r20, 0x28	; 40
     a6a:	60 e4       	ldi	r22, 0x40	; 64
     a6c:	35 df       	rcall	.-406    	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_STOP();
     a6e:	8f 85       	ldd	r24, Y+15	; 0x0f
     a70:	98 89       	ldd	r25, Y+16	; 0x10
     a72:	01 df       	rcall	.-510    	; 0x876 <_ZN3lcd8TWI_STOPEv>
     a74:	80 e0       	ldi	r24, 0x00	; 0
     a76:	90 e0       	ldi	r25, 0x00	; 0
     a78:	a0 e2       	ldi	r26, 0x20	; 32
     a7a:	b1 e4       	ldi	r27, 0x41	; 65
     a7c:	89 83       	std	Y+1, r24	; 0x01
     a7e:	9a 83       	std	Y+2, r25	; 0x02
     a80:	ab 83       	std	Y+3, r26	; 0x03
     a82:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     a84:	20 e0       	ldi	r18, 0x00	; 0
     a86:	30 e0       	ldi	r19, 0x00	; 0
     a88:	4a e7       	ldi	r20, 0x7A	; 122
     a8a:	53 e4       	ldi	r21, 0x43	; 67
     a8c:	69 81       	ldd	r22, Y+1	; 0x01
     a8e:	7a 81       	ldd	r23, Y+2	; 0x02
     a90:	8b 81       	ldd	r24, Y+3	; 0x03
     a92:	9c 81       	ldd	r25, Y+4	; 0x04
     a94:	0e 94 d3 0d 	call	0x1ba6	; 0x1ba6 <__mulsf3>
     a98:	dc 01       	movw	r26, r24
     a9a:	cb 01       	movw	r24, r22
     a9c:	8d 83       	std	Y+5, r24	; 0x05
     a9e:	9e 83       	std	Y+6, r25	; 0x06
     aa0:	af 83       	std	Y+7, r26	; 0x07
     aa2:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     aa4:	20 e0       	ldi	r18, 0x00	; 0
     aa6:	30 e0       	ldi	r19, 0x00	; 0
     aa8:	40 e8       	ldi	r20, 0x80	; 128
     aaa:	5f e3       	ldi	r21, 0x3F	; 63
     aac:	6d 81       	ldd	r22, Y+5	; 0x05
     aae:	7e 81       	ldd	r23, Y+6	; 0x06
     ab0:	8f 81       	ldd	r24, Y+7	; 0x07
     ab2:	98 85       	ldd	r25, Y+8	; 0x08
     ab4:	f7 d7       	rcall	.+4078   	; 0x1aa4 <__cmpsf2>
     ab6:	88 23       	and	r24, r24
     ab8:	2c f4       	brge	.+10     	; 0xac4 <_ZN3lcd5CGRAMEv+0x9c>
		__ticks = 1;
     aba:	81 e0       	ldi	r24, 0x01	; 1
     abc:	90 e0       	ldi	r25, 0x00	; 0
     abe:	9a 87       	std	Y+10, r25	; 0x0a
     ac0:	89 87       	std	Y+9, r24	; 0x09
     ac2:	3d c0       	rjmp	.+122    	; 0xb3e <_ZN3lcd5CGRAMEv+0x116>
	else if (__tmp > 65535)
     ac4:	20 e0       	ldi	r18, 0x00	; 0
     ac6:	3f ef       	ldi	r19, 0xFF	; 255
     ac8:	4f e7       	ldi	r20, 0x7F	; 127
     aca:	57 e4       	ldi	r21, 0x47	; 71
     acc:	6d 81       	ldd	r22, Y+5	; 0x05
     ace:	7e 81       	ldd	r23, Y+6	; 0x06
     ad0:	8f 81       	ldd	r24, Y+7	; 0x07
     ad2:	98 85       	ldd	r25, Y+8	; 0x08
     ad4:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <__gesf2>
     ad8:	18 16       	cp	r1, r24
     ada:	44 f5       	brge	.+80     	; 0xb2c <_ZN3lcd5CGRAMEv+0x104>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     adc:	20 e0       	ldi	r18, 0x00	; 0
     ade:	30 e0       	ldi	r19, 0x00	; 0
     ae0:	40 e2       	ldi	r20, 0x20	; 32
     ae2:	51 e4       	ldi	r21, 0x41	; 65
     ae4:	69 81       	ldd	r22, Y+1	; 0x01
     ae6:	7a 81       	ldd	r23, Y+2	; 0x02
     ae8:	8b 81       	ldd	r24, Y+3	; 0x03
     aea:	9c 81       	ldd	r25, Y+4	; 0x04
     aec:	0e 94 d3 0d 	call	0x1ba6	; 0x1ba6 <__mulsf3>
     af0:	dc 01       	movw	r26, r24
     af2:	cb 01       	movw	r24, r22
     af4:	bc 01       	movw	r22, r24
     af6:	cd 01       	movw	r24, r26
     af8:	d9 d7       	rcall	.+4018   	; 0x1aac <__fixunssfsi>
     afa:	dc 01       	movw	r26, r24
     afc:	cb 01       	movw	r24, r22
     afe:	9a 87       	std	Y+10, r25	; 0x0a
     b00:	89 87       	std	Y+9, r24	; 0x09
     b02:	0f c0       	rjmp	.+30     	; 0xb22 <_ZN3lcd5CGRAMEv+0xfa>
     b04:	89 e1       	ldi	r24, 0x19	; 25
     b06:	90 e0       	ldi	r25, 0x00	; 0
     b08:	9c 87       	std	Y+12, r25	; 0x0c
     b0a:	8b 87       	std	Y+11, r24	; 0x0b
     b0c:	8b 85       	ldd	r24, Y+11	; 0x0b
     b0e:	9c 85       	ldd	r25, Y+12	; 0x0c
     b10:	01 97       	sbiw	r24, 0x01	; 1
     b12:	f1 f7       	brne	.-4      	; 0xb10 <_ZN3lcd5CGRAMEv+0xe8>
     b14:	9c 87       	std	Y+12, r25	; 0x0c
     b16:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b18:	89 85       	ldd	r24, Y+9	; 0x09
     b1a:	9a 85       	ldd	r25, Y+10	; 0x0a
     b1c:	01 97       	sbiw	r24, 0x01	; 1
     b1e:	9a 87       	std	Y+10, r25	; 0x0a
     b20:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b22:	89 85       	ldd	r24, Y+9	; 0x09
     b24:	9a 85       	ldd	r25, Y+10	; 0x0a
     b26:	89 2b       	or	r24, r25
     b28:	69 f7       	brne	.-38     	; 0xb04 <_ZN3lcd5CGRAMEv+0xdc>
     b2a:	13 c0       	rjmp	.+38     	; 0xb52 <_ZN3lcd5CGRAMEv+0x12a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     b2c:	6d 81       	ldd	r22, Y+5	; 0x05
     b2e:	7e 81       	ldd	r23, Y+6	; 0x06
     b30:	8f 81       	ldd	r24, Y+7	; 0x07
     b32:	98 85       	ldd	r25, Y+8	; 0x08
     b34:	bb d7       	rcall	.+3958   	; 0x1aac <__fixunssfsi>
     b36:	dc 01       	movw	r26, r24
     b38:	cb 01       	movw	r24, r22
     b3a:	9a 87       	std	Y+10, r25	; 0x0a
     b3c:	89 87       	std	Y+9, r24	; 0x09
     b3e:	89 85       	ldd	r24, Y+9	; 0x09
     b40:	9a 85       	ldd	r25, Y+10	; 0x0a
     b42:	9e 87       	std	Y+14, r25	; 0x0e
     b44:	8d 87       	std	Y+13, r24	; 0x0d
     b46:	8d 85       	ldd	r24, Y+13	; 0x0d
     b48:	9e 85       	ldd	r25, Y+14	; 0x0e
     b4a:	01 97       	sbiw	r24, 0x01	; 1
     b4c:	f1 f7       	brne	.-4      	; 0xb4a <_ZN3lcd5CGRAMEv+0x122>
     b4e:	9e 87       	std	Y+14, r25	; 0x0e
     b50:	8d 87       	std	Y+13, r24	; 0x0d
	_delay_ms(10);
	
	TWI_StartCommunication();
     b52:	8f 85       	ldd	r24, Y+15	; 0x0f
     b54:	98 89       	ldd	r25, Y+16	; 0x10
     b56:	a0 de       	rcall	.-704    	; 0x898 <_ZN3lcd22TWI_StartCommunicationEv>
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     b58:	8f 85       	ldd	r24, Y+15	; 0x0f
     b5a:	98 89       	ldd	r25, Y+16	; 0x10
     b5c:	48 e1       	ldi	r20, 0x18	; 24
     b5e:	6c e7       	ldi	r22, 0x7C	; 124
     b60:	bb de       	rcall	.-650    	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     b62:	8f 85       	ldd	r24, Y+15	; 0x0f
     b64:	98 89       	ldd	r25, Y+16	; 0x10
     b66:	48 e2       	ldi	r20, 0x28	; 40
     b68:	60 e0       	ldi	r22, 0x00	; 0
     b6a:	b6 de       	rcall	.-660    	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x00,TW_MT_DATA_ACK);		//write to first CGRAM address
     b6c:	8f 85       	ldd	r24, Y+15	; 0x0f
     b6e:	98 89       	ldd	r25, Y+16	; 0x10
     b70:	48 e2       	ldi	r20, 0x28	; 40
     b72:	60 e0       	ldi	r22, 0x00	; 0
     b74:	b1 de       	rcall	.-670    	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x1E,TW_MT_DATA_ACK);
     b76:	8f 85       	ldd	r24, Y+15	; 0x0f
     b78:	98 89       	ldd	r25, Y+16	; 0x10
     b7a:	48 e2       	ldi	r20, 0x28	; 40
     b7c:	6e e1       	ldi	r22, 0x1E	; 30
     b7e:	ac de       	rcall	.-680    	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x18,TW_MT_DATA_ACK);
     b80:	8f 85       	ldd	r24, Y+15	; 0x0f
     b82:	98 89       	ldd	r25, Y+16	; 0x10
     b84:	48 e2       	ldi	r20, 0x28	; 40
     b86:	68 e1       	ldi	r22, 0x18	; 24
     b88:	a7 de       	rcall	.-690    	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x14,TW_MT_DATA_ACK);
     b8a:	8f 85       	ldd	r24, Y+15	; 0x0f
     b8c:	98 89       	ldd	r25, Y+16	; 0x10
     b8e:	48 e2       	ldi	r20, 0x28	; 40
     b90:	64 e1       	ldi	r22, 0x14	; 20
     b92:	a2 de       	rcall	.-700    	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x12,TW_MT_DATA_ACK);
     b94:	8f 85       	ldd	r24, Y+15	; 0x0f
     b96:	98 89       	ldd	r25, Y+16	; 0x10
     b98:	48 e2       	ldi	r20, 0x28	; 40
     b9a:	62 e1       	ldi	r22, 0x12	; 18
     b9c:	9d de       	rcall	.-710    	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);
     b9e:	8f 85       	ldd	r24, Y+15	; 0x0f
     ba0:	98 89       	ldd	r25, Y+16	; 0x10
     ba2:	48 e2       	ldi	r20, 0x28	; 40
     ba4:	61 e0       	ldi	r22, 0x01	; 1
     ba6:	98 de       	rcall	.-720    	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x00,TW_MT_DATA_ACK);
     ba8:	8f 85       	ldd	r24, Y+15	; 0x0f
     baa:	98 89       	ldd	r25, Y+16	; 0x10
     bac:	48 e2       	ldi	r20, 0x28	; 40
     bae:	60 e0       	ldi	r22, 0x00	; 0
     bb0:	93 de       	rcall	.-730    	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x00,TW_MT_DATA_ACK);		//8 bytes per character
     bb2:	8f 85       	ldd	r24, Y+15	; 0x0f
     bb4:	98 89       	ldd	r25, Y+16	; 0x10
     bb6:	48 e2       	ldi	r20, 0x28	; 40
     bb8:	60 e0       	ldi	r22, 0x00	; 0
     bba:	8e de       	rcall	.-740    	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	//continue writing to remaining CGRAM if desired
	TWI_STOP();
     bbc:	8f 85       	ldd	r24, Y+15	; 0x0f
     bbe:	98 89       	ldd	r25, Y+16	; 0x10
     bc0:	5a de       	rcall	.-844    	; 0x876 <_ZN3lcd8TWI_STOPEv>
}
     bc2:	60 96       	adiw	r28, 0x10	; 16
     bc4:	0f b6       	in	r0, 0x3f	; 63
     bc6:	f8 94       	cli
     bc8:	de bf       	out	0x3e, r29	; 62
     bca:	0f be       	out	0x3f, r0	; 63
     bcc:	cd bf       	out	0x3d, r28	; 61
     bce:	df 91       	pop	r29
     bd0:	cf 91       	pop	r28
     bd2:	08 95       	ret

00000bd4 <_ZN3lcd8init_LCDEv>:

void lcd::init_LCD()
{
     bd4:	cf 93       	push	r28
     bd6:	df 93       	push	r29
     bd8:	cd b7       	in	r28, 0x3d	; 61
     bda:	de b7       	in	r29, 0x3e	; 62
     bdc:	ea 97       	sbiw	r28, 0x3a	; 58
     bde:	0f b6       	in	r0, 0x3f	; 63
     be0:	f8 94       	cli
     be2:	de bf       	out	0x3e, r29	; 62
     be4:	0f be       	out	0x3f, r0	; 63
     be6:	cd bf       	out	0x3d, r28	; 61
     be8:	9a af       	std	Y+58, r25	; 0x3a
     bea:	89 af       	std	Y+57, r24	; 0x39
	TWI_StartCommunication();
     bec:	89 ad       	ldd	r24, Y+57	; 0x39
     bee:	9a ad       	ldd	r25, Y+58	; 0x3a
     bf0:	53 de       	rcall	.-858    	; 0x898 <_ZN3lcd22TWI_StartCommunicationEv>
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     bf2:	89 ad       	ldd	r24, Y+57	; 0x39
     bf4:	9a ad       	ldd	r25, Y+58	; 0x3a
     bf6:	48 e1       	ldi	r20, 0x18	; 24
     bf8:	6c e7       	ldi	r22, 0x7C	; 124
     bfa:	6e de       	rcall	.-804    	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     bfc:	89 ad       	ldd	r24, Y+57	; 0x39
     bfe:	9a ad       	ldd	r25, Y+58	; 0x3a
     c00:	48 e2       	ldi	r20, 0x28	; 40
     c02:	60 e0       	ldi	r22, 0x00	; 0
     c04:	69 de       	rcall	.-814    	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x38,TW_MT_DATA_ACK);						// Function Set: 8 bit bus mode, 2-line mode, single height font
     c06:	89 ad       	ldd	r24, Y+57	; 0x39
     c08:	9a ad       	ldd	r25, Y+58	; 0x3a
     c0a:	48 e2       	ldi	r20, 0x28	; 40
     c0c:	68 e3       	ldi	r22, 0x38	; 56
     c0e:	64 de       	rcall	.-824    	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
     c10:	80 e0       	ldi	r24, 0x00	; 0
     c12:	90 e0       	ldi	r25, 0x00	; 0
     c14:	a8 ec       	ldi	r26, 0xC8	; 200
     c16:	b2 e4       	ldi	r27, 0x42	; 66
     c18:	89 83       	std	Y+1, r24	; 0x01
     c1a:	9a 83       	std	Y+2, r25	; 0x02
     c1c:	ab 83       	std	Y+3, r26	; 0x03
     c1e:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     c20:	20 e0       	ldi	r18, 0x00	; 0
     c22:	30 e0       	ldi	r19, 0x00	; 0
     c24:	4a e7       	ldi	r20, 0x7A	; 122
     c26:	53 e4       	ldi	r21, 0x43	; 67
     c28:	69 81       	ldd	r22, Y+1	; 0x01
     c2a:	7a 81       	ldd	r23, Y+2	; 0x02
     c2c:	8b 81       	ldd	r24, Y+3	; 0x03
     c2e:	9c 81       	ldd	r25, Y+4	; 0x04
     c30:	ba d7       	rcall	.+3956   	; 0x1ba6 <__mulsf3>
     c32:	dc 01       	movw	r26, r24
     c34:	cb 01       	movw	r24, r22
     c36:	8d 83       	std	Y+5, r24	; 0x05
     c38:	9e 83       	std	Y+6, r25	; 0x06
     c3a:	af 83       	std	Y+7, r26	; 0x07
     c3c:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     c3e:	20 e0       	ldi	r18, 0x00	; 0
     c40:	30 e0       	ldi	r19, 0x00	; 0
     c42:	40 e8       	ldi	r20, 0x80	; 128
     c44:	5f e3       	ldi	r21, 0x3F	; 63
     c46:	6d 81       	ldd	r22, Y+5	; 0x05
     c48:	7e 81       	ldd	r23, Y+6	; 0x06
     c4a:	8f 81       	ldd	r24, Y+7	; 0x07
     c4c:	98 85       	ldd	r25, Y+8	; 0x08
     c4e:	2a d7       	rcall	.+3668   	; 0x1aa4 <__cmpsf2>
     c50:	88 23       	and	r24, r24
     c52:	2c f4       	brge	.+10     	; 0xc5e <_ZN3lcd8init_LCDEv+0x8a>
		__ticks = 1;
     c54:	81 e0       	ldi	r24, 0x01	; 1
     c56:	90 e0       	ldi	r25, 0x00	; 0
     c58:	9a 87       	std	Y+10, r25	; 0x0a
     c5a:	89 87       	std	Y+9, r24	; 0x09
     c5c:	3b c0       	rjmp	.+118    	; 0xcd4 <_ZN3lcd8init_LCDEv+0x100>
	else if (__tmp > 65535)
     c5e:	20 e0       	ldi	r18, 0x00	; 0
     c60:	3f ef       	ldi	r19, 0xFF	; 255
     c62:	4f e7       	ldi	r20, 0x7F	; 127
     c64:	57 e4       	ldi	r21, 0x47	; 71
     c66:	6d 81       	ldd	r22, Y+5	; 0x05
     c68:	7e 81       	ldd	r23, Y+6	; 0x06
     c6a:	8f 81       	ldd	r24, Y+7	; 0x07
     c6c:	98 85       	ldd	r25, Y+8	; 0x08
     c6e:	97 d7       	rcall	.+3886   	; 0x1b9e <__gesf2>
     c70:	18 16       	cp	r1, r24
     c72:	3c f5       	brge	.+78     	; 0xcc2 <_ZN3lcd8init_LCDEv+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     c74:	20 e0       	ldi	r18, 0x00	; 0
     c76:	30 e0       	ldi	r19, 0x00	; 0
     c78:	40 e2       	ldi	r20, 0x20	; 32
     c7a:	51 e4       	ldi	r21, 0x41	; 65
     c7c:	69 81       	ldd	r22, Y+1	; 0x01
     c7e:	7a 81       	ldd	r23, Y+2	; 0x02
     c80:	8b 81       	ldd	r24, Y+3	; 0x03
     c82:	9c 81       	ldd	r25, Y+4	; 0x04
     c84:	90 d7       	rcall	.+3872   	; 0x1ba6 <__mulsf3>
     c86:	dc 01       	movw	r26, r24
     c88:	cb 01       	movw	r24, r22
     c8a:	bc 01       	movw	r22, r24
     c8c:	cd 01       	movw	r24, r26
     c8e:	0e d7       	rcall	.+3612   	; 0x1aac <__fixunssfsi>
     c90:	dc 01       	movw	r26, r24
     c92:	cb 01       	movw	r24, r22
     c94:	9a 87       	std	Y+10, r25	; 0x0a
     c96:	89 87       	std	Y+9, r24	; 0x09
     c98:	0f c0       	rjmp	.+30     	; 0xcb8 <_ZN3lcd8init_LCDEv+0xe4>
     c9a:	89 e1       	ldi	r24, 0x19	; 25
     c9c:	90 e0       	ldi	r25, 0x00	; 0
     c9e:	9c 87       	std	Y+12, r25	; 0x0c
     ca0:	8b 87       	std	Y+11, r24	; 0x0b
     ca2:	8b 85       	ldd	r24, Y+11	; 0x0b
     ca4:	9c 85       	ldd	r25, Y+12	; 0x0c
     ca6:	01 97       	sbiw	r24, 0x01	; 1
     ca8:	f1 f7       	brne	.-4      	; 0xca6 <_ZN3lcd8init_LCDEv+0xd2>
     caa:	9c 87       	std	Y+12, r25	; 0x0c
     cac:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     cae:	89 85       	ldd	r24, Y+9	; 0x09
     cb0:	9a 85       	ldd	r25, Y+10	; 0x0a
     cb2:	01 97       	sbiw	r24, 0x01	; 1
     cb4:	9a 87       	std	Y+10, r25	; 0x0a
     cb6:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     cb8:	89 85       	ldd	r24, Y+9	; 0x09
     cba:	9a 85       	ldd	r25, Y+10	; 0x0a
     cbc:	89 2b       	or	r24, r25
     cbe:	69 f7       	brne	.-38     	; 0xc9a <_ZN3lcd8init_LCDEv+0xc6>
     cc0:	13 c0       	rjmp	.+38     	; 0xce8 <_ZN3lcd8init_LCDEv+0x114>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     cc2:	6d 81       	ldd	r22, Y+5	; 0x05
     cc4:	7e 81       	ldd	r23, Y+6	; 0x06
     cc6:	8f 81       	ldd	r24, Y+7	; 0x07
     cc8:	98 85       	ldd	r25, Y+8	; 0x08
     cca:	f0 d6       	rcall	.+3552   	; 0x1aac <__fixunssfsi>
     ccc:	dc 01       	movw	r26, r24
     cce:	cb 01       	movw	r24, r22
     cd0:	9a 87       	std	Y+10, r25	; 0x0a
     cd2:	89 87       	std	Y+9, r24	; 0x09
     cd4:	89 85       	ldd	r24, Y+9	; 0x09
     cd6:	9a 85       	ldd	r25, Y+10	; 0x0a
     cd8:	9e 87       	std	Y+14, r25	; 0x0e
     cda:	8d 87       	std	Y+13, r24	; 0x0d
     cdc:	8d 85       	ldd	r24, Y+13	; 0x0d
     cde:	9e 85       	ldd	r25, Y+14	; 0x0e
     ce0:	01 97       	sbiw	r24, 0x01	; 1
     ce2:	f1 f7       	brne	.-4      	; 0xce0 <_ZN3lcd8init_LCDEv+0x10c>
     ce4:	9e 87       	std	Y+14, r25	; 0x0e
     ce6:	8d 87       	std	Y+13, r24	; 0x0d
	_delay_ms(100);
	TWI_TransmitData(0x39,TW_MT_DATA_ACK);						// Use Extended instruction set
     ce8:	89 ad       	ldd	r24, Y+57	; 0x39
     cea:	9a ad       	ldd	r25, Y+58	; 0x3a
     cec:	48 e2       	ldi	r20, 0x28	; 40
     cee:	69 e3       	ldi	r22, 0x39	; 57
     cf0:	f3 dd       	rcall	.-1050   	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
     cf2:	80 e0       	ldi	r24, 0x00	; 0
     cf4:	90 e0       	ldi	r25, 0x00	; 0
     cf6:	a8 ec       	ldi	r26, 0xC8	; 200
     cf8:	b2 e4       	ldi	r27, 0x42	; 66
     cfa:	8f 87       	std	Y+15, r24	; 0x0f
     cfc:	98 8b       	std	Y+16, r25	; 0x10
     cfe:	a9 8b       	std	Y+17, r26	; 0x11
     d00:	ba 8b       	std	Y+18, r27	; 0x12

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     d02:	20 e0       	ldi	r18, 0x00	; 0
     d04:	30 e0       	ldi	r19, 0x00	; 0
     d06:	4a e7       	ldi	r20, 0x7A	; 122
     d08:	53 e4       	ldi	r21, 0x43	; 67
     d0a:	6f 85       	ldd	r22, Y+15	; 0x0f
     d0c:	78 89       	ldd	r23, Y+16	; 0x10
     d0e:	89 89       	ldd	r24, Y+17	; 0x11
     d10:	9a 89       	ldd	r25, Y+18	; 0x12
     d12:	49 d7       	rcall	.+3730   	; 0x1ba6 <__mulsf3>
     d14:	dc 01       	movw	r26, r24
     d16:	cb 01       	movw	r24, r22
     d18:	8b 8b       	std	Y+19, r24	; 0x13
     d1a:	9c 8b       	std	Y+20, r25	; 0x14
     d1c:	ad 8b       	std	Y+21, r26	; 0x15
     d1e:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
     d20:	20 e0       	ldi	r18, 0x00	; 0
     d22:	30 e0       	ldi	r19, 0x00	; 0
     d24:	40 e8       	ldi	r20, 0x80	; 128
     d26:	5f e3       	ldi	r21, 0x3F	; 63
     d28:	6b 89       	ldd	r22, Y+19	; 0x13
     d2a:	7c 89       	ldd	r23, Y+20	; 0x14
     d2c:	8d 89       	ldd	r24, Y+21	; 0x15
     d2e:	9e 89       	ldd	r25, Y+22	; 0x16
     d30:	b9 d6       	rcall	.+3442   	; 0x1aa4 <__cmpsf2>
     d32:	88 23       	and	r24, r24
     d34:	2c f4       	brge	.+10     	; 0xd40 <_ZN3lcd8init_LCDEv+0x16c>
		__ticks = 1;
     d36:	81 e0       	ldi	r24, 0x01	; 1
     d38:	90 e0       	ldi	r25, 0x00	; 0
     d3a:	98 8f       	std	Y+24, r25	; 0x18
     d3c:	8f 8b       	std	Y+23, r24	; 0x17
     d3e:	3b c0       	rjmp	.+118    	; 0xdb6 <_ZN3lcd8init_LCDEv+0x1e2>
	else if (__tmp > 65535)
     d40:	20 e0       	ldi	r18, 0x00	; 0
     d42:	3f ef       	ldi	r19, 0xFF	; 255
     d44:	4f e7       	ldi	r20, 0x7F	; 127
     d46:	57 e4       	ldi	r21, 0x47	; 71
     d48:	6b 89       	ldd	r22, Y+19	; 0x13
     d4a:	7c 89       	ldd	r23, Y+20	; 0x14
     d4c:	8d 89       	ldd	r24, Y+21	; 0x15
     d4e:	9e 89       	ldd	r25, Y+22	; 0x16
     d50:	26 d7       	rcall	.+3660   	; 0x1b9e <__gesf2>
     d52:	18 16       	cp	r1, r24
     d54:	3c f5       	brge	.+78     	; 0xda4 <_ZN3lcd8init_LCDEv+0x1d0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d56:	20 e0       	ldi	r18, 0x00	; 0
     d58:	30 e0       	ldi	r19, 0x00	; 0
     d5a:	40 e2       	ldi	r20, 0x20	; 32
     d5c:	51 e4       	ldi	r21, 0x41	; 65
     d5e:	6f 85       	ldd	r22, Y+15	; 0x0f
     d60:	78 89       	ldd	r23, Y+16	; 0x10
     d62:	89 89       	ldd	r24, Y+17	; 0x11
     d64:	9a 89       	ldd	r25, Y+18	; 0x12
     d66:	1f d7       	rcall	.+3646   	; 0x1ba6 <__mulsf3>
     d68:	dc 01       	movw	r26, r24
     d6a:	cb 01       	movw	r24, r22
     d6c:	bc 01       	movw	r22, r24
     d6e:	cd 01       	movw	r24, r26
     d70:	9d d6       	rcall	.+3386   	; 0x1aac <__fixunssfsi>
     d72:	dc 01       	movw	r26, r24
     d74:	cb 01       	movw	r24, r22
     d76:	98 8f       	std	Y+24, r25	; 0x18
     d78:	8f 8b       	std	Y+23, r24	; 0x17
     d7a:	0f c0       	rjmp	.+30     	; 0xd9a <_ZN3lcd8init_LCDEv+0x1c6>
     d7c:	89 e1       	ldi	r24, 0x19	; 25
     d7e:	90 e0       	ldi	r25, 0x00	; 0
     d80:	9a 8f       	std	Y+26, r25	; 0x1a
     d82:	89 8f       	std	Y+25, r24	; 0x19
     d84:	89 8d       	ldd	r24, Y+25	; 0x19
     d86:	9a 8d       	ldd	r25, Y+26	; 0x1a
     d88:	01 97       	sbiw	r24, 0x01	; 1
     d8a:	f1 f7       	brne	.-4      	; 0xd88 <_ZN3lcd8init_LCDEv+0x1b4>
     d8c:	9a 8f       	std	Y+26, r25	; 0x1a
     d8e:	89 8f       	std	Y+25, r24	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d90:	8f 89       	ldd	r24, Y+23	; 0x17
     d92:	98 8d       	ldd	r25, Y+24	; 0x18
     d94:	01 97       	sbiw	r24, 0x01	; 1
     d96:	98 8f       	std	Y+24, r25	; 0x18
     d98:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d9a:	8f 89       	ldd	r24, Y+23	; 0x17
     d9c:	98 8d       	ldd	r25, Y+24	; 0x18
     d9e:	89 2b       	or	r24, r25
     da0:	69 f7       	brne	.-38     	; 0xd7c <_ZN3lcd8init_LCDEv+0x1a8>
     da2:	13 c0       	rjmp	.+38     	; 0xdca <_ZN3lcd8init_LCDEv+0x1f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     da4:	6b 89       	ldd	r22, Y+19	; 0x13
     da6:	7c 89       	ldd	r23, Y+20	; 0x14
     da8:	8d 89       	ldd	r24, Y+21	; 0x15
     daa:	9e 89       	ldd	r25, Y+22	; 0x16
     dac:	7f d6       	rcall	.+3326   	; 0x1aac <__fixunssfsi>
     dae:	dc 01       	movw	r26, r24
     db0:	cb 01       	movw	r24, r22
     db2:	98 8f       	std	Y+24, r25	; 0x18
     db4:	8f 8b       	std	Y+23, r24	; 0x17
     db6:	8f 89       	ldd	r24, Y+23	; 0x17
     db8:	98 8d       	ldd	r25, Y+24	; 0x18
     dba:	9c 8f       	std	Y+28, r25	; 0x1c
     dbc:	8b 8f       	std	Y+27, r24	; 0x1b
     dbe:	8b 8d       	ldd	r24, Y+27	; 0x1b
     dc0:	9c 8d       	ldd	r25, Y+28	; 0x1c
     dc2:	01 97       	sbiw	r24, 0x01	; 1
     dc4:	f1 f7       	brne	.-4      	; 0xdc2 <_ZN3lcd8init_LCDEv+0x1ee>
     dc6:	9c 8f       	std	Y+28, r25	; 0x1c
     dc8:	8b 8f       	std	Y+27, r24	; 0x1b
	_delay_ms(100);
	TWI_TransmitData(0x14,TW_MT_DATA_ACK);						// Set Internal Osc Freq
     dca:	89 ad       	ldd	r24, Y+57	; 0x39
     dcc:	9a ad       	ldd	r25, Y+58	; 0x3a
     dce:	48 e2       	ldi	r20, 0x28	; 40
     dd0:	64 e1       	ldi	r22, 0x14	; 20
     dd2:	82 dd       	rcall	.-1276   	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x78,TW_MT_DATA_ACK);						// Contrast Set
     dd4:	89 ad       	ldd	r24, Y+57	; 0x39
     dd6:	9a ad       	ldd	r25, Y+58	; 0x3a
     dd8:	48 e2       	ldi	r20, 0x28	; 40
     dda:	68 e7       	ldi	r22, 0x78	; 120
     ddc:	7d dd       	rcall	.-1286   	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x5D,TW_MT_DATA_ACK);						// Power/Icon/Contrast Control
     dde:	89 ad       	ldd	r24, Y+57	; 0x39
     de0:	9a ad       	ldd	r25, Y+58	; 0x3a
     de2:	48 e2       	ldi	r20, 0x28	; 40
     de4:	6d e5       	ldi	r22, 0x5D	; 93
     de6:	78 dd       	rcall	.-1296   	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x6D,TW_MT_DATA_ACK);						// Follower Control
     de8:	89 ad       	ldd	r24, Y+57	; 0x39
     dea:	9a ad       	ldd	r25, Y+58	; 0x3a
     dec:	48 e2       	ldi	r20, 0x28	; 40
     dee:	6d e6       	ldi	r22, 0x6D	; 109
     df0:	73 dd       	rcall	.-1306   	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x0C,TW_MT_DATA_ACK);						// Display On/Off
     df2:	89 ad       	ldd	r24, Y+57	; 0x39
     df4:	9a ad       	ldd	r25, Y+58	; 0x3a
     df6:	48 e2       	ldi	r20, 0x28	; 40
     df8:	6c e0       	ldi	r22, 0x0C	; 12
     dfa:	6e dd       	rcall	.-1316   	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);						// Clear Display
     dfc:	89 ad       	ldd	r24, Y+57	; 0x39
     dfe:	9a ad       	ldd	r25, Y+58	; 0x3a
     e00:	48 e2       	ldi	r20, 0x28	; 40
     e02:	61 e0       	ldi	r22, 0x01	; 1
     e04:	69 dd       	rcall	.-1326   	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x06,TW_MT_DATA_ACK);						// Entry Mode Set: Cursor/Shift as characters input
     e06:	89 ad       	ldd	r24, Y+57	; 0x39
     e08:	9a ad       	ldd	r25, Y+58	; 0x3a
     e0a:	48 e2       	ldi	r20, 0x28	; 40
     e0c:	66 e0       	ldi	r22, 0x06	; 6
     e0e:	64 dd       	rcall	.-1336   	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
     e10:	80 e0       	ldi	r24, 0x00	; 0
     e12:	90 e0       	ldi	r25, 0x00	; 0
     e14:	a8 ec       	ldi	r26, 0xC8	; 200
     e16:	b2 e4       	ldi	r27, 0x42	; 66
     e18:	8d 8f       	std	Y+29, r24	; 0x1d
     e1a:	9e 8f       	std	Y+30, r25	; 0x1e
     e1c:	af 8f       	std	Y+31, r26	; 0x1f
     e1e:	b8 a3       	std	Y+32, r27	; 0x20

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     e20:	20 e0       	ldi	r18, 0x00	; 0
     e22:	30 e0       	ldi	r19, 0x00	; 0
     e24:	4a e7       	ldi	r20, 0x7A	; 122
     e26:	53 e4       	ldi	r21, 0x43	; 67
     e28:	6d 8d       	ldd	r22, Y+29	; 0x1d
     e2a:	7e 8d       	ldd	r23, Y+30	; 0x1e
     e2c:	8f 8d       	ldd	r24, Y+31	; 0x1f
     e2e:	98 a1       	ldd	r25, Y+32	; 0x20
     e30:	ba d6       	rcall	.+3444   	; 0x1ba6 <__mulsf3>
     e32:	dc 01       	movw	r26, r24
     e34:	cb 01       	movw	r24, r22
     e36:	89 a3       	std	Y+33, r24	; 0x21
     e38:	9a a3       	std	Y+34, r25	; 0x22
     e3a:	ab a3       	std	Y+35, r26	; 0x23
     e3c:	bc a3       	std	Y+36, r27	; 0x24
	if (__tmp < 1.0)
     e3e:	20 e0       	ldi	r18, 0x00	; 0
     e40:	30 e0       	ldi	r19, 0x00	; 0
     e42:	40 e8       	ldi	r20, 0x80	; 128
     e44:	5f e3       	ldi	r21, 0x3F	; 63
     e46:	69 a1       	ldd	r22, Y+33	; 0x21
     e48:	7a a1       	ldd	r23, Y+34	; 0x22
     e4a:	8b a1       	ldd	r24, Y+35	; 0x23
     e4c:	9c a1       	ldd	r25, Y+36	; 0x24
     e4e:	2a d6       	rcall	.+3156   	; 0x1aa4 <__cmpsf2>
     e50:	88 23       	and	r24, r24
     e52:	2c f4       	brge	.+10     	; 0xe5e <_ZN3lcd8init_LCDEv+0x28a>
		__ticks = 1;
     e54:	81 e0       	ldi	r24, 0x01	; 1
     e56:	90 e0       	ldi	r25, 0x00	; 0
     e58:	9e a3       	std	Y+38, r25	; 0x26
     e5a:	8d a3       	std	Y+37, r24	; 0x25
     e5c:	3b c0       	rjmp	.+118    	; 0xed4 <_ZN3lcd8init_LCDEv+0x300>
	else if (__tmp > 65535)
     e5e:	20 e0       	ldi	r18, 0x00	; 0
     e60:	3f ef       	ldi	r19, 0xFF	; 255
     e62:	4f e7       	ldi	r20, 0x7F	; 127
     e64:	57 e4       	ldi	r21, 0x47	; 71
     e66:	69 a1       	ldd	r22, Y+33	; 0x21
     e68:	7a a1       	ldd	r23, Y+34	; 0x22
     e6a:	8b a1       	ldd	r24, Y+35	; 0x23
     e6c:	9c a1       	ldd	r25, Y+36	; 0x24
     e6e:	97 d6       	rcall	.+3374   	; 0x1b9e <__gesf2>
     e70:	18 16       	cp	r1, r24
     e72:	3c f5       	brge	.+78     	; 0xec2 <_ZN3lcd8init_LCDEv+0x2ee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e74:	20 e0       	ldi	r18, 0x00	; 0
     e76:	30 e0       	ldi	r19, 0x00	; 0
     e78:	40 e2       	ldi	r20, 0x20	; 32
     e7a:	51 e4       	ldi	r21, 0x41	; 65
     e7c:	6d 8d       	ldd	r22, Y+29	; 0x1d
     e7e:	7e 8d       	ldd	r23, Y+30	; 0x1e
     e80:	8f 8d       	ldd	r24, Y+31	; 0x1f
     e82:	98 a1       	ldd	r25, Y+32	; 0x20
     e84:	90 d6       	rcall	.+3360   	; 0x1ba6 <__mulsf3>
     e86:	dc 01       	movw	r26, r24
     e88:	cb 01       	movw	r24, r22
     e8a:	bc 01       	movw	r22, r24
     e8c:	cd 01       	movw	r24, r26
     e8e:	0e d6       	rcall	.+3100   	; 0x1aac <__fixunssfsi>
     e90:	dc 01       	movw	r26, r24
     e92:	cb 01       	movw	r24, r22
     e94:	9e a3       	std	Y+38, r25	; 0x26
     e96:	8d a3       	std	Y+37, r24	; 0x25
     e98:	0f c0       	rjmp	.+30     	; 0xeb8 <_ZN3lcd8init_LCDEv+0x2e4>
     e9a:	89 e1       	ldi	r24, 0x19	; 25
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	98 a7       	std	Y+40, r25	; 0x28
     ea0:	8f a3       	std	Y+39, r24	; 0x27
     ea2:	8f a1       	ldd	r24, Y+39	; 0x27
     ea4:	98 a5       	ldd	r25, Y+40	; 0x28
     ea6:	01 97       	sbiw	r24, 0x01	; 1
     ea8:	f1 f7       	brne	.-4      	; 0xea6 <_ZN3lcd8init_LCDEv+0x2d2>
     eaa:	98 a7       	std	Y+40, r25	; 0x28
     eac:	8f a3       	std	Y+39, r24	; 0x27
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     eae:	8d a1       	ldd	r24, Y+37	; 0x25
     eb0:	9e a1       	ldd	r25, Y+38	; 0x26
     eb2:	01 97       	sbiw	r24, 0x01	; 1
     eb4:	9e a3       	std	Y+38, r25	; 0x26
     eb6:	8d a3       	std	Y+37, r24	; 0x25
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     eb8:	8d a1       	ldd	r24, Y+37	; 0x25
     eba:	9e a1       	ldd	r25, Y+38	; 0x26
     ebc:	89 2b       	or	r24, r25
     ebe:	69 f7       	brne	.-38     	; 0xe9a <_ZN3lcd8init_LCDEv+0x2c6>
     ec0:	13 c0       	rjmp	.+38     	; 0xee8 <_ZN3lcd8init_LCDEv+0x314>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     ec2:	69 a1       	ldd	r22, Y+33	; 0x21
     ec4:	7a a1       	ldd	r23, Y+34	; 0x22
     ec6:	8b a1       	ldd	r24, Y+35	; 0x23
     ec8:	9c a1       	ldd	r25, Y+36	; 0x24
     eca:	f0 d5       	rcall	.+3040   	; 0x1aac <__fixunssfsi>
     ecc:	dc 01       	movw	r26, r24
     ece:	cb 01       	movw	r24, r22
     ed0:	9e a3       	std	Y+38, r25	; 0x26
     ed2:	8d a3       	std	Y+37, r24	; 0x25
     ed4:	8d a1       	ldd	r24, Y+37	; 0x25
     ed6:	9e a1       	ldd	r25, Y+38	; 0x26
     ed8:	9a a7       	std	Y+42, r25	; 0x2a
     eda:	89 a7       	std	Y+41, r24	; 0x29
     edc:	89 a5       	ldd	r24, Y+41	; 0x29
     ede:	9a a5       	ldd	r25, Y+42	; 0x2a
     ee0:	01 97       	sbiw	r24, 0x01	; 1
     ee2:	f1 f7       	brne	.-4      	; 0xee0 <_ZN3lcd8init_LCDEv+0x30c>
     ee4:	9a a7       	std	Y+42, r25	; 0x2a
     ee6:	89 a7       	std	Y+41, r24	; 0x29
	_delay_ms(100);
	TWI_STOP();
     ee8:	89 ad       	ldd	r24, Y+57	; 0x39
     eea:	9a ad       	ldd	r25, Y+58	; 0x3a
     eec:	c4 dc       	rcall	.-1656   	; 0x876 <_ZN3lcd8TWI_STOPEv>

	CGRAM();			//define CGRAM
     eee:	89 ad       	ldd	r24, Y+57	; 0x39
     ef0:	9a ad       	ldd	r25, Y+58	; 0x3a
     ef2:	9a dd       	rcall	.-1228   	; 0xa28 <_ZN3lcd5CGRAMEv>

	TWI_StartCommunication();
     ef4:	89 ad       	ldd	r24, Y+57	; 0x39
     ef6:	9a ad       	ldd	r25, Y+58	; 0x3a
     ef8:	cf dc       	rcall	.-1634   	; 0x898 <_ZN3lcd22TWI_StartCommunicationEv>
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     efa:	89 ad       	ldd	r24, Y+57	; 0x39
     efc:	9a ad       	ldd	r25, Y+58	; 0x3a
     efe:	48 e1       	ldi	r20, 0x18	; 24
     f00:	6c e7       	ldi	r22, 0x7C	; 124
     f02:	ea dc       	rcall	.-1580   	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     f04:	89 ad       	ldd	r24, Y+57	; 0x39
     f06:	9a ad       	ldd	r25, Y+58	; 0x3a
     f08:	48 e2       	ldi	r20, 0x28	; 40
     f0a:	60 e0       	ldi	r22, 0x00	; 0
     f0c:	e5 dc       	rcall	.-1590   	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x39,TW_MT_DATA_ACK);
     f0e:	89 ad       	ldd	r24, Y+57	; 0x39
     f10:	9a ad       	ldd	r25, Y+58	; 0x3a
     f12:	48 e2       	ldi	r20, 0x28	; 40
     f14:	69 e3       	ldi	r22, 0x39	; 57
     f16:	e0 dc       	rcall	.-1600   	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);
     f18:	89 ad       	ldd	r24, Y+57	; 0x39
     f1a:	9a ad       	ldd	r25, Y+58	; 0x3a
     f1c:	48 e2       	ldi	r20, 0x28	; 40
     f1e:	61 e0       	ldi	r22, 0x01	; 1
     f20:	db dc       	rcall	.-1610   	; 0x8d8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_STOP();
     f22:	89 ad       	ldd	r24, Y+57	; 0x39
     f24:	9a ad       	ldd	r25, Y+58	; 0x3a
     f26:	a7 dc       	rcall	.-1714   	; 0x876 <_ZN3lcd8TWI_STOPEv>
     f28:	80 e0       	ldi	r24, 0x00	; 0
     f2a:	90 e0       	ldi	r25, 0x00	; 0
     f2c:	a8 ec       	ldi	r26, 0xC8	; 200
     f2e:	b2 e4       	ldi	r27, 0x42	; 66
     f30:	8b a7       	std	Y+43, r24	; 0x2b
     f32:	9c a7       	std	Y+44, r25	; 0x2c
     f34:	ad a7       	std	Y+45, r26	; 0x2d
     f36:	be a7       	std	Y+46, r27	; 0x2e

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     f38:	20 e0       	ldi	r18, 0x00	; 0
     f3a:	30 e0       	ldi	r19, 0x00	; 0
     f3c:	4a e7       	ldi	r20, 0x7A	; 122
     f3e:	53 e4       	ldi	r21, 0x43	; 67
     f40:	6b a5       	ldd	r22, Y+43	; 0x2b
     f42:	7c a5       	ldd	r23, Y+44	; 0x2c
     f44:	8d a5       	ldd	r24, Y+45	; 0x2d
     f46:	9e a5       	ldd	r25, Y+46	; 0x2e
     f48:	2e d6       	rcall	.+3164   	; 0x1ba6 <__mulsf3>
     f4a:	dc 01       	movw	r26, r24
     f4c:	cb 01       	movw	r24, r22
     f4e:	8f a7       	std	Y+47, r24	; 0x2f
     f50:	98 ab       	std	Y+48, r25	; 0x30
     f52:	a9 ab       	std	Y+49, r26	; 0x31
     f54:	ba ab       	std	Y+50, r27	; 0x32
	if (__tmp < 1.0)
     f56:	20 e0       	ldi	r18, 0x00	; 0
     f58:	30 e0       	ldi	r19, 0x00	; 0
     f5a:	40 e8       	ldi	r20, 0x80	; 128
     f5c:	5f e3       	ldi	r21, 0x3F	; 63
     f5e:	6f a5       	ldd	r22, Y+47	; 0x2f
     f60:	78 a9       	ldd	r23, Y+48	; 0x30
     f62:	89 a9       	ldd	r24, Y+49	; 0x31
     f64:	9a a9       	ldd	r25, Y+50	; 0x32
     f66:	9e d5       	rcall	.+2876   	; 0x1aa4 <__cmpsf2>
     f68:	88 23       	and	r24, r24
     f6a:	2c f4       	brge	.+10     	; 0xf76 <_ZN3lcd8init_LCDEv+0x3a2>
		__ticks = 1;
     f6c:	81 e0       	ldi	r24, 0x01	; 1
     f6e:	90 e0       	ldi	r25, 0x00	; 0
     f70:	9c ab       	std	Y+52, r25	; 0x34
     f72:	8b ab       	std	Y+51, r24	; 0x33
     f74:	3b c0       	rjmp	.+118    	; 0xfec <_ZN3lcd8init_LCDEv+0x418>
	else if (__tmp > 65535)
     f76:	20 e0       	ldi	r18, 0x00	; 0
     f78:	3f ef       	ldi	r19, 0xFF	; 255
     f7a:	4f e7       	ldi	r20, 0x7F	; 127
     f7c:	57 e4       	ldi	r21, 0x47	; 71
     f7e:	6f a5       	ldd	r22, Y+47	; 0x2f
     f80:	78 a9       	ldd	r23, Y+48	; 0x30
     f82:	89 a9       	ldd	r24, Y+49	; 0x31
     f84:	9a a9       	ldd	r25, Y+50	; 0x32
     f86:	0b d6       	rcall	.+3094   	; 0x1b9e <__gesf2>
     f88:	18 16       	cp	r1, r24
     f8a:	3c f5       	brge	.+78     	; 0xfda <_ZN3lcd8init_LCDEv+0x406>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f8c:	20 e0       	ldi	r18, 0x00	; 0
     f8e:	30 e0       	ldi	r19, 0x00	; 0
     f90:	40 e2       	ldi	r20, 0x20	; 32
     f92:	51 e4       	ldi	r21, 0x41	; 65
     f94:	6b a5       	ldd	r22, Y+43	; 0x2b
     f96:	7c a5       	ldd	r23, Y+44	; 0x2c
     f98:	8d a5       	ldd	r24, Y+45	; 0x2d
     f9a:	9e a5       	ldd	r25, Y+46	; 0x2e
     f9c:	04 d6       	rcall	.+3080   	; 0x1ba6 <__mulsf3>
     f9e:	dc 01       	movw	r26, r24
     fa0:	cb 01       	movw	r24, r22
     fa2:	bc 01       	movw	r22, r24
     fa4:	cd 01       	movw	r24, r26
     fa6:	82 d5       	rcall	.+2820   	; 0x1aac <__fixunssfsi>
     fa8:	dc 01       	movw	r26, r24
     faa:	cb 01       	movw	r24, r22
     fac:	9c ab       	std	Y+52, r25	; 0x34
     fae:	8b ab       	std	Y+51, r24	; 0x33
     fb0:	0f c0       	rjmp	.+30     	; 0xfd0 <_ZN3lcd8init_LCDEv+0x3fc>
     fb2:	89 e1       	ldi	r24, 0x19	; 25
     fb4:	90 e0       	ldi	r25, 0x00	; 0
     fb6:	9e ab       	std	Y+54, r25	; 0x36
     fb8:	8d ab       	std	Y+53, r24	; 0x35
     fba:	8d a9       	ldd	r24, Y+53	; 0x35
     fbc:	9e a9       	ldd	r25, Y+54	; 0x36
     fbe:	01 97       	sbiw	r24, 0x01	; 1
     fc0:	f1 f7       	brne	.-4      	; 0xfbe <_ZN3lcd8init_LCDEv+0x3ea>
     fc2:	9e ab       	std	Y+54, r25	; 0x36
     fc4:	8d ab       	std	Y+53, r24	; 0x35
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     fc6:	8b a9       	ldd	r24, Y+51	; 0x33
     fc8:	9c a9       	ldd	r25, Y+52	; 0x34
     fca:	01 97       	sbiw	r24, 0x01	; 1
     fcc:	9c ab       	std	Y+52, r25	; 0x34
     fce:	8b ab       	std	Y+51, r24	; 0x33
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     fd0:	8b a9       	ldd	r24, Y+51	; 0x33
     fd2:	9c a9       	ldd	r25, Y+52	; 0x34
     fd4:	89 2b       	or	r24, r25
     fd6:	69 f7       	brne	.-38     	; 0xfb2 <_ZN3lcd8init_LCDEv+0x3de>
     fd8:	13 c0       	rjmp	.+38     	; 0x1000 <_ZN3lcd8init_LCDEv+0x42c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     fda:	6f a5       	ldd	r22, Y+47	; 0x2f
     fdc:	78 a9       	ldd	r23, Y+48	; 0x30
     fde:	89 a9       	ldd	r24, Y+49	; 0x31
     fe0:	9a a9       	ldd	r25, Y+50	; 0x32
     fe2:	64 d5       	rcall	.+2760   	; 0x1aac <__fixunssfsi>
     fe4:	dc 01       	movw	r26, r24
     fe6:	cb 01       	movw	r24, r22
     fe8:	9c ab       	std	Y+52, r25	; 0x34
     fea:	8b ab       	std	Y+51, r24	; 0x33
     fec:	8b a9       	ldd	r24, Y+51	; 0x33
     fee:	9c a9       	ldd	r25, Y+52	; 0x34
     ff0:	98 af       	std	Y+56, r25	; 0x38
     ff2:	8f ab       	std	Y+55, r24	; 0x37
     ff4:	8f a9       	ldd	r24, Y+55	; 0x37
     ff6:	98 ad       	ldd	r25, Y+56	; 0x38
     ff8:	01 97       	sbiw	r24, 0x01	; 1
     ffa:	f1 f7       	brne	.-4      	; 0xff8 <_ZN3lcd8init_LCDEv+0x424>
     ffc:	98 af       	std	Y+56, r25	; 0x38
     ffe:	8f ab       	std	Y+55, r24	; 0x37
	_delay_ms(100);
}
    1000:	ea 96       	adiw	r28, 0x3a	; 58
    1002:	0f b6       	in	r0, 0x3f	; 63
    1004:	f8 94       	cli
    1006:	de bf       	out	0x3e, r29	; 62
    1008:	0f be       	out	0x3f, r0	; 63
    100a:	cd bf       	out	0x3d, r28	; 61
    100c:	df 91       	pop	r29
    100e:	cf 91       	pop	r28
    1010:	08 95       	ret

00001012 <_ZN3lcd15test_LCD_ScreenEv>:

void lcd::test_LCD_Screen(){
    1012:	cf 93       	push	r28
    1014:	df 93       	push	r29
    1016:	cd b7       	in	r28, 0x3d	; 61
    1018:	de b7       	in	r29, 0x3e	; 62
    101a:	c0 54       	subi	r28, 0x40	; 64
    101c:	d1 09       	sbc	r29, r1
    101e:	0f b6       	in	r0, 0x3f	; 63
    1020:	f8 94       	cli
    1022:	de bf       	out	0x3e, r29	; 62
    1024:	0f be       	out	0x3f, r0	; 63
    1026:	cd bf       	out	0x3d, r28	; 61
    1028:	9e 01       	movw	r18, r28
    102a:	21 5c       	subi	r18, 0xC1	; 193
    102c:	3f 4f       	sbci	r19, 0xFF	; 255
    102e:	f9 01       	movw	r30, r18
    1030:	91 83       	std	Z+1, r25	; 0x01
    1032:	80 83       	st	Z, r24
	
	unsigned char text1[]={"-! TEST LINE 1 !"};
    1034:	81 e1       	ldi	r24, 0x11	; 17
    1036:	e0 e0       	ldi	r30, 0x00	; 0
    1038:	f1 e0       	ldi	r31, 0x01	; 1
    103a:	de 01       	movw	r26, r28
    103c:	5d 96       	adiw	r26, 0x1d	; 29
    103e:	01 90       	ld	r0, Z+
    1040:	0d 92       	st	X+, r0
    1042:	8a 95       	dec	r24
    1044:	e1 f7       	brne	.-8      	; 0x103e <_ZN3lcd15test_LCD_ScreenEv+0x2c>
	unsigned char text2[]={"! TEST LINE 2 !-"};
    1046:	81 e1       	ldi	r24, 0x11	; 17
    1048:	e1 e1       	ldi	r30, 0x11	; 17
    104a:	f1 e0       	ldi	r31, 0x01	; 1
    104c:	de 01       	movw	r26, r28
    104e:	9e 96       	adiw	r26, 0x2e	; 46
    1050:	01 90       	ld	r0, Z+
    1052:	0d 92       	st	X+, r0
    1054:	8a 95       	dec	r24
    1056:	e1 f7       	brne	.-8      	; 0x1050 <_ZN3lcd15test_LCD_ScreenEv+0x3e>

	
	print(text1, LINE_TOP);
    1058:	9e 01       	movw	r18, r28
    105a:	23 5e       	subi	r18, 0xE3	; 227
    105c:	3f 4f       	sbci	r19, 0xFF	; 255
    105e:	ce 01       	movw	r24, r28
    1060:	cf 96       	adiw	r24, 0x3f	; 63
    1062:	fc 01       	movw	r30, r24
    1064:	80 81       	ld	r24, Z
    1066:	91 81       	ldd	r25, Z+1	; 0x01
    1068:	40 e0       	ldi	r20, 0x00	; 0
    106a:	b9 01       	movw	r22, r18
    106c:	19 d1       	rcall	.+562    	; 0x12a0 <_ZN3lcd5printEPhh>
	print(text2, LINE_BOTTOM);
    106e:	9e 01       	movw	r18, r28
    1070:	22 5d       	subi	r18, 0xD2	; 210
    1072:	3f 4f       	sbci	r19, 0xFF	; 255
    1074:	ce 01       	movw	r24, r28
    1076:	cf 96       	adiw	r24, 0x3f	; 63
    1078:	fc 01       	movw	r30, r24
    107a:	80 81       	ld	r24, Z
    107c:	91 81       	ldd	r25, Z+1	; 0x01
    107e:	41 e0       	ldi	r20, 0x01	; 1
    1080:	b9 01       	movw	r22, r18
    1082:	0e d1       	rcall	.+540    	; 0x12a0 <_ZN3lcd5printEPhh>
    1084:	80 e0       	ldi	r24, 0x00	; 0
    1086:	90 e0       	ldi	r25, 0x00	; 0
    1088:	aa e7       	ldi	r26, 0x7A	; 122
    108a:	b3 e4       	ldi	r27, 0x43	; 67
    108c:	89 83       	std	Y+1, r24	; 0x01
    108e:	9a 83       	std	Y+2, r25	; 0x02
    1090:	ab 83       	std	Y+3, r26	; 0x03
    1092:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1094:	20 e0       	ldi	r18, 0x00	; 0
    1096:	30 e0       	ldi	r19, 0x00	; 0
    1098:	4a e7       	ldi	r20, 0x7A	; 122
    109a:	53 e4       	ldi	r21, 0x43	; 67
    109c:	69 81       	ldd	r22, Y+1	; 0x01
    109e:	7a 81       	ldd	r23, Y+2	; 0x02
    10a0:	8b 81       	ldd	r24, Y+3	; 0x03
    10a2:	9c 81       	ldd	r25, Y+4	; 0x04
    10a4:	80 d5       	rcall	.+2816   	; 0x1ba6 <__mulsf3>
    10a6:	dc 01       	movw	r26, r24
    10a8:	cb 01       	movw	r24, r22
    10aa:	8d 83       	std	Y+5, r24	; 0x05
    10ac:	9e 83       	std	Y+6, r25	; 0x06
    10ae:	af 83       	std	Y+7, r26	; 0x07
    10b0:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
    10b2:	20 e0       	ldi	r18, 0x00	; 0
    10b4:	30 e0       	ldi	r19, 0x00	; 0
    10b6:	40 e8       	ldi	r20, 0x80	; 128
    10b8:	5f e3       	ldi	r21, 0x3F	; 63
    10ba:	6d 81       	ldd	r22, Y+5	; 0x05
    10bc:	7e 81       	ldd	r23, Y+6	; 0x06
    10be:	8f 81       	ldd	r24, Y+7	; 0x07
    10c0:	98 85       	ldd	r25, Y+8	; 0x08
    10c2:	f0 d4       	rcall	.+2528   	; 0x1aa4 <__cmpsf2>
    10c4:	88 23       	and	r24, r24
    10c6:	2c f4       	brge	.+10     	; 0x10d2 <_ZN3lcd15test_LCD_ScreenEv+0xc0>
		__ticks = 1;
    10c8:	81 e0       	ldi	r24, 0x01	; 1
    10ca:	90 e0       	ldi	r25, 0x00	; 0
    10cc:	9a 87       	std	Y+10, r25	; 0x0a
    10ce:	89 87       	std	Y+9, r24	; 0x09
    10d0:	3b c0       	rjmp	.+118    	; 0x1148 <_ZN3lcd15test_LCD_ScreenEv+0x136>
	else if (__tmp > 65535)
    10d2:	20 e0       	ldi	r18, 0x00	; 0
    10d4:	3f ef       	ldi	r19, 0xFF	; 255
    10d6:	4f e7       	ldi	r20, 0x7F	; 127
    10d8:	57 e4       	ldi	r21, 0x47	; 71
    10da:	6d 81       	ldd	r22, Y+5	; 0x05
    10dc:	7e 81       	ldd	r23, Y+6	; 0x06
    10de:	8f 81       	ldd	r24, Y+7	; 0x07
    10e0:	98 85       	ldd	r25, Y+8	; 0x08
    10e2:	5d d5       	rcall	.+2746   	; 0x1b9e <__gesf2>
    10e4:	18 16       	cp	r1, r24
    10e6:	3c f5       	brge	.+78     	; 0x1136 <_ZN3lcd15test_LCD_ScreenEv+0x124>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    10e8:	20 e0       	ldi	r18, 0x00	; 0
    10ea:	30 e0       	ldi	r19, 0x00	; 0
    10ec:	40 e2       	ldi	r20, 0x20	; 32
    10ee:	51 e4       	ldi	r21, 0x41	; 65
    10f0:	69 81       	ldd	r22, Y+1	; 0x01
    10f2:	7a 81       	ldd	r23, Y+2	; 0x02
    10f4:	8b 81       	ldd	r24, Y+3	; 0x03
    10f6:	9c 81       	ldd	r25, Y+4	; 0x04
    10f8:	56 d5       	rcall	.+2732   	; 0x1ba6 <__mulsf3>
    10fa:	dc 01       	movw	r26, r24
    10fc:	cb 01       	movw	r24, r22
    10fe:	bc 01       	movw	r22, r24
    1100:	cd 01       	movw	r24, r26
    1102:	d4 d4       	rcall	.+2472   	; 0x1aac <__fixunssfsi>
    1104:	dc 01       	movw	r26, r24
    1106:	cb 01       	movw	r24, r22
    1108:	9a 87       	std	Y+10, r25	; 0x0a
    110a:	89 87       	std	Y+9, r24	; 0x09
    110c:	0f c0       	rjmp	.+30     	; 0x112c <_ZN3lcd15test_LCD_ScreenEv+0x11a>
    110e:	89 e1       	ldi	r24, 0x19	; 25
    1110:	90 e0       	ldi	r25, 0x00	; 0
    1112:	9c 87       	std	Y+12, r25	; 0x0c
    1114:	8b 87       	std	Y+11, r24	; 0x0b
    1116:	8b 85       	ldd	r24, Y+11	; 0x0b
    1118:	9c 85       	ldd	r25, Y+12	; 0x0c
    111a:	01 97       	sbiw	r24, 0x01	; 1
    111c:	f1 f7       	brne	.-4      	; 0x111a <_ZN3lcd15test_LCD_ScreenEv+0x108>
    111e:	9c 87       	std	Y+12, r25	; 0x0c
    1120:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1122:	89 85       	ldd	r24, Y+9	; 0x09
    1124:	9a 85       	ldd	r25, Y+10	; 0x0a
    1126:	01 97       	sbiw	r24, 0x01	; 1
    1128:	9a 87       	std	Y+10, r25	; 0x0a
    112a:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    112c:	89 85       	ldd	r24, Y+9	; 0x09
    112e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1130:	89 2b       	or	r24, r25
    1132:	69 f7       	brne	.-38     	; 0x110e <_ZN3lcd15test_LCD_ScreenEv+0xfc>
    1134:	13 c0       	rjmp	.+38     	; 0x115c <_ZN3lcd15test_LCD_ScreenEv+0x14a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1136:	6d 81       	ldd	r22, Y+5	; 0x05
    1138:	7e 81       	ldd	r23, Y+6	; 0x06
    113a:	8f 81       	ldd	r24, Y+7	; 0x07
    113c:	98 85       	ldd	r25, Y+8	; 0x08
    113e:	b6 d4       	rcall	.+2412   	; 0x1aac <__fixunssfsi>
    1140:	dc 01       	movw	r26, r24
    1142:	cb 01       	movw	r24, r22
    1144:	9a 87       	std	Y+10, r25	; 0x0a
    1146:	89 87       	std	Y+9, r24	; 0x09
    1148:	89 85       	ldd	r24, Y+9	; 0x09
    114a:	9a 85       	ldd	r25, Y+10	; 0x0a
    114c:	9e 87       	std	Y+14, r25	; 0x0e
    114e:	8d 87       	std	Y+13, r24	; 0x0d
    1150:	8d 85       	ldd	r24, Y+13	; 0x0d
    1152:	9e 85       	ldd	r25, Y+14	; 0x0e
    1154:	01 97       	sbiw	r24, 0x01	; 1
    1156:	f1 f7       	brne	.-4      	; 0x1154 <_ZN3lcd15test_LCD_ScreenEv+0x142>
    1158:	9e 87       	std	Y+14, r25	; 0x0e
    115a:	8d 87       	std	Y+13, r24	; 0x0d
	_delay_ms(250);
	print(text1, LINE_BOTTOM);
    115c:	9e 01       	movw	r18, r28
    115e:	23 5e       	subi	r18, 0xE3	; 227
    1160:	3f 4f       	sbci	r19, 0xFF	; 255
    1162:	ce 01       	movw	r24, r28
    1164:	cf 96       	adiw	r24, 0x3f	; 63
    1166:	fc 01       	movw	r30, r24
    1168:	80 81       	ld	r24, Z
    116a:	91 81       	ldd	r25, Z+1	; 0x01
    116c:	41 e0       	ldi	r20, 0x01	; 1
    116e:	b9 01       	movw	r22, r18
    1170:	97 d0       	rcall	.+302    	; 0x12a0 <_ZN3lcd5printEPhh>
	print(text2, LINE_TOP);
    1172:	9e 01       	movw	r18, r28
    1174:	22 5d       	subi	r18, 0xD2	; 210
    1176:	3f 4f       	sbci	r19, 0xFF	; 255
    1178:	ce 01       	movw	r24, r28
    117a:	cf 96       	adiw	r24, 0x3f	; 63
    117c:	fc 01       	movw	r30, r24
    117e:	80 81       	ld	r24, Z
    1180:	91 81       	ldd	r25, Z+1	; 0x01
    1182:	40 e0       	ldi	r20, 0x00	; 0
    1184:	b9 01       	movw	r22, r18
    1186:	8c d0       	rcall	.+280    	; 0x12a0 <_ZN3lcd5printEPhh>
    1188:	80 e0       	ldi	r24, 0x00	; 0
    118a:	90 e0       	ldi	r25, 0x00	; 0
    118c:	aa e7       	ldi	r26, 0x7A	; 122
    118e:	b3 e4       	ldi	r27, 0x43	; 67
    1190:	8f 87       	std	Y+15, r24	; 0x0f
    1192:	98 8b       	std	Y+16, r25	; 0x10
    1194:	a9 8b       	std	Y+17, r26	; 0x11
    1196:	ba 8b       	std	Y+18, r27	; 0x12

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1198:	20 e0       	ldi	r18, 0x00	; 0
    119a:	30 e0       	ldi	r19, 0x00	; 0
    119c:	4a e7       	ldi	r20, 0x7A	; 122
    119e:	53 e4       	ldi	r21, 0x43	; 67
    11a0:	6f 85       	ldd	r22, Y+15	; 0x0f
    11a2:	78 89       	ldd	r23, Y+16	; 0x10
    11a4:	89 89       	ldd	r24, Y+17	; 0x11
    11a6:	9a 89       	ldd	r25, Y+18	; 0x12
    11a8:	fe d4       	rcall	.+2556   	; 0x1ba6 <__mulsf3>
    11aa:	dc 01       	movw	r26, r24
    11ac:	cb 01       	movw	r24, r22
    11ae:	8b 8b       	std	Y+19, r24	; 0x13
    11b0:	9c 8b       	std	Y+20, r25	; 0x14
    11b2:	ad 8b       	std	Y+21, r26	; 0x15
    11b4:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
    11b6:	20 e0       	ldi	r18, 0x00	; 0
    11b8:	30 e0       	ldi	r19, 0x00	; 0
    11ba:	40 e8       	ldi	r20, 0x80	; 128
    11bc:	5f e3       	ldi	r21, 0x3F	; 63
    11be:	6b 89       	ldd	r22, Y+19	; 0x13
    11c0:	7c 89       	ldd	r23, Y+20	; 0x14
    11c2:	8d 89       	ldd	r24, Y+21	; 0x15
    11c4:	9e 89       	ldd	r25, Y+22	; 0x16
    11c6:	6e d4       	rcall	.+2268   	; 0x1aa4 <__cmpsf2>
    11c8:	88 23       	and	r24, r24
    11ca:	2c f4       	brge	.+10     	; 0x11d6 <_ZN3lcd15test_LCD_ScreenEv+0x1c4>
		__ticks = 1;
    11cc:	81 e0       	ldi	r24, 0x01	; 1
    11ce:	90 e0       	ldi	r25, 0x00	; 0
    11d0:	98 8f       	std	Y+24, r25	; 0x18
    11d2:	8f 8b       	std	Y+23, r24	; 0x17
    11d4:	3b c0       	rjmp	.+118    	; 0x124c <_ZN3lcd15test_LCD_ScreenEv+0x23a>
	else if (__tmp > 65535)
    11d6:	20 e0       	ldi	r18, 0x00	; 0
    11d8:	3f ef       	ldi	r19, 0xFF	; 255
    11da:	4f e7       	ldi	r20, 0x7F	; 127
    11dc:	57 e4       	ldi	r21, 0x47	; 71
    11de:	6b 89       	ldd	r22, Y+19	; 0x13
    11e0:	7c 89       	ldd	r23, Y+20	; 0x14
    11e2:	8d 89       	ldd	r24, Y+21	; 0x15
    11e4:	9e 89       	ldd	r25, Y+22	; 0x16
    11e6:	db d4       	rcall	.+2486   	; 0x1b9e <__gesf2>
    11e8:	18 16       	cp	r1, r24
    11ea:	3c f5       	brge	.+78     	; 0x123a <_ZN3lcd15test_LCD_ScreenEv+0x228>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    11ec:	20 e0       	ldi	r18, 0x00	; 0
    11ee:	30 e0       	ldi	r19, 0x00	; 0
    11f0:	40 e2       	ldi	r20, 0x20	; 32
    11f2:	51 e4       	ldi	r21, 0x41	; 65
    11f4:	6f 85       	ldd	r22, Y+15	; 0x0f
    11f6:	78 89       	ldd	r23, Y+16	; 0x10
    11f8:	89 89       	ldd	r24, Y+17	; 0x11
    11fa:	9a 89       	ldd	r25, Y+18	; 0x12
    11fc:	d4 d4       	rcall	.+2472   	; 0x1ba6 <__mulsf3>
    11fe:	dc 01       	movw	r26, r24
    1200:	cb 01       	movw	r24, r22
    1202:	bc 01       	movw	r22, r24
    1204:	cd 01       	movw	r24, r26
    1206:	52 d4       	rcall	.+2212   	; 0x1aac <__fixunssfsi>
    1208:	dc 01       	movw	r26, r24
    120a:	cb 01       	movw	r24, r22
    120c:	98 8f       	std	Y+24, r25	; 0x18
    120e:	8f 8b       	std	Y+23, r24	; 0x17
    1210:	0f c0       	rjmp	.+30     	; 0x1230 <_ZN3lcd15test_LCD_ScreenEv+0x21e>
    1212:	89 e1       	ldi	r24, 0x19	; 25
    1214:	90 e0       	ldi	r25, 0x00	; 0
    1216:	9a 8f       	std	Y+26, r25	; 0x1a
    1218:	89 8f       	std	Y+25, r24	; 0x19
    121a:	89 8d       	ldd	r24, Y+25	; 0x19
    121c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    121e:	01 97       	sbiw	r24, 0x01	; 1
    1220:	f1 f7       	brne	.-4      	; 0x121e <_ZN3lcd15test_LCD_ScreenEv+0x20c>
    1222:	9a 8f       	std	Y+26, r25	; 0x1a
    1224:	89 8f       	std	Y+25, r24	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1226:	8f 89       	ldd	r24, Y+23	; 0x17
    1228:	98 8d       	ldd	r25, Y+24	; 0x18
    122a:	01 97       	sbiw	r24, 0x01	; 1
    122c:	98 8f       	std	Y+24, r25	; 0x18
    122e:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1230:	8f 89       	ldd	r24, Y+23	; 0x17
    1232:	98 8d       	ldd	r25, Y+24	; 0x18
    1234:	89 2b       	or	r24, r25
    1236:	69 f7       	brne	.-38     	; 0x1212 <_ZN3lcd15test_LCD_ScreenEv+0x200>
    1238:	13 c0       	rjmp	.+38     	; 0x1260 <_ZN3lcd15test_LCD_ScreenEv+0x24e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    123a:	6b 89       	ldd	r22, Y+19	; 0x13
    123c:	7c 89       	ldd	r23, Y+20	; 0x14
    123e:	8d 89       	ldd	r24, Y+21	; 0x15
    1240:	9e 89       	ldd	r25, Y+22	; 0x16
    1242:	34 d4       	rcall	.+2152   	; 0x1aac <__fixunssfsi>
    1244:	dc 01       	movw	r26, r24
    1246:	cb 01       	movw	r24, r22
    1248:	98 8f       	std	Y+24, r25	; 0x18
    124a:	8f 8b       	std	Y+23, r24	; 0x17
    124c:	8f 89       	ldd	r24, Y+23	; 0x17
    124e:	98 8d       	ldd	r25, Y+24	; 0x18
    1250:	9c 8f       	std	Y+28, r25	; 0x1c
    1252:	8b 8f       	std	Y+27, r24	; 0x1b
    1254:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1256:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1258:	01 97       	sbiw	r24, 0x01	; 1
    125a:	f1 f7       	brne	.-4      	; 0x1258 <_ZN3lcd15test_LCD_ScreenEv+0x246>
    125c:	9c 8f       	std	Y+28, r25	; 0x1c
    125e:	8b 8f       	std	Y+27, r24	; 0x1b
	_delay_ms(250);
	print(text1, LINE_TOP);
    1260:	9e 01       	movw	r18, r28
    1262:	23 5e       	subi	r18, 0xE3	; 227
    1264:	3f 4f       	sbci	r19, 0xFF	; 255
    1266:	ce 01       	movw	r24, r28
    1268:	cf 96       	adiw	r24, 0x3f	; 63
    126a:	fc 01       	movw	r30, r24
    126c:	80 81       	ld	r24, Z
    126e:	91 81       	ldd	r25, Z+1	; 0x01
    1270:	40 e0       	ldi	r20, 0x00	; 0
    1272:	b9 01       	movw	r22, r18
    1274:	15 d0       	rcall	.+42     	; 0x12a0 <_ZN3lcd5printEPhh>
	print(text2, LINE_BOTTOM);
    1276:	9e 01       	movw	r18, r28
    1278:	22 5d       	subi	r18, 0xD2	; 210
    127a:	3f 4f       	sbci	r19, 0xFF	; 255
    127c:	ce 01       	movw	r24, r28
    127e:	cf 96       	adiw	r24, 0x3f	; 63
    1280:	fc 01       	movw	r30, r24
    1282:	80 81       	ld	r24, Z
    1284:	91 81       	ldd	r25, Z+1	; 0x01
    1286:	41 e0       	ldi	r20, 0x01	; 1
    1288:	b9 01       	movw	r22, r18
    128a:	0a d0       	rcall	.+20     	; 0x12a0 <_ZN3lcd5printEPhh>

}
    128c:	c0 5c       	subi	r28, 0xC0	; 192
    128e:	df 4f       	sbci	r29, 0xFF	; 255
    1290:	0f b6       	in	r0, 0x3f	; 63
    1292:	f8 94       	cli
    1294:	de bf       	out	0x3e, r29	; 62
    1296:	0f be       	out	0x3f, r0	; 63
    1298:	cd bf       	out	0x3d, r28	; 61
    129a:	df 91       	pop	r29
    129c:	cf 91       	pop	r28
    129e:	08 95       	ret

000012a0 <_ZN3lcd5printEPhh>:


void lcd::print(unsigned char* text, uint8_t valLine){
    12a0:	cf 93       	push	r28
    12a2:	df 93       	push	r29
    12a4:	cd b7       	in	r28, 0x3d	; 61
    12a6:	de b7       	in	r29, 0x3e	; 62
    12a8:	a1 97       	sbiw	r28, 0x21	; 33
    12aa:	0f b6       	in	r0, 0x3f	; 63
    12ac:	f8 94       	cli
    12ae:	de bf       	out	0x3e, r29	; 62
    12b0:	0f be       	out	0x3f, r0	; 63
    12b2:	cd bf       	out	0x3d, r28	; 61
    12b4:	9e 8f       	std	Y+30, r25	; 0x1e
    12b6:	8d 8f       	std	Y+29, r24	; 0x1d
    12b8:	78 a3       	std	Y+32, r23	; 0x20
    12ba:	6f 8f       	std	Y+31, r22	; 0x1f
    12bc:	49 a3       	std	Y+33, r20	; 0x21
		
	if( valLine == LINE_TOP ){
    12be:	89 a1       	ldd	r24, Y+33	; 0x21
    12c0:	88 23       	and	r24, r24
    12c2:	09 f0       	breq	.+2      	; 0x12c6 <_ZN3lcd5printEPhh+0x26>
    12c4:	76 c0       	rjmp	.+236    	; 0x13b2 <_ZN3lcd5printEPhh+0x112>
		SelectLine1();
    12c6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    12c8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    12ca:	6c db       	rcall	.-2344   	; 0x9a4 <_ZN3lcd11SelectLine1Ev>
    12cc:	80 e0       	ldi	r24, 0x00	; 0
    12ce:	90 e0       	ldi	r25, 0x00	; 0
    12d0:	a0 e2       	ldi	r26, 0x20	; 32
    12d2:	b1 e4       	ldi	r27, 0x41	; 65
    12d4:	89 83       	std	Y+1, r24	; 0x01
    12d6:	9a 83       	std	Y+2, r25	; 0x02
    12d8:	ab 83       	std	Y+3, r26	; 0x03
    12da:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    12dc:	20 e0       	ldi	r18, 0x00	; 0
    12de:	30 e0       	ldi	r19, 0x00	; 0
    12e0:	4a e7       	ldi	r20, 0x7A	; 122
    12e2:	53 e4       	ldi	r21, 0x43	; 67
    12e4:	69 81       	ldd	r22, Y+1	; 0x01
    12e6:	7a 81       	ldd	r23, Y+2	; 0x02
    12e8:	8b 81       	ldd	r24, Y+3	; 0x03
    12ea:	9c 81       	ldd	r25, Y+4	; 0x04
    12ec:	5c d4       	rcall	.+2232   	; 0x1ba6 <__mulsf3>
    12ee:	dc 01       	movw	r26, r24
    12f0:	cb 01       	movw	r24, r22
    12f2:	8d 83       	std	Y+5, r24	; 0x05
    12f4:	9e 83       	std	Y+6, r25	; 0x06
    12f6:	af 83       	std	Y+7, r26	; 0x07
    12f8:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
    12fa:	20 e0       	ldi	r18, 0x00	; 0
    12fc:	30 e0       	ldi	r19, 0x00	; 0
    12fe:	40 e8       	ldi	r20, 0x80	; 128
    1300:	5f e3       	ldi	r21, 0x3F	; 63
    1302:	6d 81       	ldd	r22, Y+5	; 0x05
    1304:	7e 81       	ldd	r23, Y+6	; 0x06
    1306:	8f 81       	ldd	r24, Y+7	; 0x07
    1308:	98 85       	ldd	r25, Y+8	; 0x08
    130a:	cc d3       	rcall	.+1944   	; 0x1aa4 <__cmpsf2>
    130c:	88 23       	and	r24, r24
    130e:	2c f4       	brge	.+10     	; 0x131a <_ZN3lcd5printEPhh+0x7a>
		__ticks = 1;
    1310:	81 e0       	ldi	r24, 0x01	; 1
    1312:	90 e0       	ldi	r25, 0x00	; 0
    1314:	9a 87       	std	Y+10, r25	; 0x0a
    1316:	89 87       	std	Y+9, r24	; 0x09
    1318:	3b c0       	rjmp	.+118    	; 0x1390 <_ZN3lcd5printEPhh+0xf0>
	else if (__tmp > 65535)
    131a:	20 e0       	ldi	r18, 0x00	; 0
    131c:	3f ef       	ldi	r19, 0xFF	; 255
    131e:	4f e7       	ldi	r20, 0x7F	; 127
    1320:	57 e4       	ldi	r21, 0x47	; 71
    1322:	6d 81       	ldd	r22, Y+5	; 0x05
    1324:	7e 81       	ldd	r23, Y+6	; 0x06
    1326:	8f 81       	ldd	r24, Y+7	; 0x07
    1328:	98 85       	ldd	r25, Y+8	; 0x08
    132a:	39 d4       	rcall	.+2162   	; 0x1b9e <__gesf2>
    132c:	18 16       	cp	r1, r24
    132e:	3c f5       	brge	.+78     	; 0x137e <_ZN3lcd5printEPhh+0xde>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1330:	20 e0       	ldi	r18, 0x00	; 0
    1332:	30 e0       	ldi	r19, 0x00	; 0
    1334:	40 e2       	ldi	r20, 0x20	; 32
    1336:	51 e4       	ldi	r21, 0x41	; 65
    1338:	69 81       	ldd	r22, Y+1	; 0x01
    133a:	7a 81       	ldd	r23, Y+2	; 0x02
    133c:	8b 81       	ldd	r24, Y+3	; 0x03
    133e:	9c 81       	ldd	r25, Y+4	; 0x04
    1340:	32 d4       	rcall	.+2148   	; 0x1ba6 <__mulsf3>
    1342:	dc 01       	movw	r26, r24
    1344:	cb 01       	movw	r24, r22
    1346:	bc 01       	movw	r22, r24
    1348:	cd 01       	movw	r24, r26
    134a:	b0 d3       	rcall	.+1888   	; 0x1aac <__fixunssfsi>
    134c:	dc 01       	movw	r26, r24
    134e:	cb 01       	movw	r24, r22
    1350:	9a 87       	std	Y+10, r25	; 0x0a
    1352:	89 87       	std	Y+9, r24	; 0x09
    1354:	0f c0       	rjmp	.+30     	; 0x1374 <_ZN3lcd5printEPhh+0xd4>
    1356:	89 e1       	ldi	r24, 0x19	; 25
    1358:	90 e0       	ldi	r25, 0x00	; 0
    135a:	9c 87       	std	Y+12, r25	; 0x0c
    135c:	8b 87       	std	Y+11, r24	; 0x0b
    135e:	8b 85       	ldd	r24, Y+11	; 0x0b
    1360:	9c 85       	ldd	r25, Y+12	; 0x0c
    1362:	01 97       	sbiw	r24, 0x01	; 1
    1364:	f1 f7       	brne	.-4      	; 0x1362 <_ZN3lcd5printEPhh+0xc2>
    1366:	9c 87       	std	Y+12, r25	; 0x0c
    1368:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    136a:	89 85       	ldd	r24, Y+9	; 0x09
    136c:	9a 85       	ldd	r25, Y+10	; 0x0a
    136e:	01 97       	sbiw	r24, 0x01	; 1
    1370:	9a 87       	std	Y+10, r25	; 0x0a
    1372:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1374:	89 85       	ldd	r24, Y+9	; 0x09
    1376:	9a 85       	ldd	r25, Y+10	; 0x0a
    1378:	89 2b       	or	r24, r25
    137a:	69 f7       	brne	.-38     	; 0x1356 <_ZN3lcd5printEPhh+0xb6>
    137c:	13 c0       	rjmp	.+38     	; 0x13a4 <_ZN3lcd5printEPhh+0x104>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    137e:	6d 81       	ldd	r22, Y+5	; 0x05
    1380:	7e 81       	ldd	r23, Y+6	; 0x06
    1382:	8f 81       	ldd	r24, Y+7	; 0x07
    1384:	98 85       	ldd	r25, Y+8	; 0x08
    1386:	92 d3       	rcall	.+1828   	; 0x1aac <__fixunssfsi>
    1388:	dc 01       	movw	r26, r24
    138a:	cb 01       	movw	r24, r22
    138c:	9a 87       	std	Y+10, r25	; 0x0a
    138e:	89 87       	std	Y+9, r24	; 0x09
    1390:	89 85       	ldd	r24, Y+9	; 0x09
    1392:	9a 85       	ldd	r25, Y+10	; 0x0a
    1394:	9e 87       	std	Y+14, r25	; 0x0e
    1396:	8d 87       	std	Y+13, r24	; 0x0d
    1398:	8d 85       	ldd	r24, Y+13	; 0x0d
    139a:	9e 85       	ldd	r25, Y+14	; 0x0e
    139c:	01 97       	sbiw	r24, 0x01	; 1
    139e:	f1 f7       	brne	.-4      	; 0x139c <_ZN3lcd5printEPhh+0xfc>
    13a0:	9e 87       	std	Y+14, r25	; 0x0e
    13a2:	8d 87       	std	Y+13, r24	; 0x0d
		_delay_ms(10);
		Show(text);
    13a4:	2f 8d       	ldd	r18, Y+31	; 0x1f
    13a6:	38 a1       	ldd	r19, Y+32	; 0x20
    13a8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    13aa:	9e 8d       	ldd	r25, Y+30	; 0x1e
    13ac:	b9 01       	movw	r22, r18
    13ae:	bc da       	rcall	.-2696   	; 0x928 <_ZN3lcd4ShowEPh>
    13b0:	79 c0       	rjmp	.+242    	; 0x14a4 <_ZN3lcd5printEPhh+0x204>
	}else if( valLine == LINE_BOTTOM ){
    13b2:	89 a1       	ldd	r24, Y+33	; 0x21
    13b4:	81 30       	cpi	r24, 0x01	; 1
    13b6:	09 f0       	breq	.+2      	; 0x13ba <_ZN3lcd5printEPhh+0x11a>
    13b8:	75 c0       	rjmp	.+234    	; 0x14a4 <_ZN3lcd5printEPhh+0x204>
		SelectLine2();
    13ba:	8d 8d       	ldd	r24, Y+29	; 0x1d
    13bc:	9e 8d       	ldd	r25, Y+30	; 0x1e
    13be:	13 db       	rcall	.-2522   	; 0x9e6 <_ZN3lcd11SelectLine2Ev>
    13c0:	80 e0       	ldi	r24, 0x00	; 0
    13c2:	90 e0       	ldi	r25, 0x00	; 0
    13c4:	a0 e2       	ldi	r26, 0x20	; 32
    13c6:	b1 e4       	ldi	r27, 0x41	; 65
    13c8:	8f 87       	std	Y+15, r24	; 0x0f
    13ca:	98 8b       	std	Y+16, r25	; 0x10
    13cc:	a9 8b       	std	Y+17, r26	; 0x11
    13ce:	ba 8b       	std	Y+18, r27	; 0x12

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    13d0:	20 e0       	ldi	r18, 0x00	; 0
    13d2:	30 e0       	ldi	r19, 0x00	; 0
    13d4:	4a e7       	ldi	r20, 0x7A	; 122
    13d6:	53 e4       	ldi	r21, 0x43	; 67
    13d8:	6f 85       	ldd	r22, Y+15	; 0x0f
    13da:	78 89       	ldd	r23, Y+16	; 0x10
    13dc:	89 89       	ldd	r24, Y+17	; 0x11
    13de:	9a 89       	ldd	r25, Y+18	; 0x12
    13e0:	e2 d3       	rcall	.+1988   	; 0x1ba6 <__mulsf3>
    13e2:	dc 01       	movw	r26, r24
    13e4:	cb 01       	movw	r24, r22
    13e6:	8b 8b       	std	Y+19, r24	; 0x13
    13e8:	9c 8b       	std	Y+20, r25	; 0x14
    13ea:	ad 8b       	std	Y+21, r26	; 0x15
    13ec:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
    13ee:	20 e0       	ldi	r18, 0x00	; 0
    13f0:	30 e0       	ldi	r19, 0x00	; 0
    13f2:	40 e8       	ldi	r20, 0x80	; 128
    13f4:	5f e3       	ldi	r21, 0x3F	; 63
    13f6:	6b 89       	ldd	r22, Y+19	; 0x13
    13f8:	7c 89       	ldd	r23, Y+20	; 0x14
    13fa:	8d 89       	ldd	r24, Y+21	; 0x15
    13fc:	9e 89       	ldd	r25, Y+22	; 0x16
    13fe:	52 d3       	rcall	.+1700   	; 0x1aa4 <__cmpsf2>
    1400:	88 23       	and	r24, r24
    1402:	2c f4       	brge	.+10     	; 0x140e <_ZN3lcd5printEPhh+0x16e>
		__ticks = 1;
    1404:	81 e0       	ldi	r24, 0x01	; 1
    1406:	90 e0       	ldi	r25, 0x00	; 0
    1408:	98 8f       	std	Y+24, r25	; 0x18
    140a:	8f 8b       	std	Y+23, r24	; 0x17
    140c:	3b c0       	rjmp	.+118    	; 0x1484 <_ZN3lcd5printEPhh+0x1e4>
	else if (__tmp > 65535)
    140e:	20 e0       	ldi	r18, 0x00	; 0
    1410:	3f ef       	ldi	r19, 0xFF	; 255
    1412:	4f e7       	ldi	r20, 0x7F	; 127
    1414:	57 e4       	ldi	r21, 0x47	; 71
    1416:	6b 89       	ldd	r22, Y+19	; 0x13
    1418:	7c 89       	ldd	r23, Y+20	; 0x14
    141a:	8d 89       	ldd	r24, Y+21	; 0x15
    141c:	9e 89       	ldd	r25, Y+22	; 0x16
    141e:	bf d3       	rcall	.+1918   	; 0x1b9e <__gesf2>
    1420:	18 16       	cp	r1, r24
    1422:	3c f5       	brge	.+78     	; 0x1472 <_ZN3lcd5printEPhh+0x1d2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1424:	20 e0       	ldi	r18, 0x00	; 0
    1426:	30 e0       	ldi	r19, 0x00	; 0
    1428:	40 e2       	ldi	r20, 0x20	; 32
    142a:	51 e4       	ldi	r21, 0x41	; 65
    142c:	6f 85       	ldd	r22, Y+15	; 0x0f
    142e:	78 89       	ldd	r23, Y+16	; 0x10
    1430:	89 89       	ldd	r24, Y+17	; 0x11
    1432:	9a 89       	ldd	r25, Y+18	; 0x12
    1434:	b8 d3       	rcall	.+1904   	; 0x1ba6 <__mulsf3>
    1436:	dc 01       	movw	r26, r24
    1438:	cb 01       	movw	r24, r22
    143a:	bc 01       	movw	r22, r24
    143c:	cd 01       	movw	r24, r26
    143e:	36 d3       	rcall	.+1644   	; 0x1aac <__fixunssfsi>
    1440:	dc 01       	movw	r26, r24
    1442:	cb 01       	movw	r24, r22
    1444:	98 8f       	std	Y+24, r25	; 0x18
    1446:	8f 8b       	std	Y+23, r24	; 0x17
    1448:	0f c0       	rjmp	.+30     	; 0x1468 <_ZN3lcd5printEPhh+0x1c8>
    144a:	89 e1       	ldi	r24, 0x19	; 25
    144c:	90 e0       	ldi	r25, 0x00	; 0
    144e:	9a 8f       	std	Y+26, r25	; 0x1a
    1450:	89 8f       	std	Y+25, r24	; 0x19
    1452:	89 8d       	ldd	r24, Y+25	; 0x19
    1454:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1456:	01 97       	sbiw	r24, 0x01	; 1
    1458:	f1 f7       	brne	.-4      	; 0x1456 <_ZN3lcd5printEPhh+0x1b6>
    145a:	9a 8f       	std	Y+26, r25	; 0x1a
    145c:	89 8f       	std	Y+25, r24	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    145e:	8f 89       	ldd	r24, Y+23	; 0x17
    1460:	98 8d       	ldd	r25, Y+24	; 0x18
    1462:	01 97       	sbiw	r24, 0x01	; 1
    1464:	98 8f       	std	Y+24, r25	; 0x18
    1466:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1468:	8f 89       	ldd	r24, Y+23	; 0x17
    146a:	98 8d       	ldd	r25, Y+24	; 0x18
    146c:	89 2b       	or	r24, r25
    146e:	69 f7       	brne	.-38     	; 0x144a <_ZN3lcd5printEPhh+0x1aa>
    1470:	13 c0       	rjmp	.+38     	; 0x1498 <_ZN3lcd5printEPhh+0x1f8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1472:	6b 89       	ldd	r22, Y+19	; 0x13
    1474:	7c 89       	ldd	r23, Y+20	; 0x14
    1476:	8d 89       	ldd	r24, Y+21	; 0x15
    1478:	9e 89       	ldd	r25, Y+22	; 0x16
    147a:	18 d3       	rcall	.+1584   	; 0x1aac <__fixunssfsi>
    147c:	dc 01       	movw	r26, r24
    147e:	cb 01       	movw	r24, r22
    1480:	98 8f       	std	Y+24, r25	; 0x18
    1482:	8f 8b       	std	Y+23, r24	; 0x17
    1484:	8f 89       	ldd	r24, Y+23	; 0x17
    1486:	98 8d       	ldd	r25, Y+24	; 0x18
    1488:	9c 8f       	std	Y+28, r25	; 0x1c
    148a:	8b 8f       	std	Y+27, r24	; 0x1b
    148c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    148e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1490:	01 97       	sbiw	r24, 0x01	; 1
    1492:	f1 f7       	brne	.-4      	; 0x1490 <_ZN3lcd5printEPhh+0x1f0>
    1494:	9c 8f       	std	Y+28, r25	; 0x1c
    1496:	8b 8f       	std	Y+27, r24	; 0x1b
		_delay_ms(10);
		Show(text);
    1498:	2f 8d       	ldd	r18, Y+31	; 0x1f
    149a:	38 a1       	ldd	r19, Y+32	; 0x20
    149c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    149e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    14a0:	b9 01       	movw	r22, r18
    14a2:	42 da       	rcall	.-2940   	; 0x928 <_ZN3lcd4ShowEPh>
	}
		
}
    14a4:	a1 96       	adiw	r28, 0x21	; 33
    14a6:	0f b6       	in	r0, 0x3f	; 63
    14a8:	f8 94       	cli
    14aa:	de bf       	out	0x3e, r29	; 62
    14ac:	0f be       	out	0x3f, r0	; 63
    14ae:	cd bf       	out	0x3d, r28	; 61
    14b0:	df 91       	pop	r29
    14b2:	cf 91       	pop	r28
    14b4:	08 95       	ret

000014b6 <_ZN3rtcC1Ev>:
#include <avr/io.h>
#include <util/delay.h>
#include "rtc.h"


rtc::rtc(){
    14b6:	cf 93       	push	r28
    14b8:	df 93       	push	r29
    14ba:	00 d0       	rcall	.+0      	; 0x14bc <_ZN3rtcC1Ev+0x6>
    14bc:	00 d0       	rcall	.+0      	; 0x14be <_ZN3rtcC1Ev+0x8>
    14be:	cd b7       	in	r28, 0x3d	; 61
    14c0:	de b7       	in	r29, 0x3e	; 62
    14c2:	9c 83       	std	Y+4, r25	; 0x04
    14c4:	8b 83       	std	Y+3, r24	; 0x03
	
	uint8_t tc = 0;
    14c6:	19 82       	std	Y+1, r1	; 0x01
	uint8_t tc2 = 0xFF;
    14c8:	8f ef       	ldi	r24, 0xFF	; 255
    14ca:	8a 83       	std	Y+2, r24	; 0x02


	init();
    14cc:	8b 81       	ldd	r24, Y+3	; 0x03
    14ce:	9c 81       	ldd	r25, Y+4	; 0x04
    14d0:	4c d0       	rcall	.+152    	; 0x156a <_ZN3rtc4initEv>
	write_block(0x0F,&tc,1);	// Enable timer and unwrite protect memory
    14d2:	8b 81       	ldd	r24, Y+3	; 0x03
    14d4:	9c 81       	ldd	r25, Y+4	; 0x04
    14d6:	21 e0       	ldi	r18, 0x01	; 1
    14d8:	30 e0       	ldi	r19, 0x00	; 0
    14da:	ae 01       	movw	r20, r28
    14dc:	4f 5f       	subi	r20, 0xFF	; 255
    14de:	5f 4f       	sbci	r21, 0xFF	; 255
    14e0:	6f e0       	ldi	r22, 0x0F	; 15
    14e2:	cd d0       	rcall	.+410    	; 0x167e <_ZN3rtc11write_blockEhPhj>
	write_block(0x82,&tc2,1);	// set 12hr format
    14e4:	ae 01       	movw	r20, r28
    14e6:	4e 5f       	subi	r20, 0xFE	; 254
    14e8:	5f 4f       	sbci	r21, 0xFF	; 255
    14ea:	8b 81       	ldd	r24, Y+3	; 0x03
    14ec:	9c 81       	ldd	r25, Y+4	; 0x04
    14ee:	21 e0       	ldi	r18, 0x01	; 1
    14f0:	30 e0       	ldi	r19, 0x00	; 0
    14f2:	62 e8       	ldi	r22, 0x82	; 130
    14f4:	c4 d0       	rcall	.+392    	; 0x167e <_ZN3rtc11write_blockEhPhj>
	
}
    14f6:	0f 90       	pop	r0
    14f8:	0f 90       	pop	r0
    14fa:	0f 90       	pop	r0
    14fc:	0f 90       	pop	r0
    14fe:	df 91       	pop	r29
    1500:	cf 91       	pop	r28
    1502:	08 95       	ret

00001504 <_ZN3rtc10spi_selectEv>:


void rtc::spi_select( ) {
    1504:	cf 93       	push	r28
    1506:	df 93       	push	r29
    1508:	00 d0       	rcall	.+0      	; 0x150a <_ZN3rtc10spi_selectEv+0x6>
    150a:	cd b7       	in	r28, 0x3d	; 61
    150c:	de b7       	in	r29, 0x3e	; 62
    150e:	9a 83       	std	Y+2, r25	; 0x02
    1510:	89 83       	std	Y+1, r24	; 0x01

	SPCR |= ( 1 << CPHA );
    1512:	8c e4       	ldi	r24, 0x4C	; 76
    1514:	90 e0       	ldi	r25, 0x00	; 0
    1516:	2c e4       	ldi	r18, 0x4C	; 76
    1518:	30 e0       	ldi	r19, 0x00	; 0
    151a:	f9 01       	movw	r30, r18
    151c:	20 81       	ld	r18, Z
    151e:	24 60       	ori	r18, 0x04	; 4
    1520:	fc 01       	movw	r30, r24
    1522:	20 83       	st	Z, r18
	PORTB |= ( 1 << SS_PIN );
    1524:	85 e2       	ldi	r24, 0x25	; 37
    1526:	90 e0       	ldi	r25, 0x00	; 0
    1528:	25 e2       	ldi	r18, 0x25	; 37
    152a:	30 e0       	ldi	r19, 0x00	; 0
    152c:	f9 01       	movw	r30, r18
    152e:	20 81       	ld	r18, Z
    1530:	20 61       	ori	r18, 0x10	; 16
    1532:	fc 01       	movw	r30, r24
    1534:	20 83       	st	Z, r18

}
    1536:	0f 90       	pop	r0
    1538:	0f 90       	pop	r0
    153a:	df 91       	pop	r29
    153c:	cf 91       	pop	r28
    153e:	08 95       	ret

00001540 <_ZN3rtc12spi_deselectEv>:

/*
*	This routine de-selects the device by lowering the CE
*	line. Must be done after the master transmit is complete
*/
void rtc::spi_deselect( ){
    1540:	cf 93       	push	r28
    1542:	df 93       	push	r29
    1544:	00 d0       	rcall	.+0      	; 0x1546 <_ZN3rtc12spi_deselectEv+0x6>
    1546:	cd b7       	in	r28, 0x3d	; 61
    1548:	de b7       	in	r29, 0x3e	; 62
    154a:	9a 83       	std	Y+2, r25	; 0x02
    154c:	89 83       	std	Y+1, r24	; 0x01

	PORTB &= ~( 1 << SS_PIN );
    154e:	85 e2       	ldi	r24, 0x25	; 37
    1550:	90 e0       	ldi	r25, 0x00	; 0
    1552:	25 e2       	ldi	r18, 0x25	; 37
    1554:	30 e0       	ldi	r19, 0x00	; 0
    1556:	f9 01       	movw	r30, r18
    1558:	20 81       	ld	r18, Z
    155a:	2f 7e       	andi	r18, 0xEF	; 239
    155c:	fc 01       	movw	r30, r24
    155e:	20 83       	st	Z, r18

}
    1560:	0f 90       	pop	r0
    1562:	0f 90       	pop	r0
    1564:	df 91       	pop	r29
    1566:	cf 91       	pop	r28
    1568:	08 95       	ret

0000156a <_ZN3rtc4initEv>:


void rtc::init( ){
    156a:	cf 93       	push	r28
    156c:	df 93       	push	r29
    156e:	00 d0       	rcall	.+0      	; 0x1570 <_ZN3rtc4initEv+0x6>
    1570:	1f 92       	push	r1
    1572:	cd b7       	in	r28, 0x3d	; 61
    1574:	de b7       	in	r29, 0x3e	; 62
    1576:	9b 83       	std	Y+3, r25	; 0x03
    1578:	8a 83       	std	Y+2, r24	; 0x02

	char IOReg;

	/* Outputs: MOSI and SCK out, all others inputs */
	DDRB = ( 1 << DD_MOSI_PIN ) | ( 1 << DD_SCK_PIN ) | ( 1 << DD_SS_PIN );
    157a:	84 e2       	ldi	r24, 0x24	; 36
    157c:	90 e0       	ldi	r25, 0x00	; 0
    157e:	20 eb       	ldi	r18, 0xB0	; 176
    1580:	fc 01       	movw	r30, r24
    1582:	20 83       	st	Z, r18
	/* Enable SPI, Master, CPOL=0, CPHA=1, set clock rate fck/16 */
	SPCR = ( 1 << SPE ) | ( 1 << MSTR ) | ( 1 << SPR0 );	// POSSIBLE ERROR: PULLING DATA HIGH
    1584:	8c e4       	ldi	r24, 0x4C	; 76
    1586:	90 e0       	ldi	r25, 0x00	; 0
    1588:	21 e5       	ldi	r18, 0x51	; 81
    158a:	fc 01       	movw	r30, r24
    158c:	20 83       	st	Z, r18
	
	/* Clear the SPIF bit in SPSR */
	IOReg = SPSR;
    158e:	8d e4       	ldi	r24, 0x4D	; 77
    1590:	90 e0       	ldi	r25, 0x00	; 0
    1592:	fc 01       	movw	r30, r24
    1594:	80 81       	ld	r24, Z
    1596:	89 83       	std	Y+1, r24	; 0x01
	IOReg = SPDR;
    1598:	8e e4       	ldi	r24, 0x4E	; 78
    159a:	90 e0       	ldi	r25, 0x00	; 0
    159c:	fc 01       	movw	r30, r24
    159e:	80 81       	ld	r24, Z
    15a0:	89 83       	std	Y+1, r24	; 0x01

	spi_deselect( );
    15a2:	8a 81       	ldd	r24, Y+2	; 0x02
    15a4:	9b 81       	ldd	r25, Y+3	; 0x03
    15a6:	cc df       	rcall	.-104    	; 0x1540 <_ZN3rtc12spi_deselectEv>
}
    15a8:	0f 90       	pop	r0
    15aa:	0f 90       	pop	r0
    15ac:	0f 90       	pop	r0
    15ae:	df 91       	pop	r29
    15b0:	cf 91       	pop	r28
    15b2:	08 95       	ret

000015b4 <_ZN3rtc19spi_master_transmitEh>:


// This routine exchanges 1 byte with the SPI port. 
unsigned char rtc::spi_master_transmit( unsigned char cData )
{
    15b4:	cf 93       	push	r28
    15b6:	df 93       	push	r29
    15b8:	00 d0       	rcall	.+0      	; 0x15ba <_ZN3rtc19spi_master_transmitEh+0x6>
    15ba:	1f 92       	push	r1
    15bc:	cd b7       	in	r28, 0x3d	; 61
    15be:	de b7       	in	r29, 0x3e	; 62
    15c0:	9a 83       	std	Y+2, r25	; 0x02
    15c2:	89 83       	std	Y+1, r24	; 0x01
    15c4:	6b 83       	std	Y+3, r22	; 0x03

	SPDR  = cData;	// Set Pointer to beginning of String
    15c6:	8e e4       	ldi	r24, 0x4E	; 78
    15c8:	90 e0       	ldi	r25, 0x00	; 0
    15ca:	2b 81       	ldd	r18, Y+3	; 0x03
    15cc:	fc 01       	movw	r30, r24
    15ce:	20 83       	st	Z, r18
	/* wait until Char is sent */
	while ( ! (SPSR & ( 1 << SPIF ))){
    15d0:	00 00       	nop
    15d2:	8d e4       	ldi	r24, 0x4D	; 77
    15d4:	90 e0       	ldi	r25, 0x00	; 0
    15d6:	fc 01       	movw	r30, r24
    15d8:	80 81       	ld	r24, Z
    15da:	80 95       	com	r24
    15dc:	88 1f       	adc	r24, r24
    15de:	88 27       	eor	r24, r24
    15e0:	88 1f       	adc	r24, r24
    15e2:	88 23       	and	r24, r24
    15e4:	b1 f7       	brne	.-20     	; 0x15d2 <_ZN3rtc19spi_master_transmitEh+0x1e>
		;	
	}

	return SPDR;
    15e6:	8e e4       	ldi	r24, 0x4E	; 78
    15e8:	90 e0       	ldi	r25, 0x00	; 0
    15ea:	fc 01       	movw	r30, r24
    15ec:	80 81       	ld	r24, Z
}
    15ee:	0f 90       	pop	r0
    15f0:	0f 90       	pop	r0
    15f2:	0f 90       	pop	r0
    15f4:	df 91       	pop	r29
    15f6:	cf 91       	pop	r28
    15f8:	08 95       	ret

000015fa <_ZN3rtc10read_blockEhPhj>:

/*
*	ReadBlock reads iCount bytes starting at cAddr into the
*	buffer pBuffer
*/
void rtc::read_block( unsigned char cAddr, unsigned char *pBuffer, unsigned int iCount ){
    15fa:	0f 93       	push	r16
    15fc:	1f 93       	push	r17
    15fe:	cf 93       	push	r28
    1600:	df 93       	push	r29
    1602:	cd b7       	in	r28, 0x3d	; 61
    1604:	de b7       	in	r29, 0x3e	; 62
    1606:	27 97       	sbiw	r28, 0x07	; 7
    1608:	0f b6       	in	r0, 0x3f	; 63
    160a:	f8 94       	cli
    160c:	de bf       	out	0x3e, r29	; 62
    160e:	0f be       	out	0x3f, r0	; 63
    1610:	cd bf       	out	0x3d, r28	; 61
    1612:	9a 83       	std	Y+2, r25	; 0x02
    1614:	89 83       	std	Y+1, r24	; 0x01
    1616:	6b 83       	std	Y+3, r22	; 0x03
    1618:	5d 83       	std	Y+5, r21	; 0x05
    161a:	4c 83       	std	Y+4, r20	; 0x04
    161c:	3f 83       	std	Y+7, r19	; 0x07
    161e:	2e 83       	std	Y+6, r18	; 0x06
	
	spi_select( );
    1620:	89 81       	ldd	r24, Y+1	; 0x01
    1622:	9a 81       	ldd	r25, Y+2	; 0x02
    1624:	6f df       	rcall	.-290    	; 0x1504 <_ZN3rtc10spi_selectEv>

	spi_master_transmit( cAddr );
    1626:	89 81       	ldd	r24, Y+1	; 0x01
    1628:	9a 81       	ldd	r25, Y+2	; 0x02
    162a:	6b 81       	ldd	r22, Y+3	; 0x03
    162c:	c3 df       	rcall	.-122    	; 0x15b4 <_ZN3rtc19spi_master_transmitEh>
	while( iCount-- ){
    162e:	0c c0       	rjmp	.+24     	; 0x1648 <_ZN3rtc10read_blockEhPhj+0x4e>
		*pBuffer++ = spi_master_transmit( 0 );
    1630:	0c 81       	ldd	r16, Y+4	; 0x04
    1632:	1d 81       	ldd	r17, Y+5	; 0x05
    1634:	c8 01       	movw	r24, r16
    1636:	01 96       	adiw	r24, 0x01	; 1
    1638:	9d 83       	std	Y+5, r25	; 0x05
    163a:	8c 83       	std	Y+4, r24	; 0x04
    163c:	89 81       	ldd	r24, Y+1	; 0x01
    163e:	9a 81       	ldd	r25, Y+2	; 0x02
    1640:	60 e0       	ldi	r22, 0x00	; 0
    1642:	b8 df       	rcall	.-144    	; 0x15b4 <_ZN3rtc19spi_master_transmitEh>
    1644:	f8 01       	movw	r30, r16
    1646:	80 83       	st	Z, r24
void rtc::read_block( unsigned char cAddr, unsigned char *pBuffer, unsigned int iCount ){
	
	spi_select( );

	spi_master_transmit( cAddr );
	while( iCount-- ){
    1648:	8e 81       	ldd	r24, Y+6	; 0x06
    164a:	9f 81       	ldd	r25, Y+7	; 0x07
    164c:	9c 01       	movw	r18, r24
    164e:	21 50       	subi	r18, 0x01	; 1
    1650:	31 09       	sbc	r19, r1
    1652:	3f 83       	std	Y+7, r19	; 0x07
    1654:	2e 83       	std	Y+6, r18	; 0x06
    1656:	21 e0       	ldi	r18, 0x01	; 1
    1658:	89 2b       	or	r24, r25
    165a:	09 f4       	brne	.+2      	; 0x165e <_ZN3rtc10read_blockEhPhj+0x64>
    165c:	20 e0       	ldi	r18, 0x00	; 0
    165e:	22 23       	and	r18, r18
    1660:	39 f7       	brne	.-50     	; 0x1630 <_ZN3rtc10read_blockEhPhj+0x36>
		*pBuffer++ = spi_master_transmit( 0 );
	}

	spi_deselect();
    1662:	89 81       	ldd	r24, Y+1	; 0x01
    1664:	9a 81       	ldd	r25, Y+2	; 0x02
    1666:	6c df       	rcall	.-296    	; 0x1540 <_ZN3rtc12spi_deselectEv>

}
    1668:	27 96       	adiw	r28, 0x07	; 7
    166a:	0f b6       	in	r0, 0x3f	; 63
    166c:	f8 94       	cli
    166e:	de bf       	out	0x3e, r29	; 62
    1670:	0f be       	out	0x3f, r0	; 63
    1672:	cd bf       	out	0x3d, r28	; 61
    1674:	df 91       	pop	r29
    1676:	cf 91       	pop	r28
    1678:	1f 91       	pop	r17
    167a:	0f 91       	pop	r16
    167c:	08 95       	ret

0000167e <_ZN3rtc11write_blockEhPhj>:
/*
*  WriteBlock sends iCount bytes from the buffer pBuffer
*  to the device at iAddr + 0x80. The device uses a split
*  memory map where all write addresses are at address +0x80
*/
void rtc::write_block(unsigned char iAddr, unsigned char *pBuffer, unsigned int iCount){
    167e:	cf 93       	push	r28
    1680:	df 93       	push	r29
    1682:	cd b7       	in	r28, 0x3d	; 61
    1684:	de b7       	in	r29, 0x3e	; 62
    1686:	27 97       	sbiw	r28, 0x07	; 7
    1688:	0f b6       	in	r0, 0x3f	; 63
    168a:	f8 94       	cli
    168c:	de bf       	out	0x3e, r29	; 62
    168e:	0f be       	out	0x3f, r0	; 63
    1690:	cd bf       	out	0x3d, r28	; 61
    1692:	9a 83       	std	Y+2, r25	; 0x02
    1694:	89 83       	std	Y+1, r24	; 0x01
    1696:	6b 83       	std	Y+3, r22	; 0x03
    1698:	5d 83       	std	Y+5, r21	; 0x05
    169a:	4c 83       	std	Y+4, r20	; 0x04
    169c:	3f 83       	std	Y+7, r19	; 0x07
    169e:	2e 83       	std	Y+6, r18	; 0x06

	spi_select( );
    16a0:	89 81       	ldd	r24, Y+1	; 0x01
    16a2:	9a 81       	ldd	r25, Y+2	; 0x02
    16a4:	2f df       	rcall	.-418    	; 0x1504 <_ZN3rtc10spi_selectEv>

	spi_master_transmit( iAddr + 0x80 );
    16a6:	8b 81       	ldd	r24, Y+3	; 0x03
    16a8:	20 e8       	ldi	r18, 0x80	; 128
    16aa:	28 0f       	add	r18, r24
    16ac:	89 81       	ldd	r24, Y+1	; 0x01
    16ae:	9a 81       	ldd	r25, Y+2	; 0x02
    16b0:	62 2f       	mov	r22, r18
    16b2:	80 df       	rcall	.-256    	; 0x15b4 <_ZN3rtc19spi_master_transmitEh>
	while( iCount-- ){
    16b4:	0d c0       	rjmp	.+26     	; 0x16d0 <_ZN3rtc11write_blockEhPhj+0x52>
		spi_master_transmit( *pBuffer++ );
    16b6:	8c 81       	ldd	r24, Y+4	; 0x04
    16b8:	9d 81       	ldd	r25, Y+5	; 0x05
    16ba:	9c 01       	movw	r18, r24
    16bc:	2f 5f       	subi	r18, 0xFF	; 255
    16be:	3f 4f       	sbci	r19, 0xFF	; 255
    16c0:	3d 83       	std	Y+5, r19	; 0x05
    16c2:	2c 83       	std	Y+4, r18	; 0x04
    16c4:	fc 01       	movw	r30, r24
    16c6:	20 81       	ld	r18, Z
    16c8:	89 81       	ldd	r24, Y+1	; 0x01
    16ca:	9a 81       	ldd	r25, Y+2	; 0x02
    16cc:	62 2f       	mov	r22, r18
    16ce:	72 df       	rcall	.-284    	; 0x15b4 <_ZN3rtc19spi_master_transmitEh>
void rtc::write_block(unsigned char iAddr, unsigned char *pBuffer, unsigned int iCount){

	spi_select( );

	spi_master_transmit( iAddr + 0x80 );
	while( iCount-- ){
    16d0:	8e 81       	ldd	r24, Y+6	; 0x06
    16d2:	9f 81       	ldd	r25, Y+7	; 0x07
    16d4:	9c 01       	movw	r18, r24
    16d6:	21 50       	subi	r18, 0x01	; 1
    16d8:	31 09       	sbc	r19, r1
    16da:	3f 83       	std	Y+7, r19	; 0x07
    16dc:	2e 83       	std	Y+6, r18	; 0x06
    16de:	21 e0       	ldi	r18, 0x01	; 1
    16e0:	89 2b       	or	r24, r25
    16e2:	09 f4       	brne	.+2      	; 0x16e6 <_ZN3rtc11write_blockEhPhj+0x68>
    16e4:	20 e0       	ldi	r18, 0x00	; 0
    16e6:	22 23       	and	r18, r18
    16e8:	31 f7       	brne	.-52     	; 0x16b6 <_ZN3rtc11write_blockEhPhj+0x38>
		spi_master_transmit( *pBuffer++ );
	}

	spi_deselect( );
    16ea:	89 81       	ldd	r24, Y+1	; 0x01
    16ec:	9a 81       	ldd	r25, Y+2	; 0x02
    16ee:	28 df       	rcall	.-432    	; 0x1540 <_ZN3rtc12spi_deselectEv>
}
    16f0:	27 96       	adiw	r28, 0x07	; 7
    16f2:	0f b6       	in	r0, 0x3f	; 63
    16f4:	f8 94       	cli
    16f6:	de bf       	out	0x3e, r29	; 62
    16f8:	0f be       	out	0x3f, r0	; 63
    16fa:	cd bf       	out	0x3d, r28	; 61
    16fc:	df 91       	pop	r29
    16fe:	cf 91       	pop	r28
    1700:	08 95       	ret

00001702 <_ZN3rtc8get_timeEv>:


rtc_time rtc::get_time( ){
    1702:	2f 92       	push	r2
    1704:	3f 92       	push	r3
    1706:	4f 92       	push	r4
    1708:	5f 92       	push	r5
    170a:	6f 92       	push	r6
    170c:	7f 92       	push	r7
    170e:	8f 92       	push	r8
    1710:	9f 92       	push	r9
    1712:	af 92       	push	r10
    1714:	bf 92       	push	r11
    1716:	cf 92       	push	r12
    1718:	df 92       	push	r13
    171a:	ef 92       	push	r14
    171c:	ff 92       	push	r15
    171e:	0f 93       	push	r16
    1720:	1f 93       	push	r17
    1722:	cf 93       	push	r28
    1724:	df 93       	push	r29
    1726:	cd b7       	in	r28, 0x3d	; 61
    1728:	de b7       	in	r29, 0x3e	; 62
    172a:	60 97       	sbiw	r28, 0x10	; 16
    172c:	0f b6       	in	r0, 0x3f	; 63
    172e:	f8 94       	cli
    1730:	de bf       	out	0x3e, r29	; 62
    1732:	0f be       	out	0x3f, r0	; 63
    1734:	cd bf       	out	0x3d, r28	; 61
    1736:	98 8b       	std	Y+16, r25	; 0x10
    1738:	8f 87       	std	Y+15, r24	; 0x0f

	rtc_time rtmToConvert;


	read_block( 0, ( unsigned char * )&rtmToConvert, sizeof( rtc_time ));
    173a:	ae 01       	movw	r20, r28
    173c:	48 5f       	subi	r20, 0xF8	; 248
    173e:	5f 4f       	sbci	r21, 0xFF	; 255
    1740:	8f 85       	ldd	r24, Y+15	; 0x0f
    1742:	98 89       	ldd	r25, Y+16	; 0x10
    1744:	27 e0       	ldi	r18, 0x07	; 7
    1746:	30 e0       	ldi	r19, 0x00	; 0
    1748:	60 e0       	ldi	r22, 0x00	; 0
    174a:	57 df       	rcall	.-338    	; 0x15fa <_ZN3rtc10read_blockEhPhj>

	return rtmToConvert;
    174c:	27 e0       	ldi	r18, 0x07	; 7
    174e:	fe 01       	movw	r30, r28
    1750:	38 96       	adiw	r30, 0x08	; 8
    1752:	ce 01       	movw	r24, r28
    1754:	01 96       	adiw	r24, 0x01	; 1
    1756:	dc 01       	movw	r26, r24
    1758:	01 90       	ld	r0, Z+
    175a:	0d 92       	st	X+, r0
    175c:	2a 95       	dec	r18
    175e:	e1 f7       	brne	.-8      	; 0x1758 <_ZN3rtc8get_timeEv+0x56>
    1760:	60 e0       	ldi	r22, 0x00	; 0
    1762:	69 81       	ldd	r22, Y+1	; 0x01
    1764:	50 e0       	ldi	r21, 0x00	; 0
    1766:	5a 81       	ldd	r21, Y+2	; 0x02
    1768:	40 e0       	ldi	r20, 0x00	; 0
    176a:	4b 81       	ldd	r20, Y+3	; 0x03
    176c:	30 e0       	ldi	r19, 0x00	; 0
    176e:	3c 81       	ldd	r19, Y+4	; 0x04
    1770:	20 e0       	ldi	r18, 0x00	; 0
    1772:	2d 81       	ldd	r18, Y+5	; 0x05
    1774:	90 e0       	ldi	r25, 0x00	; 0
    1776:	9e 81       	ldd	r25, Y+6	; 0x06
    1778:	80 e0       	ldi	r24, 0x00	; 0
    177a:	8f 81       	ldd	r24, Y+7	; 0x07
    177c:	26 2e       	mov	r2, r22
    177e:	35 2e       	mov	r3, r21
    1780:	44 2e       	mov	r4, r20
    1782:	53 2e       	mov	r5, r19
    1784:	62 2e       	mov	r6, r18
    1786:	79 2e       	mov	r7, r25
    1788:	88 2e       	mov	r8, r24
    178a:	a2 2c       	mov	r10, r2
    178c:	b3 2c       	mov	r11, r3
    178e:	c4 2c       	mov	r12, r4
    1790:	d5 2c       	mov	r13, r5
    1792:	e6 2c       	mov	r14, r6
    1794:	f7 2c       	mov	r15, r7
    1796:	08 2d       	mov	r16, r8
    1798:	19 2d       	mov	r17, r9
}
    179a:	2a 2d       	mov	r18, r10
    179c:	3b 2d       	mov	r19, r11
    179e:	4c 2d       	mov	r20, r12
    17a0:	5d 2d       	mov	r21, r13
    17a2:	6e 2d       	mov	r22, r14
    17a4:	7f 2d       	mov	r23, r15
    17a6:	80 2f       	mov	r24, r16
    17a8:	91 2f       	mov	r25, r17
    17aa:	60 96       	adiw	r28, 0x10	; 16
    17ac:	0f b6       	in	r0, 0x3f	; 63
    17ae:	f8 94       	cli
    17b0:	de bf       	out	0x3e, r29	; 62
    17b2:	0f be       	out	0x3f, r0	; 63
    17b4:	cd bf       	out	0x3d, r28	; 61
    17b6:	df 91       	pop	r29
    17b8:	cf 91       	pop	r28
    17ba:	1f 91       	pop	r17
    17bc:	0f 91       	pop	r16
    17be:	ff 90       	pop	r15
    17c0:	ef 90       	pop	r14
    17c2:	df 90       	pop	r13
    17c4:	cf 90       	pop	r12
    17c6:	bf 90       	pop	r11
    17c8:	af 90       	pop	r10
    17ca:	9f 90       	pop	r9
    17cc:	8f 90       	pop	r8
    17ce:	7f 90       	pop	r7
    17d0:	6f 90       	pop	r6
    17d2:	5f 90       	pop	r5
    17d4:	4f 90       	pop	r4
    17d6:	3f 90       	pop	r3
    17d8:	2f 90       	pop	r2
    17da:	08 95       	ret

000017dc <_ZN3rtc8set_timeEP8rtc_time>:


void rtc::set_time( rtc_time* rtmSetTime ){
    17dc:	cf 93       	push	r28
    17de:	df 93       	push	r29
    17e0:	00 d0       	rcall	.+0      	; 0x17e2 <_ZN3rtc8set_timeEP8rtc_time+0x6>
    17e2:	00 d0       	rcall	.+0      	; 0x17e4 <_ZN3rtc8set_timeEP8rtc_time+0x8>
    17e4:	cd b7       	in	r28, 0x3d	; 61
    17e6:	de b7       	in	r29, 0x3e	; 62
    17e8:	9a 83       	std	Y+2, r25	; 0x02
    17ea:	89 83       	std	Y+1, r24	; 0x01
    17ec:	7c 83       	std	Y+4, r23	; 0x04
    17ee:	6b 83       	std	Y+3, r22	; 0x03

	write_block( 0, ( unsigned char * )rtmSetTime, sizeof(rtc_time));
    17f0:	4b 81       	ldd	r20, Y+3	; 0x03
    17f2:	5c 81       	ldd	r21, Y+4	; 0x04
    17f4:	89 81       	ldd	r24, Y+1	; 0x01
    17f6:	9a 81       	ldd	r25, Y+2	; 0x02
    17f8:	27 e0       	ldi	r18, 0x07	; 7
    17fa:	30 e0       	ldi	r19, 0x00	; 0
    17fc:	60 e0       	ldi	r22, 0x00	; 0
    17fe:	3f df       	rcall	.-386    	; 0x167e <_ZN3rtc11write_blockEhPhj>
}
    1800:	0f 90       	pop	r0
    1802:	0f 90       	pop	r0
    1804:	0f 90       	pop	r0
    1806:	0f 90       	pop	r0
    1808:	df 91       	pop	r29
    180a:	cf 91       	pop	r28
    180c:	08 95       	ret

0000180e <_ZN3rtc11rtm_to_charE8rtc_timePhj>:


void rtc::rtm_to_char( rtc_time rtmToConvert, unsigned char* uchToReturn, unsigned int valCharLen ){
    180e:	cf 92       	push	r12
    1810:	df 92       	push	r13
    1812:	ef 92       	push	r14
    1814:	ff 92       	push	r15
    1816:	0f 93       	push	r16
    1818:	1f 93       	push	r17
    181a:	cf 93       	push	r28
    181c:	df 93       	push	r29
    181e:	cd b7       	in	r28, 0x3d	; 61
    1820:	de b7       	in	r29, 0x3e	; 62
    1822:	6c 97       	sbiw	r28, 0x1c	; 28
    1824:	0f b6       	in	r0, 0x3f	; 63
    1826:	f8 94       	cli
    1828:	de bf       	out	0x3e, r29	; 62
    182a:	0f be       	out	0x3f, r0	; 63
    182c:	cd bf       	out	0x3d, r28	; 61
    182e:	99 8b       	std	Y+17, r25	; 0x11
    1830:	88 8b       	std	Y+16, r24	; 0x10
    1832:	0a 8b       	std	Y+18, r16	; 0x12
    1834:	1b 8b       	std	Y+19, r17	; 0x13
    1836:	2c 8b       	std	Y+20, r18	; 0x14
    1838:	3d 8b       	std	Y+21, r19	; 0x15
    183a:	4e 8b       	std	Y+22, r20	; 0x16
    183c:	5f 8b       	std	Y+23, r21	; 0x17
    183e:	68 8f       	std	Y+24, r22	; 0x18
    1840:	fa 8e       	std	Y+26, r15	; 0x1a
    1842:	e9 8e       	std	Y+25, r14	; 0x19
    1844:	dc 8e       	std	Y+28, r13	; 0x1c
    1846:	cb 8e       	std	Y+27, r12	; 0x1b
	uchTimeOut[valTextOffset + 6] = valSecs >> 8;
	uchTimeOut[valTextOffset + 7] = valSecs & 0x00FF;
	
	memcpy( uchToReturn, uchTimeOut, valCharLen );

}
    1848:	0d b7       	in	r16, 0x3d	; 61
    184a:	1e b7       	in	r17, 0x3e	; 62
    184c:	8d b7       	in	r24, 0x3d	; 61
    184e:	9e b7       	in	r25, 0x3e	; 62
    1850:	7c 01       	movw	r14, r24
}


void rtc::rtm_to_char( rtc_time rtmToConvert, unsigned char* uchToReturn, unsigned int valCharLen ){
	
	unsigned char uchTimeOut[ valCharLen ];
    1852:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1854:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1856:	01 97       	sbiw	r24, 0x01	; 1
    1858:	9c 83       	std	Y+4, r25	; 0x04
    185a:	8b 83       	std	Y+3, r24	; 0x03
    185c:	01 96       	adiw	r24, 0x01	; 1
    185e:	2d b7       	in	r18, 0x3d	; 61
    1860:	3e b7       	in	r19, 0x3e	; 62
    1862:	28 1b       	sub	r18, r24
    1864:	39 0b       	sbc	r19, r25
    1866:	0f b6       	in	r0, 0x3f	; 63
    1868:	f8 94       	cli
    186a:	3e bf       	out	0x3e, r19	; 62
    186c:	0f be       	out	0x3f, r0	; 63
    186e:	2d bf       	out	0x3d, r18	; 61
    1870:	8d b7       	in	r24, 0x3d	; 61
    1872:	9e b7       	in	r25, 0x3e	; 62
    1874:	01 96       	adiw	r24, 0x01	; 1
    1876:	9e 83       	std	Y+6, r25	; 0x06
    1878:	8d 83       	std	Y+5, r24	; 0x05
	uint8_t valTimeLength = 8;
    187a:	88 e0       	ldi	r24, 0x08	; 8
    187c:	8f 83       	std	Y+7, r24	; 0x07
	unsigned int valTextOffset = ( valCharLen - valTimeLength ) / 2;
    187e:	8f 81       	ldd	r24, Y+7	; 0x07
    1880:	88 2f       	mov	r24, r24
    1882:	90 e0       	ldi	r25, 0x00	; 0
    1884:	2b 8d       	ldd	r18, Y+27	; 0x1b
    1886:	3c 8d       	ldd	r19, Y+28	; 0x1c
    1888:	a9 01       	movw	r20, r18
    188a:	48 1b       	sub	r20, r24
    188c:	59 0b       	sbc	r21, r25
    188e:	ca 01       	movw	r24, r20
    1890:	96 95       	lsr	r25
    1892:	87 95       	ror	r24
    1894:	99 87       	std	Y+9, r25	; 0x09
    1896:	88 87       	std	Y+8, r24	; 0x08
	uint16_t valSecs = 0x2020;
    1898:	80 e2       	ldi	r24, 0x20	; 32
    189a:	90 e2       	ldi	r25, 0x20	; 32
    189c:	9b 87       	std	Y+11, r25	; 0x0b
    189e:	8a 87       	std	Y+10, r24	; 0x0a
	uint16_t valMins = 0x20;
    18a0:	80 e2       	ldi	r24, 0x20	; 32
    18a2:	90 e0       	ldi	r25, 0x00	; 0
    18a4:	9d 87       	std	Y+13, r25	; 0x0d
    18a6:	8c 87       	std	Y+12, r24	; 0x0c
	uint16_t valHours = 0x20;
    18a8:	80 e2       	ldi	r24, 0x20	; 32
    18aa:	90 e0       	ldi	r25, 0x00	; 0
    18ac:	9f 87       	std	Y+15, r25	; 0x0f
    18ae:	8e 87       	std	Y+14, r24	; 0x0e
	
	
	for(unsigned int valN = 0; valN < valCharLen; valN++ ){
    18b0:	1a 82       	std	Y+2, r1	; 0x02
    18b2:	19 82       	std	Y+1, r1	; 0x01
    18b4:	0e c0       	rjmp	.+28     	; 0x18d2 <_ZN3rtc11rtm_to_charE8rtc_timePhj+0xc4>
		uchTimeOut[valN] = ' ';
    18b6:	2d 81       	ldd	r18, Y+5	; 0x05
    18b8:	3e 81       	ldd	r19, Y+6	; 0x06
    18ba:	89 81       	ldd	r24, Y+1	; 0x01
    18bc:	9a 81       	ldd	r25, Y+2	; 0x02
    18be:	82 0f       	add	r24, r18
    18c0:	93 1f       	adc	r25, r19
    18c2:	20 e2       	ldi	r18, 0x20	; 32
    18c4:	fc 01       	movw	r30, r24
    18c6:	20 83       	st	Z, r18
	uint16_t valSecs = 0x2020;
	uint16_t valMins = 0x20;
	uint16_t valHours = 0x20;
	
	
	for(unsigned int valN = 0; valN < valCharLen; valN++ ){
    18c8:	89 81       	ldd	r24, Y+1	; 0x01
    18ca:	9a 81       	ldd	r25, Y+2	; 0x02
    18cc:	01 96       	adiw	r24, 0x01	; 1
    18ce:	9a 83       	std	Y+2, r25	; 0x02
    18d0:	89 83       	std	Y+1, r24	; 0x01
    18d2:	29 81       	ldd	r18, Y+1	; 0x01
    18d4:	3a 81       	ldd	r19, Y+2	; 0x02
    18d6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    18d8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    18da:	28 17       	cp	r18, r24
    18dc:	39 07       	cpc	r19, r25
    18de:	58 f3       	brcs	.-42     	; 0x18b6 <_ZN3rtc11rtm_to_charE8rtc_timePhj+0xa8>
		uchTimeOut[valN] = ' ';
	}

	valSecs &= 0x0000;
    18e0:	1b 86       	std	Y+11, r1	; 0x0b
    18e2:	1a 86       	std	Y+10, r1	; 0x0a
	valSecs |= (( rtmToConvert.ucSeconds & 0xF0 ) + 0x0300 ) << 4;
    18e4:	8a 89       	ldd	r24, Y+18	; 0x12
    18e6:	88 2f       	mov	r24, r24
    18e8:	90 e0       	ldi	r25, 0x00	; 0
    18ea:	80 7f       	andi	r24, 0xF0	; 240
    18ec:	99 27       	eor	r25, r25
    18ee:	9d 5f       	subi	r25, 0xFD	; 253
    18f0:	82 95       	swap	r24
    18f2:	92 95       	swap	r25
    18f4:	90 7f       	andi	r25, 0xF0	; 240
    18f6:	98 27       	eor	r25, r24
    18f8:	80 7f       	andi	r24, 0xF0	; 240
    18fa:	98 27       	eor	r25, r24
    18fc:	9c 01       	movw	r18, r24
    18fe:	8a 85       	ldd	r24, Y+10	; 0x0a
    1900:	9b 85       	ldd	r25, Y+11	; 0x0b
    1902:	82 2b       	or	r24, r18
    1904:	93 2b       	or	r25, r19
    1906:	9b 87       	std	Y+11, r25	; 0x0b
    1908:	8a 87       	std	Y+10, r24	; 0x0a
	valSecs |= ( rtmToConvert.ucSeconds & 0x0F) + 0x0030;
    190a:	8a 89       	ldd	r24, Y+18	; 0x12
    190c:	88 2f       	mov	r24, r24
    190e:	90 e0       	ldi	r25, 0x00	; 0
    1910:	8f 70       	andi	r24, 0x0F	; 15
    1912:	99 27       	eor	r25, r25
    1914:	c0 96       	adiw	r24, 0x30	; 48
    1916:	9c 01       	movw	r18, r24
    1918:	8a 85       	ldd	r24, Y+10	; 0x0a
    191a:	9b 85       	ldd	r25, Y+11	; 0x0b
    191c:	82 2b       	or	r24, r18
    191e:	93 2b       	or	r25, r19
    1920:	9b 87       	std	Y+11, r25	; 0x0b
    1922:	8a 87       	std	Y+10, r24	; 0x0a
	valMins &= 0x0000;
    1924:	1d 86       	std	Y+13, r1	; 0x0d
    1926:	1c 86       	std	Y+12, r1	; 0x0c
	valMins |= (( rtmToConvert.ucMinutes & 0xF0 ) + 0x0300 ) << 4;
    1928:	8b 89       	ldd	r24, Y+19	; 0x13
    192a:	88 2f       	mov	r24, r24
    192c:	90 e0       	ldi	r25, 0x00	; 0
    192e:	80 7f       	andi	r24, 0xF0	; 240
    1930:	99 27       	eor	r25, r25
    1932:	9d 5f       	subi	r25, 0xFD	; 253
    1934:	82 95       	swap	r24
    1936:	92 95       	swap	r25
    1938:	90 7f       	andi	r25, 0xF0	; 240
    193a:	98 27       	eor	r25, r24
    193c:	80 7f       	andi	r24, 0xF0	; 240
    193e:	98 27       	eor	r25, r24
    1940:	9c 01       	movw	r18, r24
    1942:	8c 85       	ldd	r24, Y+12	; 0x0c
    1944:	9d 85       	ldd	r25, Y+13	; 0x0d
    1946:	82 2b       	or	r24, r18
    1948:	93 2b       	or	r25, r19
    194a:	9d 87       	std	Y+13, r25	; 0x0d
    194c:	8c 87       	std	Y+12, r24	; 0x0c
	valMins |= ( rtmToConvert.ucMinutes & 0x0F) + 0x0030;
    194e:	8b 89       	ldd	r24, Y+19	; 0x13
    1950:	88 2f       	mov	r24, r24
    1952:	90 e0       	ldi	r25, 0x00	; 0
    1954:	8f 70       	andi	r24, 0x0F	; 15
    1956:	99 27       	eor	r25, r25
    1958:	c0 96       	adiw	r24, 0x30	; 48
    195a:	9c 01       	movw	r18, r24
    195c:	8c 85       	ldd	r24, Y+12	; 0x0c
    195e:	9d 85       	ldd	r25, Y+13	; 0x0d
    1960:	82 2b       	or	r24, r18
    1962:	93 2b       	or	r25, r19
    1964:	9d 87       	std	Y+13, r25	; 0x0d
    1966:	8c 87       	std	Y+12, r24	; 0x0c
	valHours &= 0x0000;
    1968:	1f 86       	std	Y+15, r1	; 0x0f
    196a:	1e 86       	std	Y+14, r1	; 0x0e
	valHours |= (( rtmToConvert.ucHours & 0x10 ) + 0x0300 ) << 4;
    196c:	8c 89       	ldd	r24, Y+20	; 0x14
    196e:	88 2f       	mov	r24, r24
    1970:	90 e0       	ldi	r25, 0x00	; 0
    1972:	80 71       	andi	r24, 0x10	; 16
    1974:	99 27       	eor	r25, r25
    1976:	9d 5f       	subi	r25, 0xFD	; 253
    1978:	82 95       	swap	r24
    197a:	92 95       	swap	r25
    197c:	90 7f       	andi	r25, 0xF0	; 240
    197e:	98 27       	eor	r25, r24
    1980:	80 7f       	andi	r24, 0xF0	; 240
    1982:	98 27       	eor	r25, r24
    1984:	9c 01       	movw	r18, r24
    1986:	8e 85       	ldd	r24, Y+14	; 0x0e
    1988:	9f 85       	ldd	r25, Y+15	; 0x0f
    198a:	82 2b       	or	r24, r18
    198c:	93 2b       	or	r25, r19
    198e:	9f 87       	std	Y+15, r25	; 0x0f
    1990:	8e 87       	std	Y+14, r24	; 0x0e
	valHours |= ( rtmToConvert.ucHours & 0x0F) + 0x0030;
    1992:	8c 89       	ldd	r24, Y+20	; 0x14
    1994:	88 2f       	mov	r24, r24
    1996:	90 e0       	ldi	r25, 0x00	; 0
    1998:	8f 70       	andi	r24, 0x0F	; 15
    199a:	99 27       	eor	r25, r25
    199c:	c0 96       	adiw	r24, 0x30	; 48
    199e:	9c 01       	movw	r18, r24
    19a0:	8e 85       	ldd	r24, Y+14	; 0x0e
    19a2:	9f 85       	ldd	r25, Y+15	; 0x0f
    19a4:	82 2b       	or	r24, r18
    19a6:	93 2b       	or	r25, r19
    19a8:	9f 87       	std	Y+15, r25	; 0x0f
    19aa:	8e 87       	std	Y+14, r24	; 0x0e
	uchTimeOut[valTextOffset] = valHours >> 8;
    19ac:	8e 85       	ldd	r24, Y+14	; 0x0e
    19ae:	9f 85       	ldd	r25, Y+15	; 0x0f
    19b0:	89 2f       	mov	r24, r25
    19b2:	99 27       	eor	r25, r25
    19b4:	48 2f       	mov	r20, r24
    19b6:	2d 81       	ldd	r18, Y+5	; 0x05
    19b8:	3e 81       	ldd	r19, Y+6	; 0x06
    19ba:	88 85       	ldd	r24, Y+8	; 0x08
    19bc:	99 85       	ldd	r25, Y+9	; 0x09
    19be:	82 0f       	add	r24, r18
    19c0:	93 1f       	adc	r25, r19
    19c2:	fc 01       	movw	r30, r24
    19c4:	40 83       	st	Z, r20
	uchTimeOut[valTextOffset + 1] = valHours & 0x00FF;
    19c6:	88 85       	ldd	r24, Y+8	; 0x08
    19c8:	99 85       	ldd	r25, Y+9	; 0x09
    19ca:	01 96       	adiw	r24, 0x01	; 1
    19cc:	4e 85       	ldd	r20, Y+14	; 0x0e
    19ce:	2d 81       	ldd	r18, Y+5	; 0x05
    19d0:	3e 81       	ldd	r19, Y+6	; 0x06
    19d2:	82 0f       	add	r24, r18
    19d4:	93 1f       	adc	r25, r19
    19d6:	fc 01       	movw	r30, r24
    19d8:	40 83       	st	Z, r20
	uchTimeOut[valTextOffset + 2] = ':';
    19da:	88 85       	ldd	r24, Y+8	; 0x08
    19dc:	99 85       	ldd	r25, Y+9	; 0x09
    19de:	02 96       	adiw	r24, 0x02	; 2
    19e0:	2d 81       	ldd	r18, Y+5	; 0x05
    19e2:	3e 81       	ldd	r19, Y+6	; 0x06
    19e4:	82 0f       	add	r24, r18
    19e6:	93 1f       	adc	r25, r19
    19e8:	2a e3       	ldi	r18, 0x3A	; 58
    19ea:	fc 01       	movw	r30, r24
    19ec:	20 83       	st	Z, r18
	uchTimeOut[valTextOffset + 3] = valMins >> 8;
    19ee:	88 85       	ldd	r24, Y+8	; 0x08
    19f0:	99 85       	ldd	r25, Y+9	; 0x09
    19f2:	03 96       	adiw	r24, 0x03	; 3
    19f4:	2c 85       	ldd	r18, Y+12	; 0x0c
    19f6:	3d 85       	ldd	r19, Y+13	; 0x0d
    19f8:	23 2f       	mov	r18, r19
    19fa:	33 27       	eor	r19, r19
    19fc:	42 2f       	mov	r20, r18
    19fe:	2d 81       	ldd	r18, Y+5	; 0x05
    1a00:	3e 81       	ldd	r19, Y+6	; 0x06
    1a02:	82 0f       	add	r24, r18
    1a04:	93 1f       	adc	r25, r19
    1a06:	fc 01       	movw	r30, r24
    1a08:	40 83       	st	Z, r20
	uchTimeOut[valTextOffset + 4] = valMins & 0x00FF;
    1a0a:	88 85       	ldd	r24, Y+8	; 0x08
    1a0c:	99 85       	ldd	r25, Y+9	; 0x09
    1a0e:	04 96       	adiw	r24, 0x04	; 4
    1a10:	4c 85       	ldd	r20, Y+12	; 0x0c
    1a12:	2d 81       	ldd	r18, Y+5	; 0x05
    1a14:	3e 81       	ldd	r19, Y+6	; 0x06
    1a16:	82 0f       	add	r24, r18
    1a18:	93 1f       	adc	r25, r19
    1a1a:	fc 01       	movw	r30, r24
    1a1c:	40 83       	st	Z, r20
	uchTimeOut[valTextOffset + 5] = ':';
    1a1e:	88 85       	ldd	r24, Y+8	; 0x08
    1a20:	99 85       	ldd	r25, Y+9	; 0x09
    1a22:	05 96       	adiw	r24, 0x05	; 5
    1a24:	2d 81       	ldd	r18, Y+5	; 0x05
    1a26:	3e 81       	ldd	r19, Y+6	; 0x06
    1a28:	82 0f       	add	r24, r18
    1a2a:	93 1f       	adc	r25, r19
    1a2c:	2a e3       	ldi	r18, 0x3A	; 58
    1a2e:	fc 01       	movw	r30, r24
    1a30:	20 83       	st	Z, r18
	uchTimeOut[valTextOffset + 6] = valSecs >> 8;
    1a32:	88 85       	ldd	r24, Y+8	; 0x08
    1a34:	99 85       	ldd	r25, Y+9	; 0x09
    1a36:	06 96       	adiw	r24, 0x06	; 6
    1a38:	2a 85       	ldd	r18, Y+10	; 0x0a
    1a3a:	3b 85       	ldd	r19, Y+11	; 0x0b
    1a3c:	23 2f       	mov	r18, r19
    1a3e:	33 27       	eor	r19, r19
    1a40:	42 2f       	mov	r20, r18
    1a42:	2d 81       	ldd	r18, Y+5	; 0x05
    1a44:	3e 81       	ldd	r19, Y+6	; 0x06
    1a46:	82 0f       	add	r24, r18
    1a48:	93 1f       	adc	r25, r19
    1a4a:	fc 01       	movw	r30, r24
    1a4c:	40 83       	st	Z, r20
	uchTimeOut[valTextOffset + 7] = valSecs & 0x00FF;
    1a4e:	88 85       	ldd	r24, Y+8	; 0x08
    1a50:	99 85       	ldd	r25, Y+9	; 0x09
    1a52:	07 96       	adiw	r24, 0x07	; 7
    1a54:	4a 85       	ldd	r20, Y+10	; 0x0a
    1a56:	2d 81       	ldd	r18, Y+5	; 0x05
    1a58:	3e 81       	ldd	r19, Y+6	; 0x06
    1a5a:	82 0f       	add	r24, r18
    1a5c:	93 1f       	adc	r25, r19
    1a5e:	fc 01       	movw	r30, r24
    1a60:	40 83       	st	Z, r20
	
	memcpy( uchToReturn, uchTimeOut, valCharLen );
    1a62:	2d 81       	ldd	r18, Y+5	; 0x05
    1a64:	3e 81       	ldd	r19, Y+6	; 0x06
    1a66:	4b 8d       	ldd	r20, Y+27	; 0x1b
    1a68:	5c 8d       	ldd	r21, Y+28	; 0x1c
    1a6a:	89 8d       	ldd	r24, Y+25	; 0x19
    1a6c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1a6e:	b9 01       	movw	r22, r18
    1a70:	90 d5       	rcall	.+2848   	; 0x2592 <memcpy>
    1a72:	0f b6       	in	r0, 0x3f	; 63
    1a74:	f8 94       	cli
    1a76:	fe be       	out	0x3e, r15	; 62
    1a78:	0f be       	out	0x3f, r0	; 63
    1a7a:	ed be       	out	0x3d, r14	; 61

}
    1a7c:	0f b6       	in	r0, 0x3f	; 63
    1a7e:	f8 94       	cli
    1a80:	1e bf       	out	0x3e, r17	; 62
    1a82:	0f be       	out	0x3f, r0	; 63
    1a84:	0d bf       	out	0x3d, r16	; 61
    1a86:	6c 96       	adiw	r28, 0x1c	; 28
    1a88:	0f b6       	in	r0, 0x3f	; 63
    1a8a:	f8 94       	cli
    1a8c:	de bf       	out	0x3e, r29	; 62
    1a8e:	0f be       	out	0x3f, r0	; 63
    1a90:	cd bf       	out	0x3d, r28	; 61
    1a92:	df 91       	pop	r29
    1a94:	cf 91       	pop	r28
    1a96:	1f 91       	pop	r17
    1a98:	0f 91       	pop	r16
    1a9a:	ff 90       	pop	r15
    1a9c:	ef 90       	pop	r14
    1a9e:	df 90       	pop	r13
    1aa0:	cf 90       	pop	r12
    1aa2:	08 95       	ret

00001aa4 <__cmpsf2>:
    1aa4:	2f d0       	rcall	.+94     	; 0x1b04 <__fp_cmp>
    1aa6:	08 f4       	brcc	.+2      	; 0x1aaa <__cmpsf2+0x6>
    1aa8:	81 e0       	ldi	r24, 0x01	; 1
    1aaa:	08 95       	ret

00001aac <__fixunssfsi>:
    1aac:	57 d0       	rcall	.+174    	; 0x1b5c <__fp_splitA>
    1aae:	88 f0       	brcs	.+34     	; 0x1ad2 <__fixunssfsi+0x26>
    1ab0:	9f 57       	subi	r25, 0x7F	; 127
    1ab2:	90 f0       	brcs	.+36     	; 0x1ad8 <__fixunssfsi+0x2c>
    1ab4:	b9 2f       	mov	r27, r25
    1ab6:	99 27       	eor	r25, r25
    1ab8:	b7 51       	subi	r27, 0x17	; 23
    1aba:	a0 f0       	brcs	.+40     	; 0x1ae4 <__fixunssfsi+0x38>
    1abc:	d1 f0       	breq	.+52     	; 0x1af2 <__fixunssfsi+0x46>
    1abe:	66 0f       	add	r22, r22
    1ac0:	77 1f       	adc	r23, r23
    1ac2:	88 1f       	adc	r24, r24
    1ac4:	99 1f       	adc	r25, r25
    1ac6:	1a f0       	brmi	.+6      	; 0x1ace <__fixunssfsi+0x22>
    1ac8:	ba 95       	dec	r27
    1aca:	c9 f7       	brne	.-14     	; 0x1abe <__fixunssfsi+0x12>
    1acc:	12 c0       	rjmp	.+36     	; 0x1af2 <__fixunssfsi+0x46>
    1ace:	b1 30       	cpi	r27, 0x01	; 1
    1ad0:	81 f0       	breq	.+32     	; 0x1af2 <__fixunssfsi+0x46>
    1ad2:	5e d0       	rcall	.+188    	; 0x1b90 <__fp_zero>
    1ad4:	b1 e0       	ldi	r27, 0x01	; 1
    1ad6:	08 95       	ret
    1ad8:	5b c0       	rjmp	.+182    	; 0x1b90 <__fp_zero>
    1ada:	67 2f       	mov	r22, r23
    1adc:	78 2f       	mov	r23, r24
    1ade:	88 27       	eor	r24, r24
    1ae0:	b8 5f       	subi	r27, 0xF8	; 248
    1ae2:	39 f0       	breq	.+14     	; 0x1af2 <__fixunssfsi+0x46>
    1ae4:	b9 3f       	cpi	r27, 0xF9	; 249
    1ae6:	cc f3       	brlt	.-14     	; 0x1ada <__fixunssfsi+0x2e>
    1ae8:	86 95       	lsr	r24
    1aea:	77 95       	ror	r23
    1aec:	67 95       	ror	r22
    1aee:	b3 95       	inc	r27
    1af0:	d9 f7       	brne	.-10     	; 0x1ae8 <__fixunssfsi+0x3c>
    1af2:	3e f4       	brtc	.+14     	; 0x1b02 <__fixunssfsi+0x56>
    1af4:	90 95       	com	r25
    1af6:	80 95       	com	r24
    1af8:	70 95       	com	r23
    1afa:	61 95       	neg	r22
    1afc:	7f 4f       	sbci	r23, 0xFF	; 255
    1afe:	8f 4f       	sbci	r24, 0xFF	; 255
    1b00:	9f 4f       	sbci	r25, 0xFF	; 255
    1b02:	08 95       	ret

00001b04 <__fp_cmp>:
    1b04:	99 0f       	add	r25, r25
    1b06:	00 08       	sbc	r0, r0
    1b08:	55 0f       	add	r21, r21
    1b0a:	aa 0b       	sbc	r26, r26
    1b0c:	e0 e8       	ldi	r30, 0x80	; 128
    1b0e:	fe ef       	ldi	r31, 0xFE	; 254
    1b10:	16 16       	cp	r1, r22
    1b12:	17 06       	cpc	r1, r23
    1b14:	e8 07       	cpc	r30, r24
    1b16:	f9 07       	cpc	r31, r25
    1b18:	c0 f0       	brcs	.+48     	; 0x1b4a <__fp_cmp+0x46>
    1b1a:	12 16       	cp	r1, r18
    1b1c:	13 06       	cpc	r1, r19
    1b1e:	e4 07       	cpc	r30, r20
    1b20:	f5 07       	cpc	r31, r21
    1b22:	98 f0       	brcs	.+38     	; 0x1b4a <__fp_cmp+0x46>
    1b24:	62 1b       	sub	r22, r18
    1b26:	73 0b       	sbc	r23, r19
    1b28:	84 0b       	sbc	r24, r20
    1b2a:	95 0b       	sbc	r25, r21
    1b2c:	39 f4       	brne	.+14     	; 0x1b3c <__fp_cmp+0x38>
    1b2e:	0a 26       	eor	r0, r26
    1b30:	61 f0       	breq	.+24     	; 0x1b4a <__fp_cmp+0x46>
    1b32:	23 2b       	or	r18, r19
    1b34:	24 2b       	or	r18, r20
    1b36:	25 2b       	or	r18, r21
    1b38:	21 f4       	brne	.+8      	; 0x1b42 <__fp_cmp+0x3e>
    1b3a:	08 95       	ret
    1b3c:	0a 26       	eor	r0, r26
    1b3e:	09 f4       	brne	.+2      	; 0x1b42 <__fp_cmp+0x3e>
    1b40:	a1 40       	sbci	r26, 0x01	; 1
    1b42:	a6 95       	lsr	r26
    1b44:	8f ef       	ldi	r24, 0xFF	; 255
    1b46:	81 1d       	adc	r24, r1
    1b48:	81 1d       	adc	r24, r1
    1b4a:	08 95       	ret

00001b4c <__fp_split3>:
    1b4c:	57 fd       	sbrc	r21, 7
    1b4e:	90 58       	subi	r25, 0x80	; 128
    1b50:	44 0f       	add	r20, r20
    1b52:	55 1f       	adc	r21, r21
    1b54:	59 f0       	breq	.+22     	; 0x1b6c <__fp_splitA+0x10>
    1b56:	5f 3f       	cpi	r21, 0xFF	; 255
    1b58:	71 f0       	breq	.+28     	; 0x1b76 <__fp_splitA+0x1a>
    1b5a:	47 95       	ror	r20

00001b5c <__fp_splitA>:
    1b5c:	88 0f       	add	r24, r24
    1b5e:	97 fb       	bst	r25, 7
    1b60:	99 1f       	adc	r25, r25
    1b62:	61 f0       	breq	.+24     	; 0x1b7c <__fp_splitA+0x20>
    1b64:	9f 3f       	cpi	r25, 0xFF	; 255
    1b66:	79 f0       	breq	.+30     	; 0x1b86 <__fp_splitA+0x2a>
    1b68:	87 95       	ror	r24
    1b6a:	08 95       	ret
    1b6c:	12 16       	cp	r1, r18
    1b6e:	13 06       	cpc	r1, r19
    1b70:	14 06       	cpc	r1, r20
    1b72:	55 1f       	adc	r21, r21
    1b74:	f2 cf       	rjmp	.-28     	; 0x1b5a <__fp_split3+0xe>
    1b76:	46 95       	lsr	r20
    1b78:	f1 df       	rcall	.-30     	; 0x1b5c <__fp_splitA>
    1b7a:	08 c0       	rjmp	.+16     	; 0x1b8c <__fp_splitA+0x30>
    1b7c:	16 16       	cp	r1, r22
    1b7e:	17 06       	cpc	r1, r23
    1b80:	18 06       	cpc	r1, r24
    1b82:	99 1f       	adc	r25, r25
    1b84:	f1 cf       	rjmp	.-30     	; 0x1b68 <__fp_splitA+0xc>
    1b86:	86 95       	lsr	r24
    1b88:	71 05       	cpc	r23, r1
    1b8a:	61 05       	cpc	r22, r1
    1b8c:	08 94       	sec
    1b8e:	08 95       	ret

00001b90 <__fp_zero>:
    1b90:	e8 94       	clt

00001b92 <__fp_szero>:
    1b92:	bb 27       	eor	r27, r27
    1b94:	66 27       	eor	r22, r22
    1b96:	77 27       	eor	r23, r23
    1b98:	cb 01       	movw	r24, r22
    1b9a:	97 f9       	bld	r25, 7
    1b9c:	08 95       	ret

00001b9e <__gesf2>:
    1b9e:	b2 df       	rcall	.-156    	; 0x1b04 <__fp_cmp>
    1ba0:	08 f4       	brcc	.+2      	; 0x1ba4 <__gesf2+0x6>
    1ba2:	8f ef       	ldi	r24, 0xFF	; 255
    1ba4:	08 95       	ret

00001ba6 <__mulsf3>:
    1ba6:	0b d0       	rcall	.+22     	; 0x1bbe <__mulsf3x>
    1ba8:	78 c0       	rjmp	.+240    	; 0x1c9a <__fp_round>
    1baa:	69 d0       	rcall	.+210    	; 0x1c7e <__fp_pscA>
    1bac:	28 f0       	brcs	.+10     	; 0x1bb8 <__mulsf3+0x12>
    1bae:	6e d0       	rcall	.+220    	; 0x1c8c <__fp_pscB>
    1bb0:	18 f0       	brcs	.+6      	; 0x1bb8 <__mulsf3+0x12>
    1bb2:	95 23       	and	r25, r21
    1bb4:	09 f0       	breq	.+2      	; 0x1bb8 <__mulsf3+0x12>
    1bb6:	5a c0       	rjmp	.+180    	; 0x1c6c <__fp_inf>
    1bb8:	5f c0       	rjmp	.+190    	; 0x1c78 <__fp_nan>
    1bba:	11 24       	eor	r1, r1
    1bbc:	ea cf       	rjmp	.-44     	; 0x1b92 <__fp_szero>

00001bbe <__mulsf3x>:
    1bbe:	c6 df       	rcall	.-116    	; 0x1b4c <__fp_split3>
    1bc0:	a0 f3       	brcs	.-24     	; 0x1baa <__mulsf3+0x4>

00001bc2 <__mulsf3_pse>:
    1bc2:	95 9f       	mul	r25, r21
    1bc4:	d1 f3       	breq	.-12     	; 0x1bba <__mulsf3+0x14>
    1bc6:	95 0f       	add	r25, r21
    1bc8:	50 e0       	ldi	r21, 0x00	; 0
    1bca:	55 1f       	adc	r21, r21
    1bcc:	62 9f       	mul	r22, r18
    1bce:	f0 01       	movw	r30, r0
    1bd0:	72 9f       	mul	r23, r18
    1bd2:	bb 27       	eor	r27, r27
    1bd4:	f0 0d       	add	r31, r0
    1bd6:	b1 1d       	adc	r27, r1
    1bd8:	63 9f       	mul	r22, r19
    1bda:	aa 27       	eor	r26, r26
    1bdc:	f0 0d       	add	r31, r0
    1bde:	b1 1d       	adc	r27, r1
    1be0:	aa 1f       	adc	r26, r26
    1be2:	64 9f       	mul	r22, r20
    1be4:	66 27       	eor	r22, r22
    1be6:	b0 0d       	add	r27, r0
    1be8:	a1 1d       	adc	r26, r1
    1bea:	66 1f       	adc	r22, r22
    1bec:	82 9f       	mul	r24, r18
    1bee:	22 27       	eor	r18, r18
    1bf0:	b0 0d       	add	r27, r0
    1bf2:	a1 1d       	adc	r26, r1
    1bf4:	62 1f       	adc	r22, r18
    1bf6:	73 9f       	mul	r23, r19
    1bf8:	b0 0d       	add	r27, r0
    1bfa:	a1 1d       	adc	r26, r1
    1bfc:	62 1f       	adc	r22, r18
    1bfe:	83 9f       	mul	r24, r19
    1c00:	a0 0d       	add	r26, r0
    1c02:	61 1d       	adc	r22, r1
    1c04:	22 1f       	adc	r18, r18
    1c06:	74 9f       	mul	r23, r20
    1c08:	33 27       	eor	r19, r19
    1c0a:	a0 0d       	add	r26, r0
    1c0c:	61 1d       	adc	r22, r1
    1c0e:	23 1f       	adc	r18, r19
    1c10:	84 9f       	mul	r24, r20
    1c12:	60 0d       	add	r22, r0
    1c14:	21 1d       	adc	r18, r1
    1c16:	82 2f       	mov	r24, r18
    1c18:	76 2f       	mov	r23, r22
    1c1a:	6a 2f       	mov	r22, r26
    1c1c:	11 24       	eor	r1, r1
    1c1e:	9f 57       	subi	r25, 0x7F	; 127
    1c20:	50 40       	sbci	r21, 0x00	; 0
    1c22:	8a f0       	brmi	.+34     	; 0x1c46 <__mulsf3_pse+0x84>
    1c24:	e1 f0       	breq	.+56     	; 0x1c5e <__mulsf3_pse+0x9c>
    1c26:	88 23       	and	r24, r24
    1c28:	4a f0       	brmi	.+18     	; 0x1c3c <__mulsf3_pse+0x7a>
    1c2a:	ee 0f       	add	r30, r30
    1c2c:	ff 1f       	adc	r31, r31
    1c2e:	bb 1f       	adc	r27, r27
    1c30:	66 1f       	adc	r22, r22
    1c32:	77 1f       	adc	r23, r23
    1c34:	88 1f       	adc	r24, r24
    1c36:	91 50       	subi	r25, 0x01	; 1
    1c38:	50 40       	sbci	r21, 0x00	; 0
    1c3a:	a9 f7       	brne	.-22     	; 0x1c26 <__mulsf3_pse+0x64>
    1c3c:	9e 3f       	cpi	r25, 0xFE	; 254
    1c3e:	51 05       	cpc	r21, r1
    1c40:	70 f0       	brcs	.+28     	; 0x1c5e <__mulsf3_pse+0x9c>
    1c42:	14 c0       	rjmp	.+40     	; 0x1c6c <__fp_inf>
    1c44:	a6 cf       	rjmp	.-180    	; 0x1b92 <__fp_szero>
    1c46:	5f 3f       	cpi	r21, 0xFF	; 255
    1c48:	ec f3       	brlt	.-6      	; 0x1c44 <__mulsf3_pse+0x82>
    1c4a:	98 3e       	cpi	r25, 0xE8	; 232
    1c4c:	dc f3       	brlt	.-10     	; 0x1c44 <__mulsf3_pse+0x82>
    1c4e:	86 95       	lsr	r24
    1c50:	77 95       	ror	r23
    1c52:	67 95       	ror	r22
    1c54:	b7 95       	ror	r27
    1c56:	f7 95       	ror	r31
    1c58:	e7 95       	ror	r30
    1c5a:	9f 5f       	subi	r25, 0xFF	; 255
    1c5c:	c1 f7       	brne	.-16     	; 0x1c4e <__mulsf3_pse+0x8c>
    1c5e:	fe 2b       	or	r31, r30
    1c60:	88 0f       	add	r24, r24
    1c62:	91 1d       	adc	r25, r1
    1c64:	96 95       	lsr	r25
    1c66:	87 95       	ror	r24
    1c68:	97 f9       	bld	r25, 7
    1c6a:	08 95       	ret

00001c6c <__fp_inf>:
    1c6c:	97 f9       	bld	r25, 7
    1c6e:	9f 67       	ori	r25, 0x7F	; 127
    1c70:	80 e8       	ldi	r24, 0x80	; 128
    1c72:	70 e0       	ldi	r23, 0x00	; 0
    1c74:	60 e0       	ldi	r22, 0x00	; 0
    1c76:	08 95       	ret

00001c78 <__fp_nan>:
    1c78:	9f ef       	ldi	r25, 0xFF	; 255
    1c7a:	80 ec       	ldi	r24, 0xC0	; 192
    1c7c:	08 95       	ret

00001c7e <__fp_pscA>:
    1c7e:	00 24       	eor	r0, r0
    1c80:	0a 94       	dec	r0
    1c82:	16 16       	cp	r1, r22
    1c84:	17 06       	cpc	r1, r23
    1c86:	18 06       	cpc	r1, r24
    1c88:	09 06       	cpc	r0, r25
    1c8a:	08 95       	ret

00001c8c <__fp_pscB>:
    1c8c:	00 24       	eor	r0, r0
    1c8e:	0a 94       	dec	r0
    1c90:	12 16       	cp	r1, r18
    1c92:	13 06       	cpc	r1, r19
    1c94:	14 06       	cpc	r1, r20
    1c96:	05 06       	cpc	r0, r21
    1c98:	08 95       	ret

00001c9a <__fp_round>:
    1c9a:	09 2e       	mov	r0, r25
    1c9c:	03 94       	inc	r0
    1c9e:	00 0c       	add	r0, r0
    1ca0:	11 f4       	brne	.+4      	; 0x1ca6 <__fp_round+0xc>
    1ca2:	88 23       	and	r24, r24
    1ca4:	52 f0       	brmi	.+20     	; 0x1cba <__fp_round+0x20>
    1ca6:	bb 0f       	add	r27, r27
    1ca8:	40 f4       	brcc	.+16     	; 0x1cba <__fp_round+0x20>
    1caa:	bf 2b       	or	r27, r31
    1cac:	11 f4       	brne	.+4      	; 0x1cb2 <__fp_round+0x18>
    1cae:	60 ff       	sbrs	r22, 0
    1cb0:	04 c0       	rjmp	.+8      	; 0x1cba <__fp_round+0x20>
    1cb2:	6f 5f       	subi	r22, 0xFF	; 255
    1cb4:	7f 4f       	sbci	r23, 0xFF	; 255
    1cb6:	8f 4f       	sbci	r24, 0xFF	; 255
    1cb8:	9f 4f       	sbci	r25, 0xFF	; 255
    1cba:	08 95       	ret

00001cbc <vfprintf>:
    1cbc:	2f 92       	push	r2
    1cbe:	3f 92       	push	r3
    1cc0:	4f 92       	push	r4
    1cc2:	5f 92       	push	r5
    1cc4:	6f 92       	push	r6
    1cc6:	7f 92       	push	r7
    1cc8:	8f 92       	push	r8
    1cca:	9f 92       	push	r9
    1ccc:	af 92       	push	r10
    1cce:	bf 92       	push	r11
    1cd0:	cf 92       	push	r12
    1cd2:	df 92       	push	r13
    1cd4:	ef 92       	push	r14
    1cd6:	ff 92       	push	r15
    1cd8:	0f 93       	push	r16
    1cda:	1f 93       	push	r17
    1cdc:	cf 93       	push	r28
    1cde:	df 93       	push	r29
    1ce0:	cd b7       	in	r28, 0x3d	; 61
    1ce2:	de b7       	in	r29, 0x3e	; 62
    1ce4:	63 97       	sbiw	r28, 0x13	; 19
    1ce6:	0f b6       	in	r0, 0x3f	; 63
    1ce8:	f8 94       	cli
    1cea:	de bf       	out	0x3e, r29	; 62
    1cec:	0f be       	out	0x3f, r0	; 63
    1cee:	cd bf       	out	0x3d, r28	; 61
    1cf0:	6c 01       	movw	r12, r24
    1cf2:	4b 01       	movw	r8, r22
    1cf4:	2a 01       	movw	r4, r20
    1cf6:	fc 01       	movw	r30, r24
    1cf8:	17 82       	std	Z+7, r1	; 0x07
    1cfa:	16 82       	std	Z+6, r1	; 0x06
    1cfc:	83 81       	ldd	r24, Z+3	; 0x03
    1cfe:	81 ff       	sbrs	r24, 1
    1d00:	29 c3       	rjmp	.+1618   	; 0x2354 <vfprintf+0x698>
    1d02:	ae 01       	movw	r20, r28
    1d04:	4f 5f       	subi	r20, 0xFF	; 255
    1d06:	5f 4f       	sbci	r21, 0xFF	; 255
    1d08:	3a 01       	movw	r6, r20
    1d0a:	f6 01       	movw	r30, r12
    1d0c:	93 81       	ldd	r25, Z+3	; 0x03
    1d0e:	f4 01       	movw	r30, r8
    1d10:	93 fd       	sbrc	r25, 3
    1d12:	85 91       	lpm	r24, Z+
    1d14:	93 ff       	sbrs	r25, 3
    1d16:	81 91       	ld	r24, Z+
    1d18:	4f 01       	movw	r8, r30
    1d1a:	88 23       	and	r24, r24
    1d1c:	09 f4       	brne	.+2      	; 0x1d20 <vfprintf+0x64>
    1d1e:	16 c3       	rjmp	.+1580   	; 0x234c <vfprintf+0x690>
    1d20:	85 32       	cpi	r24, 0x25	; 37
    1d22:	39 f4       	brne	.+14     	; 0x1d32 <vfprintf+0x76>
    1d24:	93 fd       	sbrc	r25, 3
    1d26:	85 91       	lpm	r24, Z+
    1d28:	93 ff       	sbrs	r25, 3
    1d2a:	81 91       	ld	r24, Z+
    1d2c:	4f 01       	movw	r8, r30
    1d2e:	85 32       	cpi	r24, 0x25	; 37
    1d30:	31 f4       	brne	.+12     	; 0x1d3e <vfprintf+0x82>
    1d32:	b6 01       	movw	r22, r12
    1d34:	90 e0       	ldi	r25, 0x00	; 0
    1d36:	41 d4       	rcall	.+2178   	; 0x25ba <fputc>
    1d38:	52 01       	movw	r10, r4
    1d3a:	25 01       	movw	r4, r10
    1d3c:	e6 cf       	rjmp	.-52     	; 0x1d0a <vfprintf+0x4e>
    1d3e:	10 e0       	ldi	r17, 0x00	; 0
    1d40:	f1 2c       	mov	r15, r1
    1d42:	20 e0       	ldi	r18, 0x00	; 0
    1d44:	20 32       	cpi	r18, 0x20	; 32
    1d46:	a0 f4       	brcc	.+40     	; 0x1d70 <vfprintf+0xb4>
    1d48:	8b 32       	cpi	r24, 0x2B	; 43
    1d4a:	69 f0       	breq	.+26     	; 0x1d66 <vfprintf+0xaa>
    1d4c:	30 f4       	brcc	.+12     	; 0x1d5a <vfprintf+0x9e>
    1d4e:	80 32       	cpi	r24, 0x20	; 32
    1d50:	59 f0       	breq	.+22     	; 0x1d68 <vfprintf+0xac>
    1d52:	83 32       	cpi	r24, 0x23	; 35
    1d54:	69 f4       	brne	.+26     	; 0x1d70 <vfprintf+0xb4>
    1d56:	20 61       	ori	r18, 0x10	; 16
    1d58:	2c c0       	rjmp	.+88     	; 0x1db2 <vfprintf+0xf6>
    1d5a:	8d 32       	cpi	r24, 0x2D	; 45
    1d5c:	39 f0       	breq	.+14     	; 0x1d6c <vfprintf+0xb0>
    1d5e:	80 33       	cpi	r24, 0x30	; 48
    1d60:	39 f4       	brne	.+14     	; 0x1d70 <vfprintf+0xb4>
    1d62:	21 60       	ori	r18, 0x01	; 1
    1d64:	26 c0       	rjmp	.+76     	; 0x1db2 <vfprintf+0xf6>
    1d66:	22 60       	ori	r18, 0x02	; 2
    1d68:	24 60       	ori	r18, 0x04	; 4
    1d6a:	23 c0       	rjmp	.+70     	; 0x1db2 <vfprintf+0xf6>
    1d6c:	28 60       	ori	r18, 0x08	; 8
    1d6e:	21 c0       	rjmp	.+66     	; 0x1db2 <vfprintf+0xf6>
    1d70:	27 fd       	sbrc	r18, 7
    1d72:	27 c0       	rjmp	.+78     	; 0x1dc2 <vfprintf+0x106>
    1d74:	30 ed       	ldi	r19, 0xD0	; 208
    1d76:	38 0f       	add	r19, r24
    1d78:	3a 30       	cpi	r19, 0x0A	; 10
    1d7a:	78 f4       	brcc	.+30     	; 0x1d9a <vfprintf+0xde>
    1d7c:	26 ff       	sbrs	r18, 6
    1d7e:	06 c0       	rjmp	.+12     	; 0x1d8c <vfprintf+0xd0>
    1d80:	fa e0       	ldi	r31, 0x0A	; 10
    1d82:	1f 9f       	mul	r17, r31
    1d84:	30 0d       	add	r19, r0
    1d86:	11 24       	eor	r1, r1
    1d88:	13 2f       	mov	r17, r19
    1d8a:	13 c0       	rjmp	.+38     	; 0x1db2 <vfprintf+0xf6>
    1d8c:	4a e0       	ldi	r20, 0x0A	; 10
    1d8e:	f4 9e       	mul	r15, r20
    1d90:	30 0d       	add	r19, r0
    1d92:	11 24       	eor	r1, r1
    1d94:	f3 2e       	mov	r15, r19
    1d96:	20 62       	ori	r18, 0x20	; 32
    1d98:	0c c0       	rjmp	.+24     	; 0x1db2 <vfprintf+0xf6>
    1d9a:	8e 32       	cpi	r24, 0x2E	; 46
    1d9c:	21 f4       	brne	.+8      	; 0x1da6 <vfprintf+0xea>
    1d9e:	26 fd       	sbrc	r18, 6
    1da0:	d5 c2       	rjmp	.+1450   	; 0x234c <vfprintf+0x690>
    1da2:	20 64       	ori	r18, 0x40	; 64
    1da4:	06 c0       	rjmp	.+12     	; 0x1db2 <vfprintf+0xf6>
    1da6:	8c 36       	cpi	r24, 0x6C	; 108
    1da8:	11 f4       	brne	.+4      	; 0x1dae <vfprintf+0xf2>
    1daa:	20 68       	ori	r18, 0x80	; 128
    1dac:	02 c0       	rjmp	.+4      	; 0x1db2 <vfprintf+0xf6>
    1dae:	88 36       	cpi	r24, 0x68	; 104
    1db0:	41 f4       	brne	.+16     	; 0x1dc2 <vfprintf+0x106>
    1db2:	f4 01       	movw	r30, r8
    1db4:	93 fd       	sbrc	r25, 3
    1db6:	85 91       	lpm	r24, Z+
    1db8:	93 ff       	sbrs	r25, 3
    1dba:	81 91       	ld	r24, Z+
    1dbc:	4f 01       	movw	r8, r30
    1dbe:	81 11       	cpse	r24, r1
    1dc0:	c1 cf       	rjmp	.-126    	; 0x1d44 <vfprintf+0x88>
    1dc2:	9b eb       	ldi	r25, 0xBB	; 187
    1dc4:	98 0f       	add	r25, r24
    1dc6:	93 30       	cpi	r25, 0x03	; 3
    1dc8:	18 f4       	brcc	.+6      	; 0x1dd0 <vfprintf+0x114>
    1dca:	20 61       	ori	r18, 0x10	; 16
    1dcc:	80 5e       	subi	r24, 0xE0	; 224
    1dce:	06 c0       	rjmp	.+12     	; 0x1ddc <vfprintf+0x120>
    1dd0:	9b e9       	ldi	r25, 0x9B	; 155
    1dd2:	98 0f       	add	r25, r24
    1dd4:	93 30       	cpi	r25, 0x03	; 3
    1dd6:	08 f0       	brcs	.+2      	; 0x1dda <vfprintf+0x11e>
    1dd8:	64 c1       	rjmp	.+712    	; 0x20a2 <vfprintf+0x3e6>
    1dda:	2f 7e       	andi	r18, 0xEF	; 239
    1ddc:	26 ff       	sbrs	r18, 6
    1dde:	16 e0       	ldi	r17, 0x06	; 6
    1de0:	2f 73       	andi	r18, 0x3F	; 63
    1de2:	32 2e       	mov	r3, r18
    1de4:	85 36       	cpi	r24, 0x65	; 101
    1de6:	19 f4       	brne	.+6      	; 0x1dee <vfprintf+0x132>
    1de8:	20 64       	ori	r18, 0x40	; 64
    1dea:	32 2e       	mov	r3, r18
    1dec:	08 c0       	rjmp	.+16     	; 0x1dfe <vfprintf+0x142>
    1dee:	86 36       	cpi	r24, 0x66	; 102
    1df0:	21 f4       	brne	.+8      	; 0x1dfa <vfprintf+0x13e>
    1df2:	f2 2f       	mov	r31, r18
    1df4:	f0 68       	ori	r31, 0x80	; 128
    1df6:	3f 2e       	mov	r3, r31
    1df8:	02 c0       	rjmp	.+4      	; 0x1dfe <vfprintf+0x142>
    1dfa:	11 11       	cpse	r17, r1
    1dfc:	11 50       	subi	r17, 0x01	; 1
    1dfe:	37 fe       	sbrs	r3, 7
    1e00:	07 c0       	rjmp	.+14     	; 0x1e10 <vfprintf+0x154>
    1e02:	1c 33       	cpi	r17, 0x3C	; 60
    1e04:	50 f4       	brcc	.+20     	; 0x1e1a <vfprintf+0x15e>
    1e06:	ee 24       	eor	r14, r14
    1e08:	e3 94       	inc	r14
    1e0a:	e1 0e       	add	r14, r17
    1e0c:	27 e0       	ldi	r18, 0x07	; 7
    1e0e:	0b c0       	rjmp	.+22     	; 0x1e26 <vfprintf+0x16a>
    1e10:	18 30       	cpi	r17, 0x08	; 8
    1e12:	38 f0       	brcs	.+14     	; 0x1e22 <vfprintf+0x166>
    1e14:	27 e0       	ldi	r18, 0x07	; 7
    1e16:	17 e0       	ldi	r17, 0x07	; 7
    1e18:	05 c0       	rjmp	.+10     	; 0x1e24 <vfprintf+0x168>
    1e1a:	27 e0       	ldi	r18, 0x07	; 7
    1e1c:	4c e3       	ldi	r20, 0x3C	; 60
    1e1e:	e4 2e       	mov	r14, r20
    1e20:	02 c0       	rjmp	.+4      	; 0x1e26 <vfprintf+0x16a>
    1e22:	21 2f       	mov	r18, r17
    1e24:	e1 2c       	mov	r14, r1
    1e26:	52 01       	movw	r10, r4
    1e28:	44 e0       	ldi	r20, 0x04	; 4
    1e2a:	a4 0e       	add	r10, r20
    1e2c:	b1 1c       	adc	r11, r1
    1e2e:	f2 01       	movw	r30, r4
    1e30:	60 81       	ld	r22, Z
    1e32:	71 81       	ldd	r23, Z+1	; 0x01
    1e34:	82 81       	ldd	r24, Z+2	; 0x02
    1e36:	93 81       	ldd	r25, Z+3	; 0x03
    1e38:	0e 2d       	mov	r16, r14
    1e3a:	a3 01       	movw	r20, r6
    1e3c:	c7 d2       	rcall	.+1422   	; 0x23cc <__ftoa_engine>
    1e3e:	2c 01       	movw	r4, r24
    1e40:	09 81       	ldd	r16, Y+1	; 0x01
    1e42:	00 ff       	sbrs	r16, 0
    1e44:	02 c0       	rjmp	.+4      	; 0x1e4a <vfprintf+0x18e>
    1e46:	03 ff       	sbrs	r16, 3
    1e48:	07 c0       	rjmp	.+14     	; 0x1e58 <vfprintf+0x19c>
    1e4a:	31 fc       	sbrc	r3, 1
    1e4c:	08 c0       	rjmp	.+16     	; 0x1e5e <vfprintf+0x1a2>
    1e4e:	32 fe       	sbrs	r3, 2
    1e50:	09 c0       	rjmp	.+18     	; 0x1e64 <vfprintf+0x1a8>
    1e52:	30 e2       	ldi	r19, 0x20	; 32
    1e54:	23 2e       	mov	r2, r19
    1e56:	07 c0       	rjmp	.+14     	; 0x1e66 <vfprintf+0x1aa>
    1e58:	2d e2       	ldi	r18, 0x2D	; 45
    1e5a:	22 2e       	mov	r2, r18
    1e5c:	04 c0       	rjmp	.+8      	; 0x1e66 <vfprintf+0x1aa>
    1e5e:	9b e2       	ldi	r25, 0x2B	; 43
    1e60:	29 2e       	mov	r2, r25
    1e62:	01 c0       	rjmp	.+2      	; 0x1e66 <vfprintf+0x1aa>
    1e64:	21 2c       	mov	r2, r1
    1e66:	80 2f       	mov	r24, r16
    1e68:	8c 70       	andi	r24, 0x0C	; 12
    1e6a:	19 f0       	breq	.+6      	; 0x1e72 <vfprintf+0x1b6>
    1e6c:	21 10       	cpse	r2, r1
    1e6e:	51 c2       	rjmp	.+1186   	; 0x2312 <vfprintf+0x656>
    1e70:	8d c2       	rjmp	.+1306   	; 0x238c <vfprintf+0x6d0>
    1e72:	37 fe       	sbrs	r3, 7
    1e74:	0f c0       	rjmp	.+30     	; 0x1e94 <vfprintf+0x1d8>
    1e76:	e4 0c       	add	r14, r4
    1e78:	04 ff       	sbrs	r16, 4
    1e7a:	04 c0       	rjmp	.+8      	; 0x1e84 <vfprintf+0x1c8>
    1e7c:	8a 81       	ldd	r24, Y+2	; 0x02
    1e7e:	81 33       	cpi	r24, 0x31	; 49
    1e80:	09 f4       	brne	.+2      	; 0x1e84 <vfprintf+0x1c8>
    1e82:	ea 94       	dec	r14
    1e84:	1e 14       	cp	r1, r14
    1e86:	74 f5       	brge	.+92     	; 0x1ee4 <vfprintf+0x228>
    1e88:	f8 e0       	ldi	r31, 0x08	; 8
    1e8a:	fe 15       	cp	r31, r14
    1e8c:	78 f5       	brcc	.+94     	; 0x1eec <vfprintf+0x230>
    1e8e:	88 e0       	ldi	r24, 0x08	; 8
    1e90:	e8 2e       	mov	r14, r24
    1e92:	2c c0       	rjmp	.+88     	; 0x1eec <vfprintf+0x230>
    1e94:	36 fc       	sbrc	r3, 6
    1e96:	2a c0       	rjmp	.+84     	; 0x1eec <vfprintf+0x230>
    1e98:	81 2f       	mov	r24, r17
    1e9a:	90 e0       	ldi	r25, 0x00	; 0
    1e9c:	84 15       	cp	r24, r4
    1e9e:	95 05       	cpc	r25, r5
    1ea0:	9c f0       	brlt	.+38     	; 0x1ec8 <vfprintf+0x20c>
    1ea2:	2c ef       	ldi	r18, 0xFC	; 252
    1ea4:	42 16       	cp	r4, r18
    1ea6:	2f ef       	ldi	r18, 0xFF	; 255
    1ea8:	52 06       	cpc	r5, r18
    1eaa:	74 f0       	brlt	.+28     	; 0x1ec8 <vfprintf+0x20c>
    1eac:	43 2d       	mov	r20, r3
    1eae:	40 68       	ori	r20, 0x80	; 128
    1eb0:	34 2e       	mov	r3, r20
    1eb2:	0a c0       	rjmp	.+20     	; 0x1ec8 <vfprintf+0x20c>
    1eb4:	e2 e0       	ldi	r30, 0x02	; 2
    1eb6:	f0 e0       	ldi	r31, 0x00	; 0
    1eb8:	ec 0f       	add	r30, r28
    1eba:	fd 1f       	adc	r31, r29
    1ebc:	e1 0f       	add	r30, r17
    1ebe:	f1 1d       	adc	r31, r1
    1ec0:	80 81       	ld	r24, Z
    1ec2:	80 33       	cpi	r24, 0x30	; 48
    1ec4:	19 f4       	brne	.+6      	; 0x1ecc <vfprintf+0x210>
    1ec6:	11 50       	subi	r17, 0x01	; 1
    1ec8:	11 11       	cpse	r17, r1
    1eca:	f4 cf       	rjmp	.-24     	; 0x1eb4 <vfprintf+0x1f8>
    1ecc:	37 fe       	sbrs	r3, 7
    1ece:	0e c0       	rjmp	.+28     	; 0x1eec <vfprintf+0x230>
    1ed0:	ee 24       	eor	r14, r14
    1ed2:	e3 94       	inc	r14
    1ed4:	e1 0e       	add	r14, r17
    1ed6:	81 2f       	mov	r24, r17
    1ed8:	90 e0       	ldi	r25, 0x00	; 0
    1eda:	48 16       	cp	r4, r24
    1edc:	59 06       	cpc	r5, r25
    1ede:	2c f4       	brge	.+10     	; 0x1eea <vfprintf+0x22e>
    1ee0:	14 19       	sub	r17, r4
    1ee2:	04 c0       	rjmp	.+8      	; 0x1eec <vfprintf+0x230>
    1ee4:	ee 24       	eor	r14, r14
    1ee6:	e3 94       	inc	r14
    1ee8:	01 c0       	rjmp	.+2      	; 0x1eec <vfprintf+0x230>
    1eea:	10 e0       	ldi	r17, 0x00	; 0
    1eec:	37 fe       	sbrs	r3, 7
    1eee:	06 c0       	rjmp	.+12     	; 0x1efc <vfprintf+0x240>
    1ef0:	14 14       	cp	r1, r4
    1ef2:	15 04       	cpc	r1, r5
    1ef4:	34 f4       	brge	.+12     	; 0x1f02 <vfprintf+0x246>
    1ef6:	c2 01       	movw	r24, r4
    1ef8:	01 96       	adiw	r24, 0x01	; 1
    1efa:	05 c0       	rjmp	.+10     	; 0x1f06 <vfprintf+0x24a>
    1efc:	85 e0       	ldi	r24, 0x05	; 5
    1efe:	90 e0       	ldi	r25, 0x00	; 0
    1f00:	02 c0       	rjmp	.+4      	; 0x1f06 <vfprintf+0x24a>
    1f02:	81 e0       	ldi	r24, 0x01	; 1
    1f04:	90 e0       	ldi	r25, 0x00	; 0
    1f06:	21 10       	cpse	r2, r1
    1f08:	01 96       	adiw	r24, 0x01	; 1
    1f0a:	11 23       	and	r17, r17
    1f0c:	31 f0       	breq	.+12     	; 0x1f1a <vfprintf+0x25e>
    1f0e:	21 2f       	mov	r18, r17
    1f10:	30 e0       	ldi	r19, 0x00	; 0
    1f12:	2f 5f       	subi	r18, 0xFF	; 255
    1f14:	3f 4f       	sbci	r19, 0xFF	; 255
    1f16:	82 0f       	add	r24, r18
    1f18:	93 1f       	adc	r25, r19
    1f1a:	2f 2d       	mov	r18, r15
    1f1c:	30 e0       	ldi	r19, 0x00	; 0
    1f1e:	82 17       	cp	r24, r18
    1f20:	93 07       	cpc	r25, r19
    1f22:	14 f4       	brge	.+4      	; 0x1f28 <vfprintf+0x26c>
    1f24:	f8 1a       	sub	r15, r24
    1f26:	01 c0       	rjmp	.+2      	; 0x1f2a <vfprintf+0x26e>
    1f28:	f1 2c       	mov	r15, r1
    1f2a:	83 2d       	mov	r24, r3
    1f2c:	89 70       	andi	r24, 0x09	; 9
    1f2e:	41 f4       	brne	.+16     	; 0x1f40 <vfprintf+0x284>
    1f30:	ff 20       	and	r15, r15
    1f32:	31 f0       	breq	.+12     	; 0x1f40 <vfprintf+0x284>
    1f34:	b6 01       	movw	r22, r12
    1f36:	80 e2       	ldi	r24, 0x20	; 32
    1f38:	90 e0       	ldi	r25, 0x00	; 0
    1f3a:	3f d3       	rcall	.+1662   	; 0x25ba <fputc>
    1f3c:	fa 94       	dec	r15
    1f3e:	f8 cf       	rjmp	.-16     	; 0x1f30 <vfprintf+0x274>
    1f40:	22 20       	and	r2, r2
    1f42:	21 f0       	breq	.+8      	; 0x1f4c <vfprintf+0x290>
    1f44:	b6 01       	movw	r22, r12
    1f46:	82 2d       	mov	r24, r2
    1f48:	90 e0       	ldi	r25, 0x00	; 0
    1f4a:	37 d3       	rcall	.+1646   	; 0x25ba <fputc>
    1f4c:	33 fc       	sbrc	r3, 3
    1f4e:	08 c0       	rjmp	.+16     	; 0x1f60 <vfprintf+0x2a4>
    1f50:	ff 20       	and	r15, r15
    1f52:	31 f0       	breq	.+12     	; 0x1f60 <vfprintf+0x2a4>
    1f54:	b6 01       	movw	r22, r12
    1f56:	80 e3       	ldi	r24, 0x30	; 48
    1f58:	90 e0       	ldi	r25, 0x00	; 0
    1f5a:	2f d3       	rcall	.+1630   	; 0x25ba <fputc>
    1f5c:	fa 94       	dec	r15
    1f5e:	f8 cf       	rjmp	.-16     	; 0x1f50 <vfprintf+0x294>
    1f60:	37 fe       	sbrs	r3, 7
    1f62:	58 c0       	rjmp	.+176    	; 0x2014 <vfprintf+0x358>
    1f64:	94 2d       	mov	r25, r4
    1f66:	85 2d       	mov	r24, r5
    1f68:	57 fe       	sbrs	r5, 7
    1f6a:	02 c0       	rjmp	.+4      	; 0x1f70 <vfprintf+0x2b4>
    1f6c:	90 e0       	ldi	r25, 0x00	; 0
    1f6e:	80 e0       	ldi	r24, 0x00	; 0
    1f70:	29 2e       	mov	r2, r25
    1f72:	38 2e       	mov	r3, r24
    1f74:	20 e0       	ldi	r18, 0x00	; 0
    1f76:	30 e0       	ldi	r19, 0x00	; 0
    1f78:	a2 01       	movw	r20, r4
    1f7a:	4e 19       	sub	r20, r14
    1f7c:	51 09       	sbc	r21, r1
    1f7e:	5d 87       	std	Y+13, r21	; 0x0d
    1f80:	4c 87       	std	Y+12, r20	; 0x0c
    1f82:	a2 01       	movw	r20, r4
    1f84:	42 19       	sub	r20, r2
    1f86:	53 09       	sbc	r21, r3
    1f88:	5f 87       	std	Y+15, r21	; 0x0f
    1f8a:	4e 87       	std	Y+14, r20	; 0x0e
    1f8c:	61 2f       	mov	r22, r17
    1f8e:	70 e0       	ldi	r23, 0x00	; 0
    1f90:	44 27       	eor	r20, r20
    1f92:	55 27       	eor	r21, r21
    1f94:	46 1b       	sub	r20, r22
    1f96:	57 0b       	sbc	r21, r23
    1f98:	59 8b       	std	Y+17, r21	; 0x11
    1f9a:	48 8b       	std	Y+16, r20	; 0x10
    1f9c:	5f ef       	ldi	r21, 0xFF	; 255
    1f9e:	25 16       	cp	r2, r21
    1fa0:	35 06       	cpc	r3, r21
    1fa2:	41 f4       	brne	.+16     	; 0x1fb4 <vfprintf+0x2f8>
    1fa4:	b6 01       	movw	r22, r12
    1fa6:	8e e2       	ldi	r24, 0x2E	; 46
    1fa8:	90 e0       	ldi	r25, 0x00	; 0
    1faa:	2a 8b       	std	Y+18, r18	; 0x12
    1fac:	3b 8b       	std	Y+19, r19	; 0x13
    1fae:	05 d3       	rcall	.+1546   	; 0x25ba <fputc>
    1fb0:	3b 89       	ldd	r19, Y+19	; 0x13
    1fb2:	2a 89       	ldd	r18, Y+18	; 0x12
    1fb4:	42 14       	cp	r4, r2
    1fb6:	53 04       	cpc	r5, r3
    1fb8:	6c f0       	brlt	.+26     	; 0x1fd4 <vfprintf+0x318>
    1fba:	4c 85       	ldd	r20, Y+12	; 0x0c
    1fbc:	5d 85       	ldd	r21, Y+13	; 0x0d
    1fbe:	42 15       	cp	r20, r2
    1fc0:	53 05       	cpc	r21, r3
    1fc2:	44 f4       	brge	.+16     	; 0x1fd4 <vfprintf+0x318>
    1fc4:	ee 85       	ldd	r30, Y+14	; 0x0e
    1fc6:	ff 85       	ldd	r31, Y+15	; 0x0f
    1fc8:	e2 0f       	add	r30, r18
    1fca:	f3 1f       	adc	r31, r19
    1fcc:	e6 0d       	add	r30, r6
    1fce:	f7 1d       	adc	r31, r7
    1fd0:	81 81       	ldd	r24, Z+1	; 0x01
    1fd2:	01 c0       	rjmp	.+2      	; 0x1fd6 <vfprintf+0x31a>
    1fd4:	80 e3       	ldi	r24, 0x30	; 48
    1fd6:	51 e0       	ldi	r21, 0x01	; 1
    1fd8:	25 1a       	sub	r2, r21
    1fda:	31 08       	sbc	r3, r1
    1fdc:	2f 5f       	subi	r18, 0xFF	; 255
    1fde:	3f 4f       	sbci	r19, 0xFF	; 255
    1fe0:	48 89       	ldd	r20, Y+16	; 0x10
    1fe2:	59 89       	ldd	r21, Y+17	; 0x11
    1fe4:	24 16       	cp	r2, r20
    1fe6:	35 06       	cpc	r3, r21
    1fe8:	44 f0       	brlt	.+16     	; 0x1ffa <vfprintf+0x33e>
    1fea:	b6 01       	movw	r22, r12
    1fec:	90 e0       	ldi	r25, 0x00	; 0
    1fee:	2a 8b       	std	Y+18, r18	; 0x12
    1ff0:	3b 8b       	std	Y+19, r19	; 0x13
    1ff2:	e3 d2       	rcall	.+1478   	; 0x25ba <fputc>
    1ff4:	2a 89       	ldd	r18, Y+18	; 0x12
    1ff6:	3b 89       	ldd	r19, Y+19	; 0x13
    1ff8:	d1 cf       	rjmp	.-94     	; 0x1f9c <vfprintf+0x2e0>
    1ffa:	24 14       	cp	r2, r4
    1ffc:	35 04       	cpc	r3, r5
    1ffe:	39 f4       	brne	.+14     	; 0x200e <vfprintf+0x352>
    2000:	9a 81       	ldd	r25, Y+2	; 0x02
    2002:	96 33       	cpi	r25, 0x36	; 54
    2004:	18 f4       	brcc	.+6      	; 0x200c <vfprintf+0x350>
    2006:	95 33       	cpi	r25, 0x35	; 53
    2008:	11 f4       	brne	.+4      	; 0x200e <vfprintf+0x352>
    200a:	04 ff       	sbrs	r16, 4
    200c:	81 e3       	ldi	r24, 0x31	; 49
    200e:	b6 01       	movw	r22, r12
    2010:	90 e0       	ldi	r25, 0x00	; 0
    2012:	45 c0       	rjmp	.+138    	; 0x209e <vfprintf+0x3e2>
    2014:	8a 81       	ldd	r24, Y+2	; 0x02
    2016:	81 33       	cpi	r24, 0x31	; 49
    2018:	09 f0       	breq	.+2      	; 0x201c <vfprintf+0x360>
    201a:	0f 7e       	andi	r16, 0xEF	; 239
    201c:	b6 01       	movw	r22, r12
    201e:	90 e0       	ldi	r25, 0x00	; 0
    2020:	cc d2       	rcall	.+1432   	; 0x25ba <fputc>
    2022:	11 11       	cpse	r17, r1
    2024:	05 c0       	rjmp	.+10     	; 0x2030 <vfprintf+0x374>
    2026:	34 fc       	sbrc	r3, 4
    2028:	16 c0       	rjmp	.+44     	; 0x2056 <vfprintf+0x39a>
    202a:	85 e6       	ldi	r24, 0x65	; 101
    202c:	90 e0       	ldi	r25, 0x00	; 0
    202e:	15 c0       	rjmp	.+42     	; 0x205a <vfprintf+0x39e>
    2030:	b6 01       	movw	r22, r12
    2032:	8e e2       	ldi	r24, 0x2E	; 46
    2034:	90 e0       	ldi	r25, 0x00	; 0
    2036:	c1 d2       	rcall	.+1410   	; 0x25ba <fputc>
    2038:	82 e0       	ldi	r24, 0x02	; 2
    203a:	ee 24       	eor	r14, r14
    203c:	e3 94       	inc	r14
    203e:	e8 0e       	add	r14, r24
    2040:	f3 01       	movw	r30, r6
    2042:	e8 0f       	add	r30, r24
    2044:	f1 1d       	adc	r31, r1
    2046:	80 81       	ld	r24, Z
    2048:	b6 01       	movw	r22, r12
    204a:	90 e0       	ldi	r25, 0x00	; 0
    204c:	b6 d2       	rcall	.+1388   	; 0x25ba <fputc>
    204e:	11 50       	subi	r17, 0x01	; 1
    2050:	8e 2d       	mov	r24, r14
    2052:	99 f7       	brne	.-26     	; 0x203a <vfprintf+0x37e>
    2054:	e8 cf       	rjmp	.-48     	; 0x2026 <vfprintf+0x36a>
    2056:	85 e4       	ldi	r24, 0x45	; 69
    2058:	90 e0       	ldi	r25, 0x00	; 0
    205a:	b6 01       	movw	r22, r12
    205c:	ae d2       	rcall	.+1372   	; 0x25ba <fputc>
    205e:	57 fc       	sbrc	r5, 7
    2060:	05 c0       	rjmp	.+10     	; 0x206c <vfprintf+0x3b0>
    2062:	41 14       	cp	r4, r1
    2064:	51 04       	cpc	r5, r1
    2066:	39 f4       	brne	.+14     	; 0x2076 <vfprintf+0x3ba>
    2068:	04 ff       	sbrs	r16, 4
    206a:	05 c0       	rjmp	.+10     	; 0x2076 <vfprintf+0x3ba>
    206c:	51 94       	neg	r5
    206e:	41 94       	neg	r4
    2070:	51 08       	sbc	r5, r1
    2072:	8d e2       	ldi	r24, 0x2D	; 45
    2074:	01 c0       	rjmp	.+2      	; 0x2078 <vfprintf+0x3bc>
    2076:	8b e2       	ldi	r24, 0x2B	; 43
    2078:	b6 01       	movw	r22, r12
    207a:	90 e0       	ldi	r25, 0x00	; 0
    207c:	9e d2       	rcall	.+1340   	; 0x25ba <fputc>
    207e:	80 e3       	ldi	r24, 0x30	; 48
    2080:	9a e0       	ldi	r25, 0x0A	; 10
    2082:	49 16       	cp	r4, r25
    2084:	51 04       	cpc	r5, r1
    2086:	2c f0       	brlt	.+10     	; 0x2092 <vfprintf+0x3d6>
    2088:	8f 5f       	subi	r24, 0xFF	; 255
    208a:	5a e0       	ldi	r21, 0x0A	; 10
    208c:	45 1a       	sub	r4, r21
    208e:	51 08       	sbc	r5, r1
    2090:	f7 cf       	rjmp	.-18     	; 0x2080 <vfprintf+0x3c4>
    2092:	b6 01       	movw	r22, r12
    2094:	90 e0       	ldi	r25, 0x00	; 0
    2096:	91 d2       	rcall	.+1314   	; 0x25ba <fputc>
    2098:	b6 01       	movw	r22, r12
    209a:	c2 01       	movw	r24, r4
    209c:	c0 96       	adiw	r24, 0x30	; 48
    209e:	8d d2       	rcall	.+1306   	; 0x25ba <fputc>
    20a0:	4c c1       	rjmp	.+664    	; 0x233a <vfprintf+0x67e>
    20a2:	83 36       	cpi	r24, 0x63	; 99
    20a4:	31 f0       	breq	.+12     	; 0x20b2 <vfprintf+0x3f6>
    20a6:	83 37       	cpi	r24, 0x73	; 115
    20a8:	79 f0       	breq	.+30     	; 0x20c8 <vfprintf+0x40c>
    20aa:	83 35       	cpi	r24, 0x53	; 83
    20ac:	09 f0       	breq	.+2      	; 0x20b0 <vfprintf+0x3f4>
    20ae:	54 c0       	rjmp	.+168    	; 0x2158 <vfprintf+0x49c>
    20b0:	20 c0       	rjmp	.+64     	; 0x20f2 <vfprintf+0x436>
    20b2:	52 01       	movw	r10, r4
    20b4:	e2 e0       	ldi	r30, 0x02	; 2
    20b6:	ae 0e       	add	r10, r30
    20b8:	b1 1c       	adc	r11, r1
    20ba:	f2 01       	movw	r30, r4
    20bc:	80 81       	ld	r24, Z
    20be:	89 83       	std	Y+1, r24	; 0x01
    20c0:	01 e0       	ldi	r16, 0x01	; 1
    20c2:	10 e0       	ldi	r17, 0x00	; 0
    20c4:	23 01       	movw	r4, r6
    20c6:	13 c0       	rjmp	.+38     	; 0x20ee <vfprintf+0x432>
    20c8:	52 01       	movw	r10, r4
    20ca:	f2 e0       	ldi	r31, 0x02	; 2
    20cc:	af 0e       	add	r10, r31
    20ce:	b1 1c       	adc	r11, r1
    20d0:	f2 01       	movw	r30, r4
    20d2:	40 80       	ld	r4, Z
    20d4:	51 80       	ldd	r5, Z+1	; 0x01
    20d6:	26 ff       	sbrs	r18, 6
    20d8:	03 c0       	rjmp	.+6      	; 0x20e0 <vfprintf+0x424>
    20da:	61 2f       	mov	r22, r17
    20dc:	70 e0       	ldi	r23, 0x00	; 0
    20de:	02 c0       	rjmp	.+4      	; 0x20e4 <vfprintf+0x428>
    20e0:	6f ef       	ldi	r22, 0xFF	; 255
    20e2:	7f ef       	ldi	r23, 0xFF	; 255
    20e4:	c2 01       	movw	r24, r4
    20e6:	2a 8b       	std	Y+18, r18	; 0x12
    20e8:	5d d2       	rcall	.+1210   	; 0x25a4 <strnlen>
    20ea:	8c 01       	movw	r16, r24
    20ec:	2a 89       	ldd	r18, Y+18	; 0x12
    20ee:	2f 77       	andi	r18, 0x7F	; 127
    20f0:	14 c0       	rjmp	.+40     	; 0x211a <vfprintf+0x45e>
    20f2:	52 01       	movw	r10, r4
    20f4:	f2 e0       	ldi	r31, 0x02	; 2
    20f6:	af 0e       	add	r10, r31
    20f8:	b1 1c       	adc	r11, r1
    20fa:	f2 01       	movw	r30, r4
    20fc:	40 80       	ld	r4, Z
    20fe:	51 80       	ldd	r5, Z+1	; 0x01
    2100:	26 ff       	sbrs	r18, 6
    2102:	03 c0       	rjmp	.+6      	; 0x210a <vfprintf+0x44e>
    2104:	61 2f       	mov	r22, r17
    2106:	70 e0       	ldi	r23, 0x00	; 0
    2108:	02 c0       	rjmp	.+4      	; 0x210e <vfprintf+0x452>
    210a:	6f ef       	ldi	r22, 0xFF	; 255
    210c:	7f ef       	ldi	r23, 0xFF	; 255
    210e:	c2 01       	movw	r24, r4
    2110:	2a 8b       	std	Y+18, r18	; 0x12
    2112:	34 d2       	rcall	.+1128   	; 0x257c <strnlen_P>
    2114:	8c 01       	movw	r16, r24
    2116:	2a 89       	ldd	r18, Y+18	; 0x12
    2118:	20 68       	ori	r18, 0x80	; 128
    211a:	32 2e       	mov	r3, r18
    211c:	23 fd       	sbrc	r18, 3
    211e:	18 c0       	rjmp	.+48     	; 0x2150 <vfprintf+0x494>
    2120:	8f 2d       	mov	r24, r15
    2122:	90 e0       	ldi	r25, 0x00	; 0
    2124:	08 17       	cp	r16, r24
    2126:	19 07       	cpc	r17, r25
    2128:	98 f4       	brcc	.+38     	; 0x2150 <vfprintf+0x494>
    212a:	b6 01       	movw	r22, r12
    212c:	80 e2       	ldi	r24, 0x20	; 32
    212e:	90 e0       	ldi	r25, 0x00	; 0
    2130:	44 d2       	rcall	.+1160   	; 0x25ba <fputc>
    2132:	fa 94       	dec	r15
    2134:	f5 cf       	rjmp	.-22     	; 0x2120 <vfprintf+0x464>
    2136:	f2 01       	movw	r30, r4
    2138:	37 fc       	sbrc	r3, 7
    213a:	85 91       	lpm	r24, Z+
    213c:	37 fe       	sbrs	r3, 7
    213e:	81 91       	ld	r24, Z+
    2140:	2f 01       	movw	r4, r30
    2142:	b6 01       	movw	r22, r12
    2144:	90 e0       	ldi	r25, 0x00	; 0
    2146:	39 d2       	rcall	.+1138   	; 0x25ba <fputc>
    2148:	f1 10       	cpse	r15, r1
    214a:	fa 94       	dec	r15
    214c:	01 50       	subi	r16, 0x01	; 1
    214e:	11 09       	sbc	r17, r1
    2150:	01 15       	cp	r16, r1
    2152:	11 05       	cpc	r17, r1
    2154:	81 f7       	brne	.-32     	; 0x2136 <vfprintf+0x47a>
    2156:	f1 c0       	rjmp	.+482    	; 0x233a <vfprintf+0x67e>
    2158:	84 36       	cpi	r24, 0x64	; 100
    215a:	11 f0       	breq	.+4      	; 0x2160 <vfprintf+0x4a4>
    215c:	89 36       	cpi	r24, 0x69	; 105
    215e:	51 f5       	brne	.+84     	; 0x21b4 <vfprintf+0x4f8>
    2160:	52 01       	movw	r10, r4
    2162:	27 ff       	sbrs	r18, 7
    2164:	09 c0       	rjmp	.+18     	; 0x2178 <vfprintf+0x4bc>
    2166:	f4 e0       	ldi	r31, 0x04	; 4
    2168:	af 0e       	add	r10, r31
    216a:	b1 1c       	adc	r11, r1
    216c:	f2 01       	movw	r30, r4
    216e:	60 81       	ld	r22, Z
    2170:	71 81       	ldd	r23, Z+1	; 0x01
    2172:	82 81       	ldd	r24, Z+2	; 0x02
    2174:	93 81       	ldd	r25, Z+3	; 0x03
    2176:	0a c0       	rjmp	.+20     	; 0x218c <vfprintf+0x4d0>
    2178:	f2 e0       	ldi	r31, 0x02	; 2
    217a:	af 0e       	add	r10, r31
    217c:	b1 1c       	adc	r11, r1
    217e:	f2 01       	movw	r30, r4
    2180:	60 81       	ld	r22, Z
    2182:	71 81       	ldd	r23, Z+1	; 0x01
    2184:	07 2e       	mov	r0, r23
    2186:	00 0c       	add	r0, r0
    2188:	88 0b       	sbc	r24, r24
    218a:	99 0b       	sbc	r25, r25
    218c:	2f 76       	andi	r18, 0x6F	; 111
    218e:	32 2e       	mov	r3, r18
    2190:	97 ff       	sbrs	r25, 7
    2192:	09 c0       	rjmp	.+18     	; 0x21a6 <vfprintf+0x4ea>
    2194:	90 95       	com	r25
    2196:	80 95       	com	r24
    2198:	70 95       	com	r23
    219a:	61 95       	neg	r22
    219c:	7f 4f       	sbci	r23, 0xFF	; 255
    219e:	8f 4f       	sbci	r24, 0xFF	; 255
    21a0:	9f 4f       	sbci	r25, 0xFF	; 255
    21a2:	20 68       	ori	r18, 0x80	; 128
    21a4:	32 2e       	mov	r3, r18
    21a6:	2a e0       	ldi	r18, 0x0A	; 10
    21a8:	30 e0       	ldi	r19, 0x00	; 0
    21aa:	a3 01       	movw	r20, r6
    21ac:	3e d2       	rcall	.+1148   	; 0x262a <__ultoa_invert>
    21ae:	e8 2e       	mov	r14, r24
    21b0:	e6 18       	sub	r14, r6
    21b2:	3e c0       	rjmp	.+124    	; 0x2230 <vfprintf+0x574>
    21b4:	02 2f       	mov	r16, r18
    21b6:	85 37       	cpi	r24, 0x75	; 117
    21b8:	21 f4       	brne	.+8      	; 0x21c2 <vfprintf+0x506>
    21ba:	0f 7e       	andi	r16, 0xEF	; 239
    21bc:	2a e0       	ldi	r18, 0x0A	; 10
    21be:	30 e0       	ldi	r19, 0x00	; 0
    21c0:	1d c0       	rjmp	.+58     	; 0x21fc <vfprintf+0x540>
    21c2:	09 7f       	andi	r16, 0xF9	; 249
    21c4:	8f 36       	cpi	r24, 0x6F	; 111
    21c6:	91 f0       	breq	.+36     	; 0x21ec <vfprintf+0x530>
    21c8:	18 f4       	brcc	.+6      	; 0x21d0 <vfprintf+0x514>
    21ca:	88 35       	cpi	r24, 0x58	; 88
    21cc:	59 f0       	breq	.+22     	; 0x21e4 <vfprintf+0x528>
    21ce:	be c0       	rjmp	.+380    	; 0x234c <vfprintf+0x690>
    21d0:	80 37       	cpi	r24, 0x70	; 112
    21d2:	19 f0       	breq	.+6      	; 0x21da <vfprintf+0x51e>
    21d4:	88 37       	cpi	r24, 0x78	; 120
    21d6:	11 f0       	breq	.+4      	; 0x21dc <vfprintf+0x520>
    21d8:	b9 c0       	rjmp	.+370    	; 0x234c <vfprintf+0x690>
    21da:	00 61       	ori	r16, 0x10	; 16
    21dc:	04 ff       	sbrs	r16, 4
    21de:	09 c0       	rjmp	.+18     	; 0x21f2 <vfprintf+0x536>
    21e0:	04 60       	ori	r16, 0x04	; 4
    21e2:	07 c0       	rjmp	.+14     	; 0x21f2 <vfprintf+0x536>
    21e4:	24 ff       	sbrs	r18, 4
    21e6:	08 c0       	rjmp	.+16     	; 0x21f8 <vfprintf+0x53c>
    21e8:	06 60       	ori	r16, 0x06	; 6
    21ea:	06 c0       	rjmp	.+12     	; 0x21f8 <vfprintf+0x53c>
    21ec:	28 e0       	ldi	r18, 0x08	; 8
    21ee:	30 e0       	ldi	r19, 0x00	; 0
    21f0:	05 c0       	rjmp	.+10     	; 0x21fc <vfprintf+0x540>
    21f2:	20 e1       	ldi	r18, 0x10	; 16
    21f4:	30 e0       	ldi	r19, 0x00	; 0
    21f6:	02 c0       	rjmp	.+4      	; 0x21fc <vfprintf+0x540>
    21f8:	20 e1       	ldi	r18, 0x10	; 16
    21fa:	32 e0       	ldi	r19, 0x02	; 2
    21fc:	52 01       	movw	r10, r4
    21fe:	07 ff       	sbrs	r16, 7
    2200:	09 c0       	rjmp	.+18     	; 0x2214 <vfprintf+0x558>
    2202:	f4 e0       	ldi	r31, 0x04	; 4
    2204:	af 0e       	add	r10, r31
    2206:	b1 1c       	adc	r11, r1
    2208:	f2 01       	movw	r30, r4
    220a:	60 81       	ld	r22, Z
    220c:	71 81       	ldd	r23, Z+1	; 0x01
    220e:	82 81       	ldd	r24, Z+2	; 0x02
    2210:	93 81       	ldd	r25, Z+3	; 0x03
    2212:	08 c0       	rjmp	.+16     	; 0x2224 <vfprintf+0x568>
    2214:	f2 e0       	ldi	r31, 0x02	; 2
    2216:	af 0e       	add	r10, r31
    2218:	b1 1c       	adc	r11, r1
    221a:	f2 01       	movw	r30, r4
    221c:	60 81       	ld	r22, Z
    221e:	71 81       	ldd	r23, Z+1	; 0x01
    2220:	80 e0       	ldi	r24, 0x00	; 0
    2222:	90 e0       	ldi	r25, 0x00	; 0
    2224:	a3 01       	movw	r20, r6
    2226:	01 d2       	rcall	.+1026   	; 0x262a <__ultoa_invert>
    2228:	e8 2e       	mov	r14, r24
    222a:	e6 18       	sub	r14, r6
    222c:	0f 77       	andi	r16, 0x7F	; 127
    222e:	30 2e       	mov	r3, r16
    2230:	36 fe       	sbrs	r3, 6
    2232:	0b c0       	rjmp	.+22     	; 0x224a <vfprintf+0x58e>
    2234:	33 2d       	mov	r19, r3
    2236:	3e 7f       	andi	r19, 0xFE	; 254
    2238:	e1 16       	cp	r14, r17
    223a:	50 f4       	brcc	.+20     	; 0x2250 <vfprintf+0x594>
    223c:	34 fe       	sbrs	r3, 4
    223e:	0a c0       	rjmp	.+20     	; 0x2254 <vfprintf+0x598>
    2240:	32 fc       	sbrc	r3, 2
    2242:	08 c0       	rjmp	.+16     	; 0x2254 <vfprintf+0x598>
    2244:	33 2d       	mov	r19, r3
    2246:	3e 7e       	andi	r19, 0xEE	; 238
    2248:	05 c0       	rjmp	.+10     	; 0x2254 <vfprintf+0x598>
    224a:	0e 2d       	mov	r16, r14
    224c:	33 2d       	mov	r19, r3
    224e:	03 c0       	rjmp	.+6      	; 0x2256 <vfprintf+0x59a>
    2250:	0e 2d       	mov	r16, r14
    2252:	01 c0       	rjmp	.+2      	; 0x2256 <vfprintf+0x59a>
    2254:	01 2f       	mov	r16, r17
    2256:	34 ff       	sbrs	r19, 4
    2258:	0c c0       	rjmp	.+24     	; 0x2272 <vfprintf+0x5b6>
    225a:	fe 01       	movw	r30, r28
    225c:	ee 0d       	add	r30, r14
    225e:	f1 1d       	adc	r31, r1
    2260:	80 81       	ld	r24, Z
    2262:	80 33       	cpi	r24, 0x30	; 48
    2264:	11 f4       	brne	.+4      	; 0x226a <vfprintf+0x5ae>
    2266:	39 7e       	andi	r19, 0xE9	; 233
    2268:	08 c0       	rjmp	.+16     	; 0x227a <vfprintf+0x5be>
    226a:	32 ff       	sbrs	r19, 2
    226c:	05 c0       	rjmp	.+10     	; 0x2278 <vfprintf+0x5bc>
    226e:	0e 5f       	subi	r16, 0xFE	; 254
    2270:	04 c0       	rjmp	.+8      	; 0x227a <vfprintf+0x5be>
    2272:	83 2f       	mov	r24, r19
    2274:	86 78       	andi	r24, 0x86	; 134
    2276:	09 f0       	breq	.+2      	; 0x227a <vfprintf+0x5be>
    2278:	0f 5f       	subi	r16, 0xFF	; 255
    227a:	33 fd       	sbrc	r19, 3
    227c:	12 c0       	rjmp	.+36     	; 0x22a2 <vfprintf+0x5e6>
    227e:	30 ff       	sbrs	r19, 0
    2280:	06 c0       	rjmp	.+12     	; 0x228e <vfprintf+0x5d2>
    2282:	1e 2d       	mov	r17, r14
    2284:	0f 15       	cp	r16, r15
    2286:	18 f4       	brcc	.+6      	; 0x228e <vfprintf+0x5d2>
    2288:	1f 0d       	add	r17, r15
    228a:	10 1b       	sub	r17, r16
    228c:	0f 2d       	mov	r16, r15
    228e:	0f 15       	cp	r16, r15
    2290:	60 f4       	brcc	.+24     	; 0x22aa <vfprintf+0x5ee>
    2292:	b6 01       	movw	r22, r12
    2294:	80 e2       	ldi	r24, 0x20	; 32
    2296:	90 e0       	ldi	r25, 0x00	; 0
    2298:	3b 8b       	std	Y+19, r19	; 0x13
    229a:	8f d1       	rcall	.+798    	; 0x25ba <fputc>
    229c:	0f 5f       	subi	r16, 0xFF	; 255
    229e:	3b 89       	ldd	r19, Y+19	; 0x13
    22a0:	f6 cf       	rjmp	.-20     	; 0x228e <vfprintf+0x5d2>
    22a2:	0f 15       	cp	r16, r15
    22a4:	10 f4       	brcc	.+4      	; 0x22aa <vfprintf+0x5ee>
    22a6:	f0 1a       	sub	r15, r16
    22a8:	01 c0       	rjmp	.+2      	; 0x22ac <vfprintf+0x5f0>
    22aa:	f1 2c       	mov	r15, r1
    22ac:	34 ff       	sbrs	r19, 4
    22ae:	11 c0       	rjmp	.+34     	; 0x22d2 <vfprintf+0x616>
    22b0:	b6 01       	movw	r22, r12
    22b2:	80 e3       	ldi	r24, 0x30	; 48
    22b4:	90 e0       	ldi	r25, 0x00	; 0
    22b6:	3b 8b       	std	Y+19, r19	; 0x13
    22b8:	80 d1       	rcall	.+768    	; 0x25ba <fputc>
    22ba:	3b 89       	ldd	r19, Y+19	; 0x13
    22bc:	32 ff       	sbrs	r19, 2
    22be:	16 c0       	rjmp	.+44     	; 0x22ec <vfprintf+0x630>
    22c0:	31 fd       	sbrc	r19, 1
    22c2:	03 c0       	rjmp	.+6      	; 0x22ca <vfprintf+0x60e>
    22c4:	88 e7       	ldi	r24, 0x78	; 120
    22c6:	90 e0       	ldi	r25, 0x00	; 0
    22c8:	02 c0       	rjmp	.+4      	; 0x22ce <vfprintf+0x612>
    22ca:	88 e5       	ldi	r24, 0x58	; 88
    22cc:	90 e0       	ldi	r25, 0x00	; 0
    22ce:	b6 01       	movw	r22, r12
    22d0:	0c c0       	rjmp	.+24     	; 0x22ea <vfprintf+0x62e>
    22d2:	83 2f       	mov	r24, r19
    22d4:	86 78       	andi	r24, 0x86	; 134
    22d6:	51 f0       	breq	.+20     	; 0x22ec <vfprintf+0x630>
    22d8:	31 ff       	sbrs	r19, 1
    22da:	02 c0       	rjmp	.+4      	; 0x22e0 <vfprintf+0x624>
    22dc:	8b e2       	ldi	r24, 0x2B	; 43
    22de:	01 c0       	rjmp	.+2      	; 0x22e2 <vfprintf+0x626>
    22e0:	80 e2       	ldi	r24, 0x20	; 32
    22e2:	37 fd       	sbrc	r19, 7
    22e4:	8d e2       	ldi	r24, 0x2D	; 45
    22e6:	b6 01       	movw	r22, r12
    22e8:	90 e0       	ldi	r25, 0x00	; 0
    22ea:	67 d1       	rcall	.+718    	; 0x25ba <fputc>
    22ec:	e1 16       	cp	r14, r17
    22ee:	30 f4       	brcc	.+12     	; 0x22fc <vfprintf+0x640>
    22f0:	b6 01       	movw	r22, r12
    22f2:	80 e3       	ldi	r24, 0x30	; 48
    22f4:	90 e0       	ldi	r25, 0x00	; 0
    22f6:	61 d1       	rcall	.+706    	; 0x25ba <fputc>
    22f8:	11 50       	subi	r17, 0x01	; 1
    22fa:	f8 cf       	rjmp	.-16     	; 0x22ec <vfprintf+0x630>
    22fc:	ea 94       	dec	r14
    22fe:	f3 01       	movw	r30, r6
    2300:	ee 0d       	add	r30, r14
    2302:	f1 1d       	adc	r31, r1
    2304:	80 81       	ld	r24, Z
    2306:	b6 01       	movw	r22, r12
    2308:	90 e0       	ldi	r25, 0x00	; 0
    230a:	57 d1       	rcall	.+686    	; 0x25ba <fputc>
    230c:	e1 10       	cpse	r14, r1
    230e:	f6 cf       	rjmp	.-20     	; 0x22fc <vfprintf+0x640>
    2310:	14 c0       	rjmp	.+40     	; 0x233a <vfprintf+0x67e>
    2312:	f4 e0       	ldi	r31, 0x04	; 4
    2314:	ff 15       	cp	r31, r15
    2316:	48 f5       	brcc	.+82     	; 0x236a <vfprintf+0x6ae>
    2318:	84 e0       	ldi	r24, 0x04	; 4
    231a:	f8 1a       	sub	r15, r24
    231c:	33 fe       	sbrs	r3, 3
    231e:	1d c0       	rjmp	.+58     	; 0x235a <vfprintf+0x69e>
    2320:	21 10       	cpse	r2, r1
    2322:	24 c0       	rjmp	.+72     	; 0x236c <vfprintf+0x6b0>
    2324:	03 ff       	sbrs	r16, 3
    2326:	27 c0       	rjmp	.+78     	; 0x2376 <vfprintf+0x6ba>
    2328:	0c e8       	ldi	r16, 0x8C	; 140
    232a:	10 e0       	ldi	r17, 0x00	; 0
    232c:	f3 2d       	mov	r31, r3
    232e:	f0 71       	andi	r31, 0x10	; 16
    2330:	3f 2e       	mov	r3, r31
    2332:	f8 01       	movw	r30, r16
    2334:	84 91       	lpm	r24, Z
    2336:	81 11       	cpse	r24, r1
    2338:	21 c0       	rjmp	.+66     	; 0x237c <vfprintf+0x6c0>
    233a:	ff 20       	and	r15, r15
    233c:	09 f4       	brne	.+2      	; 0x2340 <vfprintf+0x684>
    233e:	fd cc       	rjmp	.-1542   	; 0x1d3a <vfprintf+0x7e>
    2340:	b6 01       	movw	r22, r12
    2342:	80 e2       	ldi	r24, 0x20	; 32
    2344:	90 e0       	ldi	r25, 0x00	; 0
    2346:	39 d1       	rcall	.+626    	; 0x25ba <fputc>
    2348:	fa 94       	dec	r15
    234a:	f7 cf       	rjmp	.-18     	; 0x233a <vfprintf+0x67e>
    234c:	f6 01       	movw	r30, r12
    234e:	86 81       	ldd	r24, Z+6	; 0x06
    2350:	97 81       	ldd	r25, Z+7	; 0x07
    2352:	23 c0       	rjmp	.+70     	; 0x239a <vfprintf+0x6de>
    2354:	8f ef       	ldi	r24, 0xFF	; 255
    2356:	9f ef       	ldi	r25, 0xFF	; 255
    2358:	20 c0       	rjmp	.+64     	; 0x239a <vfprintf+0x6de>
    235a:	b6 01       	movw	r22, r12
    235c:	80 e2       	ldi	r24, 0x20	; 32
    235e:	90 e0       	ldi	r25, 0x00	; 0
    2360:	2c d1       	rcall	.+600    	; 0x25ba <fputc>
    2362:	fa 94       	dec	r15
    2364:	f1 10       	cpse	r15, r1
    2366:	f9 cf       	rjmp	.-14     	; 0x235a <vfprintf+0x69e>
    2368:	db cf       	rjmp	.-74     	; 0x2320 <vfprintf+0x664>
    236a:	f1 2c       	mov	r15, r1
    236c:	b6 01       	movw	r22, r12
    236e:	82 2d       	mov	r24, r2
    2370:	90 e0       	ldi	r25, 0x00	; 0
    2372:	23 d1       	rcall	.+582    	; 0x25ba <fputc>
    2374:	d7 cf       	rjmp	.-82     	; 0x2324 <vfprintf+0x668>
    2376:	00 e9       	ldi	r16, 0x90	; 144
    2378:	10 e0       	ldi	r17, 0x00	; 0
    237a:	d8 cf       	rjmp	.-80     	; 0x232c <vfprintf+0x670>
    237c:	31 10       	cpse	r3, r1
    237e:	80 52       	subi	r24, 0x20	; 32
    2380:	b6 01       	movw	r22, r12
    2382:	90 e0       	ldi	r25, 0x00	; 0
    2384:	1a d1       	rcall	.+564    	; 0x25ba <fputc>
    2386:	0f 5f       	subi	r16, 0xFF	; 255
    2388:	1f 4f       	sbci	r17, 0xFF	; 255
    238a:	d3 cf       	rjmp	.-90     	; 0x2332 <vfprintf+0x676>
    238c:	23 e0       	ldi	r18, 0x03	; 3
    238e:	2f 15       	cp	r18, r15
    2390:	10 f4       	brcc	.+4      	; 0x2396 <vfprintf+0x6da>
    2392:	83 e0       	ldi	r24, 0x03	; 3
    2394:	c2 cf       	rjmp	.-124    	; 0x231a <vfprintf+0x65e>
    2396:	f1 2c       	mov	r15, r1
    2398:	c5 cf       	rjmp	.-118    	; 0x2324 <vfprintf+0x668>
    239a:	63 96       	adiw	r28, 0x13	; 19
    239c:	0f b6       	in	r0, 0x3f	; 63
    239e:	f8 94       	cli
    23a0:	de bf       	out	0x3e, r29	; 62
    23a2:	0f be       	out	0x3f, r0	; 63
    23a4:	cd bf       	out	0x3d, r28	; 61
    23a6:	df 91       	pop	r29
    23a8:	cf 91       	pop	r28
    23aa:	1f 91       	pop	r17
    23ac:	0f 91       	pop	r16
    23ae:	ff 90       	pop	r15
    23b0:	ef 90       	pop	r14
    23b2:	df 90       	pop	r13
    23b4:	cf 90       	pop	r12
    23b6:	bf 90       	pop	r11
    23b8:	af 90       	pop	r10
    23ba:	9f 90       	pop	r9
    23bc:	8f 90       	pop	r8
    23be:	7f 90       	pop	r7
    23c0:	6f 90       	pop	r6
    23c2:	5f 90       	pop	r5
    23c4:	4f 90       	pop	r4
    23c6:	3f 90       	pop	r3
    23c8:	2f 90       	pop	r2
    23ca:	08 95       	ret

000023cc <__ftoa_engine>:
    23cc:	28 30       	cpi	r18, 0x08	; 8
    23ce:	08 f0       	brcs	.+2      	; 0x23d2 <__ftoa_engine+0x6>
    23d0:	27 e0       	ldi	r18, 0x07	; 7
    23d2:	33 27       	eor	r19, r19
    23d4:	da 01       	movw	r26, r20
    23d6:	99 0f       	add	r25, r25
    23d8:	31 1d       	adc	r19, r1
    23da:	87 fd       	sbrc	r24, 7
    23dc:	91 60       	ori	r25, 0x01	; 1
    23de:	00 96       	adiw	r24, 0x00	; 0
    23e0:	61 05       	cpc	r22, r1
    23e2:	71 05       	cpc	r23, r1
    23e4:	39 f4       	brne	.+14     	; 0x23f4 <__ftoa_engine+0x28>
    23e6:	32 60       	ori	r19, 0x02	; 2
    23e8:	2e 5f       	subi	r18, 0xFE	; 254
    23ea:	3d 93       	st	X+, r19
    23ec:	30 e3       	ldi	r19, 0x30	; 48
    23ee:	2a 95       	dec	r18
    23f0:	e1 f7       	brne	.-8      	; 0x23ea <__ftoa_engine+0x1e>
    23f2:	08 95       	ret
    23f4:	9f 3f       	cpi	r25, 0xFF	; 255
    23f6:	30 f0       	brcs	.+12     	; 0x2404 <__ftoa_engine+0x38>
    23f8:	80 38       	cpi	r24, 0x80	; 128
    23fa:	71 05       	cpc	r23, r1
    23fc:	61 05       	cpc	r22, r1
    23fe:	09 f0       	breq	.+2      	; 0x2402 <__ftoa_engine+0x36>
    2400:	3c 5f       	subi	r19, 0xFC	; 252
    2402:	3c 5f       	subi	r19, 0xFC	; 252
    2404:	3d 93       	st	X+, r19
    2406:	91 30       	cpi	r25, 0x01	; 1
    2408:	08 f0       	brcs	.+2      	; 0x240c <__ftoa_engine+0x40>
    240a:	80 68       	ori	r24, 0x80	; 128
    240c:	91 1d       	adc	r25, r1
    240e:	df 93       	push	r29
    2410:	cf 93       	push	r28
    2412:	1f 93       	push	r17
    2414:	0f 93       	push	r16
    2416:	ff 92       	push	r15
    2418:	ef 92       	push	r14
    241a:	19 2f       	mov	r17, r25
    241c:	98 7f       	andi	r25, 0xF8	; 248
    241e:	96 95       	lsr	r25
    2420:	e9 2f       	mov	r30, r25
    2422:	96 95       	lsr	r25
    2424:	96 95       	lsr	r25
    2426:	e9 0f       	add	r30, r25
    2428:	ff 27       	eor	r31, r31
    242a:	e2 51       	subi	r30, 0x12	; 18
    242c:	ff 4f       	sbci	r31, 0xFF	; 255
    242e:	99 27       	eor	r25, r25
    2430:	33 27       	eor	r19, r19
    2432:	ee 24       	eor	r14, r14
    2434:	ff 24       	eor	r15, r15
    2436:	a7 01       	movw	r20, r14
    2438:	e7 01       	movw	r28, r14
    243a:	05 90       	lpm	r0, Z+
    243c:	08 94       	sec
    243e:	07 94       	ror	r0
    2440:	28 f4       	brcc	.+10     	; 0x244c <__ftoa_engine+0x80>
    2442:	36 0f       	add	r19, r22
    2444:	e7 1e       	adc	r14, r23
    2446:	f8 1e       	adc	r15, r24
    2448:	49 1f       	adc	r20, r25
    244a:	51 1d       	adc	r21, r1
    244c:	66 0f       	add	r22, r22
    244e:	77 1f       	adc	r23, r23
    2450:	88 1f       	adc	r24, r24
    2452:	99 1f       	adc	r25, r25
    2454:	06 94       	lsr	r0
    2456:	a1 f7       	brne	.-24     	; 0x2440 <__ftoa_engine+0x74>
    2458:	05 90       	lpm	r0, Z+
    245a:	07 94       	ror	r0
    245c:	28 f4       	brcc	.+10     	; 0x2468 <__ftoa_engine+0x9c>
    245e:	e7 0e       	add	r14, r23
    2460:	f8 1e       	adc	r15, r24
    2462:	49 1f       	adc	r20, r25
    2464:	56 1f       	adc	r21, r22
    2466:	c1 1d       	adc	r28, r1
    2468:	77 0f       	add	r23, r23
    246a:	88 1f       	adc	r24, r24
    246c:	99 1f       	adc	r25, r25
    246e:	66 1f       	adc	r22, r22
    2470:	06 94       	lsr	r0
    2472:	a1 f7       	brne	.-24     	; 0x245c <__ftoa_engine+0x90>
    2474:	05 90       	lpm	r0, Z+
    2476:	07 94       	ror	r0
    2478:	28 f4       	brcc	.+10     	; 0x2484 <__ftoa_engine+0xb8>
    247a:	f8 0e       	add	r15, r24
    247c:	49 1f       	adc	r20, r25
    247e:	56 1f       	adc	r21, r22
    2480:	c7 1f       	adc	r28, r23
    2482:	d1 1d       	adc	r29, r1
    2484:	88 0f       	add	r24, r24
    2486:	99 1f       	adc	r25, r25
    2488:	66 1f       	adc	r22, r22
    248a:	77 1f       	adc	r23, r23
    248c:	06 94       	lsr	r0
    248e:	a1 f7       	brne	.-24     	; 0x2478 <__ftoa_engine+0xac>
    2490:	05 90       	lpm	r0, Z+
    2492:	07 94       	ror	r0
    2494:	20 f4       	brcc	.+8      	; 0x249e <__ftoa_engine+0xd2>
    2496:	49 0f       	add	r20, r25
    2498:	56 1f       	adc	r21, r22
    249a:	c7 1f       	adc	r28, r23
    249c:	d8 1f       	adc	r29, r24
    249e:	99 0f       	add	r25, r25
    24a0:	66 1f       	adc	r22, r22
    24a2:	77 1f       	adc	r23, r23
    24a4:	88 1f       	adc	r24, r24
    24a6:	06 94       	lsr	r0
    24a8:	a9 f7       	brne	.-22     	; 0x2494 <__ftoa_engine+0xc8>
    24aa:	84 91       	lpm	r24, Z
    24ac:	10 95       	com	r17
    24ae:	17 70       	andi	r17, 0x07	; 7
    24b0:	41 f0       	breq	.+16     	; 0x24c2 <__ftoa_engine+0xf6>
    24b2:	d6 95       	lsr	r29
    24b4:	c7 95       	ror	r28
    24b6:	57 95       	ror	r21
    24b8:	47 95       	ror	r20
    24ba:	f7 94       	ror	r15
    24bc:	e7 94       	ror	r14
    24be:	1a 95       	dec	r17
    24c0:	c1 f7       	brne	.-16     	; 0x24b2 <__ftoa_engine+0xe6>
    24c2:	e4 e9       	ldi	r30, 0x94	; 148
    24c4:	f0 e0       	ldi	r31, 0x00	; 0
    24c6:	68 94       	set
    24c8:	15 90       	lpm	r1, Z+
    24ca:	15 91       	lpm	r17, Z+
    24cc:	35 91       	lpm	r19, Z+
    24ce:	65 91       	lpm	r22, Z+
    24d0:	95 91       	lpm	r25, Z+
    24d2:	05 90       	lpm	r0, Z+
    24d4:	7f e2       	ldi	r23, 0x2F	; 47
    24d6:	73 95       	inc	r23
    24d8:	e1 18       	sub	r14, r1
    24da:	f1 0a       	sbc	r15, r17
    24dc:	43 0b       	sbc	r20, r19
    24de:	56 0b       	sbc	r21, r22
    24e0:	c9 0b       	sbc	r28, r25
    24e2:	d0 09       	sbc	r29, r0
    24e4:	c0 f7       	brcc	.-16     	; 0x24d6 <__ftoa_engine+0x10a>
    24e6:	e1 0c       	add	r14, r1
    24e8:	f1 1e       	adc	r15, r17
    24ea:	43 1f       	adc	r20, r19
    24ec:	56 1f       	adc	r21, r22
    24ee:	c9 1f       	adc	r28, r25
    24f0:	d0 1d       	adc	r29, r0
    24f2:	7e f4       	brtc	.+30     	; 0x2512 <__ftoa_engine+0x146>
    24f4:	70 33       	cpi	r23, 0x30	; 48
    24f6:	11 f4       	brne	.+4      	; 0x24fc <__ftoa_engine+0x130>
    24f8:	8a 95       	dec	r24
    24fa:	e6 cf       	rjmp	.-52     	; 0x24c8 <__ftoa_engine+0xfc>
    24fc:	e8 94       	clt
    24fe:	01 50       	subi	r16, 0x01	; 1
    2500:	30 f0       	brcs	.+12     	; 0x250e <__ftoa_engine+0x142>
    2502:	08 0f       	add	r16, r24
    2504:	0a f4       	brpl	.+2      	; 0x2508 <__ftoa_engine+0x13c>
    2506:	00 27       	eor	r16, r16
    2508:	02 17       	cp	r16, r18
    250a:	08 f4       	brcc	.+2      	; 0x250e <__ftoa_engine+0x142>
    250c:	20 2f       	mov	r18, r16
    250e:	23 95       	inc	r18
    2510:	02 2f       	mov	r16, r18
    2512:	7a 33       	cpi	r23, 0x3A	; 58
    2514:	28 f0       	brcs	.+10     	; 0x2520 <__ftoa_engine+0x154>
    2516:	79 e3       	ldi	r23, 0x39	; 57
    2518:	7d 93       	st	X+, r23
    251a:	2a 95       	dec	r18
    251c:	e9 f7       	brne	.-6      	; 0x2518 <__ftoa_engine+0x14c>
    251e:	10 c0       	rjmp	.+32     	; 0x2540 <__ftoa_engine+0x174>
    2520:	7d 93       	st	X+, r23
    2522:	2a 95       	dec	r18
    2524:	89 f6       	brne	.-94     	; 0x24c8 <__ftoa_engine+0xfc>
    2526:	06 94       	lsr	r0
    2528:	97 95       	ror	r25
    252a:	67 95       	ror	r22
    252c:	37 95       	ror	r19
    252e:	17 95       	ror	r17
    2530:	17 94       	ror	r1
    2532:	e1 18       	sub	r14, r1
    2534:	f1 0a       	sbc	r15, r17
    2536:	43 0b       	sbc	r20, r19
    2538:	56 0b       	sbc	r21, r22
    253a:	c9 0b       	sbc	r28, r25
    253c:	d0 09       	sbc	r29, r0
    253e:	98 f0       	brcs	.+38     	; 0x2566 <__ftoa_engine+0x19a>
    2540:	23 95       	inc	r18
    2542:	7e 91       	ld	r23, -X
    2544:	73 95       	inc	r23
    2546:	7a 33       	cpi	r23, 0x3A	; 58
    2548:	08 f0       	brcs	.+2      	; 0x254c <__ftoa_engine+0x180>
    254a:	70 e3       	ldi	r23, 0x30	; 48
    254c:	7c 93       	st	X, r23
    254e:	20 13       	cpse	r18, r16
    2550:	b8 f7       	brcc	.-18     	; 0x2540 <__ftoa_engine+0x174>
    2552:	7e 91       	ld	r23, -X
    2554:	70 61       	ori	r23, 0x10	; 16
    2556:	7d 93       	st	X+, r23
    2558:	30 f0       	brcs	.+12     	; 0x2566 <__ftoa_engine+0x19a>
    255a:	83 95       	inc	r24
    255c:	71 e3       	ldi	r23, 0x31	; 49
    255e:	7d 93       	st	X+, r23
    2560:	70 e3       	ldi	r23, 0x30	; 48
    2562:	2a 95       	dec	r18
    2564:	e1 f7       	brne	.-8      	; 0x255e <__ftoa_engine+0x192>
    2566:	11 24       	eor	r1, r1
    2568:	ef 90       	pop	r14
    256a:	ff 90       	pop	r15
    256c:	0f 91       	pop	r16
    256e:	1f 91       	pop	r17
    2570:	cf 91       	pop	r28
    2572:	df 91       	pop	r29
    2574:	99 27       	eor	r25, r25
    2576:	87 fd       	sbrc	r24, 7
    2578:	90 95       	com	r25
    257a:	08 95       	ret

0000257c <strnlen_P>:
    257c:	fc 01       	movw	r30, r24
    257e:	05 90       	lpm	r0, Z+
    2580:	61 50       	subi	r22, 0x01	; 1
    2582:	70 40       	sbci	r23, 0x00	; 0
    2584:	01 10       	cpse	r0, r1
    2586:	d8 f7       	brcc	.-10     	; 0x257e <strnlen_P+0x2>
    2588:	80 95       	com	r24
    258a:	90 95       	com	r25
    258c:	8e 0f       	add	r24, r30
    258e:	9f 1f       	adc	r25, r31
    2590:	08 95       	ret

00002592 <memcpy>:
    2592:	fb 01       	movw	r30, r22
    2594:	dc 01       	movw	r26, r24
    2596:	02 c0       	rjmp	.+4      	; 0x259c <memcpy+0xa>
    2598:	01 90       	ld	r0, Z+
    259a:	0d 92       	st	X+, r0
    259c:	41 50       	subi	r20, 0x01	; 1
    259e:	50 40       	sbci	r21, 0x00	; 0
    25a0:	d8 f7       	brcc	.-10     	; 0x2598 <memcpy+0x6>
    25a2:	08 95       	ret

000025a4 <strnlen>:
    25a4:	fc 01       	movw	r30, r24
    25a6:	61 50       	subi	r22, 0x01	; 1
    25a8:	70 40       	sbci	r23, 0x00	; 0
    25aa:	01 90       	ld	r0, Z+
    25ac:	01 10       	cpse	r0, r1
    25ae:	d8 f7       	brcc	.-10     	; 0x25a6 <strnlen+0x2>
    25b0:	80 95       	com	r24
    25b2:	90 95       	com	r25
    25b4:	8e 0f       	add	r24, r30
    25b6:	9f 1f       	adc	r25, r31
    25b8:	08 95       	ret

000025ba <fputc>:
    25ba:	0f 93       	push	r16
    25bc:	1f 93       	push	r17
    25be:	cf 93       	push	r28
    25c0:	df 93       	push	r29
    25c2:	fb 01       	movw	r30, r22
    25c4:	23 81       	ldd	r18, Z+3	; 0x03
    25c6:	21 fd       	sbrc	r18, 1
    25c8:	03 c0       	rjmp	.+6      	; 0x25d0 <fputc+0x16>
    25ca:	8f ef       	ldi	r24, 0xFF	; 255
    25cc:	9f ef       	ldi	r25, 0xFF	; 255
    25ce:	28 c0       	rjmp	.+80     	; 0x2620 <fputc+0x66>
    25d0:	22 ff       	sbrs	r18, 2
    25d2:	16 c0       	rjmp	.+44     	; 0x2600 <fputc+0x46>
    25d4:	46 81       	ldd	r20, Z+6	; 0x06
    25d6:	57 81       	ldd	r21, Z+7	; 0x07
    25d8:	24 81       	ldd	r18, Z+4	; 0x04
    25da:	35 81       	ldd	r19, Z+5	; 0x05
    25dc:	42 17       	cp	r20, r18
    25de:	53 07       	cpc	r21, r19
    25e0:	44 f4       	brge	.+16     	; 0x25f2 <fputc+0x38>
    25e2:	a0 81       	ld	r26, Z
    25e4:	b1 81       	ldd	r27, Z+1	; 0x01
    25e6:	9d 01       	movw	r18, r26
    25e8:	2f 5f       	subi	r18, 0xFF	; 255
    25ea:	3f 4f       	sbci	r19, 0xFF	; 255
    25ec:	31 83       	std	Z+1, r19	; 0x01
    25ee:	20 83       	st	Z, r18
    25f0:	8c 93       	st	X, r24
    25f2:	26 81       	ldd	r18, Z+6	; 0x06
    25f4:	37 81       	ldd	r19, Z+7	; 0x07
    25f6:	2f 5f       	subi	r18, 0xFF	; 255
    25f8:	3f 4f       	sbci	r19, 0xFF	; 255
    25fa:	37 83       	std	Z+7, r19	; 0x07
    25fc:	26 83       	std	Z+6, r18	; 0x06
    25fe:	10 c0       	rjmp	.+32     	; 0x2620 <fputc+0x66>
    2600:	eb 01       	movw	r28, r22
    2602:	09 2f       	mov	r16, r25
    2604:	18 2f       	mov	r17, r24
    2606:	00 84       	ldd	r0, Z+8	; 0x08
    2608:	f1 85       	ldd	r31, Z+9	; 0x09
    260a:	e0 2d       	mov	r30, r0
    260c:	09 95       	icall
    260e:	89 2b       	or	r24, r25
    2610:	e1 f6       	brne	.-72     	; 0x25ca <fputc+0x10>
    2612:	8e 81       	ldd	r24, Y+6	; 0x06
    2614:	9f 81       	ldd	r25, Y+7	; 0x07
    2616:	01 96       	adiw	r24, 0x01	; 1
    2618:	9f 83       	std	Y+7, r25	; 0x07
    261a:	8e 83       	std	Y+6, r24	; 0x06
    261c:	81 2f       	mov	r24, r17
    261e:	90 2f       	mov	r25, r16
    2620:	df 91       	pop	r29
    2622:	cf 91       	pop	r28
    2624:	1f 91       	pop	r17
    2626:	0f 91       	pop	r16
    2628:	08 95       	ret

0000262a <__ultoa_invert>:
    262a:	fa 01       	movw	r30, r20
    262c:	aa 27       	eor	r26, r26
    262e:	28 30       	cpi	r18, 0x08	; 8
    2630:	51 f1       	breq	.+84     	; 0x2686 <__ultoa_invert+0x5c>
    2632:	20 31       	cpi	r18, 0x10	; 16
    2634:	81 f1       	breq	.+96     	; 0x2696 <__ultoa_invert+0x6c>
    2636:	e8 94       	clt
    2638:	6f 93       	push	r22
    263a:	6e 7f       	andi	r22, 0xFE	; 254
    263c:	6e 5f       	subi	r22, 0xFE	; 254
    263e:	7f 4f       	sbci	r23, 0xFF	; 255
    2640:	8f 4f       	sbci	r24, 0xFF	; 255
    2642:	9f 4f       	sbci	r25, 0xFF	; 255
    2644:	af 4f       	sbci	r26, 0xFF	; 255
    2646:	b1 e0       	ldi	r27, 0x01	; 1
    2648:	3e d0       	rcall	.+124    	; 0x26c6 <__ultoa_invert+0x9c>
    264a:	b4 e0       	ldi	r27, 0x04	; 4
    264c:	3c d0       	rcall	.+120    	; 0x26c6 <__ultoa_invert+0x9c>
    264e:	67 0f       	add	r22, r23
    2650:	78 1f       	adc	r23, r24
    2652:	89 1f       	adc	r24, r25
    2654:	9a 1f       	adc	r25, r26
    2656:	a1 1d       	adc	r26, r1
    2658:	68 0f       	add	r22, r24
    265a:	79 1f       	adc	r23, r25
    265c:	8a 1f       	adc	r24, r26
    265e:	91 1d       	adc	r25, r1
    2660:	a1 1d       	adc	r26, r1
    2662:	6a 0f       	add	r22, r26
    2664:	71 1d       	adc	r23, r1
    2666:	81 1d       	adc	r24, r1
    2668:	91 1d       	adc	r25, r1
    266a:	a1 1d       	adc	r26, r1
    266c:	20 d0       	rcall	.+64     	; 0x26ae <__ultoa_invert+0x84>
    266e:	09 f4       	brne	.+2      	; 0x2672 <__ultoa_invert+0x48>
    2670:	68 94       	set
    2672:	3f 91       	pop	r19
    2674:	2a e0       	ldi	r18, 0x0A	; 10
    2676:	26 9f       	mul	r18, r22
    2678:	11 24       	eor	r1, r1
    267a:	30 19       	sub	r19, r0
    267c:	30 5d       	subi	r19, 0xD0	; 208
    267e:	31 93       	st	Z+, r19
    2680:	de f6       	brtc	.-74     	; 0x2638 <__ultoa_invert+0xe>
    2682:	cf 01       	movw	r24, r30
    2684:	08 95       	ret
    2686:	46 2f       	mov	r20, r22
    2688:	47 70       	andi	r20, 0x07	; 7
    268a:	40 5d       	subi	r20, 0xD0	; 208
    268c:	41 93       	st	Z+, r20
    268e:	b3 e0       	ldi	r27, 0x03	; 3
    2690:	0f d0       	rcall	.+30     	; 0x26b0 <__ultoa_invert+0x86>
    2692:	c9 f7       	brne	.-14     	; 0x2686 <__ultoa_invert+0x5c>
    2694:	f6 cf       	rjmp	.-20     	; 0x2682 <__ultoa_invert+0x58>
    2696:	46 2f       	mov	r20, r22
    2698:	4f 70       	andi	r20, 0x0F	; 15
    269a:	40 5d       	subi	r20, 0xD0	; 208
    269c:	4a 33       	cpi	r20, 0x3A	; 58
    269e:	18 f0       	brcs	.+6      	; 0x26a6 <__ultoa_invert+0x7c>
    26a0:	49 5d       	subi	r20, 0xD9	; 217
    26a2:	31 fd       	sbrc	r19, 1
    26a4:	40 52       	subi	r20, 0x20	; 32
    26a6:	41 93       	st	Z+, r20
    26a8:	02 d0       	rcall	.+4      	; 0x26ae <__ultoa_invert+0x84>
    26aa:	a9 f7       	brne	.-22     	; 0x2696 <__ultoa_invert+0x6c>
    26ac:	ea cf       	rjmp	.-44     	; 0x2682 <__ultoa_invert+0x58>
    26ae:	b4 e0       	ldi	r27, 0x04	; 4
    26b0:	a6 95       	lsr	r26
    26b2:	97 95       	ror	r25
    26b4:	87 95       	ror	r24
    26b6:	77 95       	ror	r23
    26b8:	67 95       	ror	r22
    26ba:	ba 95       	dec	r27
    26bc:	c9 f7       	brne	.-14     	; 0x26b0 <__ultoa_invert+0x86>
    26be:	00 97       	sbiw	r24, 0x00	; 0
    26c0:	61 05       	cpc	r22, r1
    26c2:	71 05       	cpc	r23, r1
    26c4:	08 95       	ret
    26c6:	9b 01       	movw	r18, r22
    26c8:	ac 01       	movw	r20, r24
    26ca:	0a 2e       	mov	r0, r26
    26cc:	06 94       	lsr	r0
    26ce:	57 95       	ror	r21
    26d0:	47 95       	ror	r20
    26d2:	37 95       	ror	r19
    26d4:	27 95       	ror	r18
    26d6:	ba 95       	dec	r27
    26d8:	c9 f7       	brne	.-14     	; 0x26cc <__ultoa_invert+0xa2>
    26da:	62 0f       	add	r22, r18
    26dc:	73 1f       	adc	r23, r19
    26de:	84 1f       	adc	r24, r20
    26e0:	95 1f       	adc	r25, r21
    26e2:	a0 1d       	adc	r26, r0
    26e4:	08 95       	ret

000026e6 <_exit>:
    26e6:	f8 94       	cli

000026e8 <__stop_program>:
    26e8:	ff cf       	rjmp	.-2      	; 0x26e8 <__stop_program>
