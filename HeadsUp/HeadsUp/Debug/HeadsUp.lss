
HeadsUp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000022  00800100  0000131c  00001390  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000131c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  000013b2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001410  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000120  00000000  00000000  00001450  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000020d9  00000000  00000000  00001570  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000777  00000000  00000000  00003649  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000951  00000000  00000000  00003dc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000368  00000000  00000000  00004714  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000720  00000000  00000000  00004a7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000103d  00000000  00000000  0000519c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000f0  00000000  00000000  000061d9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	c6 c0       	rjmp	.+396    	; 0x18e <__ctors_end>
       2:	00 00       	nop
       4:	e2 c0       	rjmp	.+452    	; 0x1ca <__bad_interrupt>
       6:	00 00       	nop
       8:	e0 c0       	rjmp	.+448    	; 0x1ca <__bad_interrupt>
       a:	00 00       	nop
       c:	de c0       	rjmp	.+444    	; 0x1ca <__bad_interrupt>
       e:	00 00       	nop
      10:	dc c0       	rjmp	.+440    	; 0x1ca <__bad_interrupt>
      12:	00 00       	nop
      14:	da c0       	rjmp	.+436    	; 0x1ca <__bad_interrupt>
      16:	00 00       	nop
      18:	d8 c0       	rjmp	.+432    	; 0x1ca <__bad_interrupt>
      1a:	00 00       	nop
      1c:	d6 c0       	rjmp	.+428    	; 0x1ca <__bad_interrupt>
      1e:	00 00       	nop
      20:	d4 c0       	rjmp	.+424    	; 0x1ca <__bad_interrupt>
      22:	00 00       	nop
      24:	d2 c0       	rjmp	.+420    	; 0x1ca <__bad_interrupt>
      26:	00 00       	nop
      28:	d0 c0       	rjmp	.+416    	; 0x1ca <__bad_interrupt>
      2a:	00 00       	nop
      2c:	ce c0       	rjmp	.+412    	; 0x1ca <__bad_interrupt>
      2e:	00 00       	nop
      30:	cc c0       	rjmp	.+408    	; 0x1ca <__bad_interrupt>
      32:	00 00       	nop
      34:	ca c0       	rjmp	.+404    	; 0x1ca <__bad_interrupt>
      36:	00 00       	nop
      38:	c8 c0       	rjmp	.+400    	; 0x1ca <__bad_interrupt>
      3a:	00 00       	nop
      3c:	c6 c0       	rjmp	.+396    	; 0x1ca <__bad_interrupt>
      3e:	00 00       	nop
      40:	c4 c0       	rjmp	.+392    	; 0x1ca <__bad_interrupt>
      42:	00 00       	nop
      44:	c2 c0       	rjmp	.+388    	; 0x1ca <__bad_interrupt>
      46:	00 00       	nop
      48:	c0 c0       	rjmp	.+384    	; 0x1ca <__bad_interrupt>
      4a:	00 00       	nop
      4c:	be c0       	rjmp	.+380    	; 0x1ca <__bad_interrupt>
      4e:	00 00       	nop
      50:	bc c0       	rjmp	.+376    	; 0x1ca <__bad_interrupt>
      52:	00 00       	nop
      54:	ba c0       	rjmp	.+372    	; 0x1ca <__bad_interrupt>
      56:	00 00       	nop
      58:	b8 c0       	rjmp	.+368    	; 0x1ca <__bad_interrupt>
      5a:	00 00       	nop
      5c:	b6 c0       	rjmp	.+364    	; 0x1ca <__bad_interrupt>
      5e:	00 00       	nop
      60:	b4 c0       	rjmp	.+360    	; 0x1ca <__bad_interrupt>
      62:	00 00       	nop
      64:	b2 c0       	rjmp	.+356    	; 0x1ca <__bad_interrupt>
      66:	00 00       	nop
      68:	b0 c0       	rjmp	.+352    	; 0x1ca <__bad_interrupt>
      6a:	00 00       	nop
      6c:	ae c0       	rjmp	.+348    	; 0x1ca <__bad_interrupt>
      6e:	00 00       	nop
      70:	ac c0       	rjmp	.+344    	; 0x1ca <__bad_interrupt>
      72:	00 00       	nop
      74:	aa c0       	rjmp	.+340    	; 0x1ca <__bad_interrupt>
      76:	00 00       	nop
      78:	a8 c0       	rjmp	.+336    	; 0x1ca <__bad_interrupt>
      7a:	00 00       	nop
      7c:	a6 c0       	rjmp	.+332    	; 0x1ca <__bad_interrupt>
      7e:	00 00       	nop
      80:	a4 c0       	rjmp	.+328    	; 0x1ca <__bad_interrupt>
      82:	00 00       	nop
      84:	a2 c0       	rjmp	.+324    	; 0x1ca <__bad_interrupt>
      86:	00 00       	nop
      88:	a0 c0       	rjmp	.+320    	; 0x1ca <__bad_interrupt>
	...

0000008c <__trampolines_end>:
      8c:	6e 61       	ori	r22, 0x1E	; 30
      8e:	6e 00       	.word	0x006e	; ????

00000090 <__c.2177>:
      90:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      a0:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      b0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      c0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      d0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      e0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      f0:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     100:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     110:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     120:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     130:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     140:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     150:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     160:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     170:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     180:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000018e <__ctors_end>:
     18e:	11 24       	eor	r1, r1
     190:	1f be       	out	0x3f, r1	; 63
     192:	cf ef       	ldi	r28, 0xFF	; 255
     194:	d0 e4       	ldi	r29, 0x40	; 64
     196:	de bf       	out	0x3e, r29	; 62
     198:	cd bf       	out	0x3d, r28	; 61

0000019a <__do_copy_data>:
     19a:	11 e0       	ldi	r17, 0x01	; 1
     19c:	a0 e0       	ldi	r26, 0x00	; 0
     19e:	b1 e0       	ldi	r27, 0x01	; 1
     1a0:	ec e1       	ldi	r30, 0x1C	; 28
     1a2:	f3 e1       	ldi	r31, 0x13	; 19
     1a4:	00 e0       	ldi	r16, 0x00	; 0
     1a6:	0b bf       	out	0x3b, r16	; 59
     1a8:	02 c0       	rjmp	.+4      	; 0x1ae <__do_copy_data+0x14>
     1aa:	07 90       	elpm	r0, Z+
     1ac:	0d 92       	st	X+, r0
     1ae:	a2 32       	cpi	r26, 0x22	; 34
     1b0:	b1 07       	cpc	r27, r17
     1b2:	d9 f7       	brne	.-10     	; 0x1aa <__do_copy_data+0x10>

000001b4 <__do_clear_bss>:
     1b4:	21 e0       	ldi	r18, 0x01	; 1
     1b6:	a2 e2       	ldi	r26, 0x22	; 34
     1b8:	b1 e0       	ldi	r27, 0x01	; 1
     1ba:	01 c0       	rjmp	.+2      	; 0x1be <.do_clear_bss_start>

000001bc <.do_clear_bss_loop>:
     1bc:	1d 92       	st	X+, r1

000001be <.do_clear_bss_start>:
     1be:	a2 32       	cpi	r26, 0x22	; 34
     1c0:	b2 07       	cpc	r27, r18
     1c2:	e1 f7       	brne	.-8      	; 0x1bc <.do_clear_bss_loop>
     1c4:	14 d0       	rcall	.+40     	; 0x1ee <main>
     1c6:	0c 94 8c 09 	jmp	0x1318	; 0x1318 <_exit>

000001ca <__bad_interrupt>:
     1ca:	1a cf       	rjmp	.-460    	; 0x0 <__vectors>

000001cc <_Z14Test_On_PortA0v>:
void Test_On_PortA0();


void Test_On_PortA0(){
	
	DDRA |= 0x01;
     1cc:	08 9a       	sbi	0x01, 0	; 1
	
	PORTA |= ( 1 << PINA0);
     1ce:	10 9a       	sbi	0x02, 0	; 2
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1d0:	83 e2       	ldi	r24, 0x23	; 35
     1d2:	94 ef       	ldi	r25, 0xF4	; 244
     1d4:	01 97       	sbiw	r24, 0x01	; 1
     1d6:	f1 f7       	brne	.-4      	; 0x1d4 <_Z14Test_On_PortA0v+0x8>
     1d8:	00 c0       	rjmp	.+0      	; 0x1da <_Z14Test_On_PortA0v+0xe>
     1da:	00 00       	nop
	_delay_ms(250);
	PORTA &= ~( 1 << PINA0);
     1dc:	10 98       	cbi	0x02, 0	; 2
     1de:	83 e2       	ldi	r24, 0x23	; 35
     1e0:	94 ef       	ldi	r25, 0xF4	; 244
     1e2:	01 97       	sbiw	r24, 0x01	; 1
     1e4:	f1 f7       	brne	.-4      	; 0x1e2 <_Z14Test_On_PortA0v+0x16>
     1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <_Z14Test_On_PortA0v+0x1c>
     1e8:	00 00       	nop
	_delay_ms(250);
	PORTA |= ( 1 << PINA0);
     1ea:	10 9a       	sbi	0x02, 0	; 2
     1ec:	08 95       	ret

000001ee <main>:
#include <avr/io.h>
#include <util/delay.h>
#include "headsup.h"


int main(){
     1ee:	cf 93       	push	r28
     1f0:	df 93       	push	r29
     1f2:	cd b7       	in	r28, 0x3d	; 61
     1f4:	de b7       	in	r29, 0x3e	; 62
     1f6:	a7 97       	sbiw	r28, 0x27	; 39
     1f8:	0f b6       	in	r0, 0x3f	; 63
     1fa:	f8 94       	cli
     1fc:	de bf       	out	0x3e, r29	; 62
     1fe:	0f be       	out	0x3f, r0	; 63
     200:	cd bf       	out	0x3d, r28	; 61
	
	rtc_time rtmCurrent;
	lcd lcdNHD;
     202:	ce 01       	movw	r24, r28
     204:	87 96       	adiw	r24, 0x27	; 39
     206:	95 d1       	rcall	.+810    	; 0x532 <_ZN3lcdC1Ev>
	rtc rtcDS;
     208:	ce 01       	movw	r24, r28
     20a:	86 96       	adiw	r24, 0x26	; 38
     20c:	84 d2       	rcall	.+1288   	; 0x716 <_ZN3rtcC1Ev>
	unsigned char uchCurrenttime[ LINE_SIZE ] ;

	rtmCurrent.ucSeconds = 0x50;
     20e:	80 e5       	ldi	r24, 0x50	; 80
     210:	8f 8f       	std	Y+31, r24	; 0x1f
	rtmCurrent.ucMinutes = 0x59;
     212:	89 e5       	ldi	r24, 0x59	; 89
     214:	88 a3       	std	Y+32, r24	; 0x20
	rtmCurrent.ucHours = 0x72;
     216:	82 e7       	ldi	r24, 0x72	; 114
     218:	89 a3       	std	Y+33, r24	; 0x21
	
	Test_On_PortA0();
     21a:	d8 df       	rcall	.-80     	; 0x1cc <_Z14Test_On_PortA0v>
	lcdNHD.test_LCD_Screen();
     21c:	ce 01       	movw	r24, r28
     21e:	87 96       	adiw	r24, 0x27	; 39
     220:	bb d1       	rcall	.+886    	; 0x598 <_ZN3lcd15test_LCD_ScreenEv>
class rtc{

	public:
		rtc( );
		rtc_time get( ){ return get_time( ); }
		void set( rtc_time* rtmSetTime ){ set_time( rtmSetTime ); }
     222:	be 01       	movw	r22, r28
     224:	61 5e       	subi	r22, 0xE1	; 225
     226:	7f 4f       	sbci	r23, 0xFF	; 255
     228:	ce 01       	movw	r24, r28
     22a:	86 96       	adiw	r24, 0x26	; 38
     22c:	c3 d2       	rcall	.+1414   	; 0x7b4 <_ZN3rtc8set_timeEP8rtc_time>
     22e:	0f 2e       	mov	r0, r31
     230:	f7 e0       	ldi	r31, 0x07	; 7
     232:	bf 2e       	mov	r11, r31
     234:	f0 2d       	mov	r31, r0

class rtc{

	public:
		rtc( );
		rtc_time get( ){ return get_time( ); }
     236:	ce 01       	movw	r24, r28
     238:	86 96       	adiw	r24, 0x26	; 38
     23a:	91 d2       	rcall	.+1314   	; 0x75e <_ZN3rtc8get_timeEv>
     23c:	29 83       	std	Y+1, r18	; 0x01
     23e:	3a 83       	std	Y+2, r19	; 0x02
     240:	4b 83       	std	Y+3, r20	; 0x03
     242:	5c 83       	std	Y+4, r21	; 0x04
     244:	6d 83       	std	Y+5, r22	; 0x05
     246:	7e 83       	std	Y+6, r23	; 0x06
     248:	8f 83       	std	Y+7, r24	; 0x07
     24a:	fe 01       	movw	r30, r28
     24c:	31 96       	adiw	r30, 0x01	; 1
     24e:	de 01       	movw	r26, r28
     250:	18 96       	adiw	r26, 0x08	; 8
     252:	8b 2d       	mov	r24, r11
     254:	01 90       	ld	r0, Z+
     256:	0d 92       	st	X+, r0
     258:	8a 95       	dec	r24
     25a:	e1 f7       	brne	.-8      	; 0x254 <main+0x66>

	rtcDS.set(&rtmCurrent);

	for(;;){
		rtmCurrent=rtcDS.get();
     25c:	fe 01       	movw	r30, r28
     25e:	38 96       	adiw	r30, 0x08	; 8
     260:	de 01       	movw	r26, r28
     262:	5f 96       	adiw	r26, 0x1f	; 31
     264:	8b 2d       	mov	r24, r11
     266:	01 90       	ld	r0, Z+
     268:	0d 92       	st	X+, r0
     26a:	8a 95       	dec	r24
     26c:	e1 f7       	brne	.-8      	; 0x266 <main+0x78>
		rtcDS.rtm_to_char( rtmCurrent, uchCurrenttime, LINE_SIZE );
     26e:	68 94       	set
     270:	cc 24       	eor	r12, r12
     272:	c4 f8       	bld	r12, 4
     274:	d1 2c       	mov	r13, r1
     276:	ce 01       	movw	r24, r28
     278:	0f 96       	adiw	r24, 0x0f	; 15
     27a:	7c 01       	movw	r14, r24
     27c:	0f 8d       	ldd	r16, Y+31	; 0x1f
     27e:	18 a1       	ldd	r17, Y+32	; 0x20
     280:	29 a1       	ldd	r18, Y+33	; 0x21
     282:	3a a1       	ldd	r19, Y+34	; 0x22
     284:	4b a1       	ldd	r20, Y+35	; 0x23
     286:	5c a1       	ldd	r21, Y+36	; 0x24
     288:	6d a1       	ldd	r22, Y+37	; 0x25
     28a:	47 96       	adiw	r24, 0x17	; 23
     28c:	99 d2       	rcall	.+1330   	; 0x7c0 <_ZN3rtc11rtm_to_charE8rtc_timePhj>
		lcdNHD.print( uchCurrenttime , LINE_TOP );
     28e:	40 e0       	ldi	r20, 0x00	; 0
     290:	b7 01       	movw	r22, r14
     292:	ce 01       	movw	r24, r28
     294:	87 96       	adiw	r24, 0x27	; 39
     296:	5c d1       	rcall	.+696    	; 0x550 <_ZN3lcd5printEPhh>
     298:	9f e3       	ldi	r25, 0x3F	; 63
     29a:	2d e0       	ldi	r18, 0x0D	; 13
     29c:	83 e0       	ldi	r24, 0x03	; 3
     29e:	91 50       	subi	r25, 0x01	; 1
     2a0:	20 40       	sbci	r18, 0x00	; 0
     2a2:	80 40       	sbci	r24, 0x00	; 0
     2a4:	e1 f7       	brne	.-8      	; 0x29e <main+0xb0>
     2a6:	00 c0       	rjmp	.+0      	; 0x2a8 <main+0xba>
     2a8:	00 00       	nop
     2aa:	c5 cf       	rjmp	.-118    	; 0x236 <main+0x48>

000002ac <_ZN3lcd8TWI_INITEv>:
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);// Clear Flag and Enable
}

void lcd::TWI_STOP(){
	
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
     2ac:	e4 e6       	ldi	r30, 0x64	; 100
     2ae:	f0 e0       	ldi	r31, 0x00	; 0
     2b0:	80 81       	ld	r24, Z
     2b2:	8f 77       	andi	r24, 0x7F	; 127
     2b4:	80 83       	st	Z, r24
     2b6:	ec eb       	ldi	r30, 0xBC	; 188
     2b8:	f0 e0       	ldi	r31, 0x00	; 0
     2ba:	80 81       	ld	r24, Z
     2bc:	8e 7f       	andi	r24, 0xFE	; 254
     2be:	80 83       	st	Z, r24
     2c0:	82 e0       	ldi	r24, 0x02	; 2
     2c2:	80 93 b8 00 	sts	0x00B8, r24
     2c6:	e9 eb       	ldi	r30, 0xB9	; 185
     2c8:	f0 e0       	ldi	r31, 0x00	; 0
     2ca:	80 81       	ld	r24, Z
     2cc:	8d 7f       	andi	r24, 0xFD	; 253
     2ce:	80 83       	st	Z, r24
     2d0:	08 95       	ret

000002d2 <_ZN3lcd22TWI_StartCommunicationEv>:
	
}

void lcd::TWI_StartCommunication(){
	
	TWCR = (1 << TWEN) | (1 << TWINT) | (1 << TWSTA);
     2d2:	84 ea       	ldi	r24, 0xA4	; 164
     2d4:	80 93 bc 00 	sts	0x00BC, r24
	while ( ! (TWCR & (1 << TWINT)));				// wait for flag to be set
     2d8:	ec eb       	ldi	r30, 0xBC	; 188
     2da:	f0 e0       	ldi	r31, 0x00	; 0
     2dc:	80 81       	ld	r24, Z
     2de:	88 23       	and	r24, r24
     2e0:	ec f7       	brge	.-6      	; 0x2dc <_ZN3lcd22TWI_StartCommunicationEv+0xa>
}


void lcd::TWI_CheckStatusRegister(uint8_t Status){

	if( (TWSR & 0xF8) != Status ) {					// Error check for start condition
     2e2:	80 91 b9 00 	lds	r24, 0x00B9
     2e6:	08 95       	ret

000002e8 <_ZN3lcd16TWI_TransmitDataEhh>:
	
}

void lcd::TWI_TransmitData(uint8_t TwiData, uint8_t StatusCode){
	
	TWDR = TwiData;
     2e8:	60 93 bb 00 	sts	0x00BB, r22
}


void lcd::TWI_ClearFlagAndEnable(){

	TWCR = (1 << TWINT) | (1 << TWEN);				// Clear Flag and Enable
     2ec:	84 e8       	ldi	r24, 0x84	; 132
     2ee:	80 93 bc 00 	sts	0x00BC, r24
	
	TWDR = TwiData;
	/*After TWDR is loaded with SLA+W, a specific val must be written to TWCR, instucting the TWINT hardware
	to transmit the SLA+W present in TWDR*/
	TWI_ClearFlagAndEnable();
	while ( ! (TWCR & (1 << TWINT)));	// wait for flag to be set
     2f2:	ec eb       	ldi	r30, 0xBC	; 188
     2f4:	f0 e0       	ldi	r31, 0x00	; 0
     2f6:	80 81       	ld	r24, Z
     2f8:	88 23       	and	r24, r24
     2fa:	ec f7       	brge	.-6      	; 0x2f6 <_ZN3lcd16TWI_TransmitDataEhh+0xe>
}


void lcd::TWI_CheckStatusRegister(uint8_t Status){

	if( (TWSR & 0xF8) != Status ) {					// Error check for start condition
     2fc:	80 91 b9 00 	lds	r24, 0x00B9
     300:	08 95       	ret

00000302 <_ZN3lcd4ShowEPh>:
	TWI_CheckStatusRegister(StatusCode);	// works!!

}


void lcd::Show(unsigned char* text){
     302:	ef 92       	push	r14
     304:	ff 92       	push	r15
     306:	0f 93       	push	r16
     308:	1f 93       	push	r17
     30a:	cf 93       	push	r28
     30c:	df 93       	push	r29
     30e:	8c 01       	movw	r16, r24
     310:	eb 01       	movw	r28, r22
	
	TWI_StartCommunication();
     312:	df df       	rcall	.-66     	; 0x2d2 <_ZN3lcd22TWI_StartCommunicationEv>
	
	TWI_TransmitData( SLA, TW_MT_SLA_ACK );
     314:	48 e1       	ldi	r20, 0x18	; 24
     316:	6c e7       	ldi	r22, 0x7C	; 124
     318:	c8 01       	movw	r24, r16
     31a:	e6 df       	rcall	.-52     	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData( SEND_DATA, TW_MT_DATA_ACK );
     31c:	48 e2       	ldi	r20, 0x28	; 40
     31e:	60 e4       	ldi	r22, 0x40	; 64
     320:	c8 01       	movw	r24, r16
     322:	e2 df       	rcall	.-60     	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
     324:	7e 01       	movw	r14, r28
     326:	80 e1       	ldi	r24, 0x10	; 16
     328:	e8 0e       	add	r14, r24
     32a:	f1 1c       	adc	r15, r1
	for( int valN = 0; valN < LINE_SIZE; valN++ ){
		TWI_TransmitData( *text, TW_MT_DATA_ACK );
     32c:	48 e2       	ldi	r20, 0x28	; 40
     32e:	69 91       	ld	r22, Y+
     330:	c8 01       	movw	r24, r16
     332:	da df       	rcall	.-76     	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	
	TWI_StartCommunication();
	
	TWI_TransmitData( SLA, TW_MT_SLA_ACK );
	TWI_TransmitData( SEND_DATA, TW_MT_DATA_ACK );
	for( int valN = 0; valN < LINE_SIZE; valN++ ){
     334:	ce 15       	cp	r28, r14
     336:	df 05       	cpc	r29, r15
     338:	c9 f7       	brne	.-14     	; 0x32c <_ZN3lcd4ShowEPh+0x2a>
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);// Clear Flag and Enable
}

void lcd::TWI_STOP(){
	
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
     33a:	84 e9       	ldi	r24, 0x94	; 148
     33c:	80 93 bc 00 	sts	0x00BC, r24
		++text;
	}
		
	TWI_STOP();
	
}
     340:	df 91       	pop	r29
     342:	cf 91       	pop	r28
     344:	1f 91       	pop	r17
     346:	0f 91       	pop	r16
     348:	ff 90       	pop	r15
     34a:	ef 90       	pop	r14
     34c:	08 95       	ret

0000034e <_ZN3lcd11SelectLine1Ev>:


void lcd::SelectLine1(void){
     34e:	cf 93       	push	r28
     350:	df 93       	push	r29
     352:	ec 01       	movw	r28, r24
	
	TWI_StartCommunication();
     354:	be df       	rcall	.-132    	; 0x2d2 <_ZN3lcd22TWI_StartCommunicationEv>
	
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     356:	48 e1       	ldi	r20, 0x18	; 24
     358:	6c e7       	ldi	r22, 0x7C	; 124
     35a:	ce 01       	movw	r24, r28
     35c:	c5 df       	rcall	.-118    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     35e:	48 e2       	ldi	r20, 0x28	; 40
     360:	60 e0       	ldi	r22, 0x00	; 0
     362:	ce 01       	movw	r24, r28
     364:	c1 df       	rcall	.-126    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(LINE_1,TW_MT_DATA_ACK);
     366:	48 e2       	ldi	r20, 0x28	; 40
     368:	60 e8       	ldi	r22, 0x80	; 128
     36a:	ce 01       	movw	r24, r28
     36c:	bd df       	rcall	.-134    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);// Clear Flag and Enable
}

void lcd::TWI_STOP(){
	
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
     36e:	84 e9       	ldi	r24, 0x94	; 148
     370:	80 93 bc 00 	sts	0x00BC, r24
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
	TWI_TransmitData(LINE_1,TW_MT_DATA_ACK);
	
	TWI_STOP();
}
     374:	df 91       	pop	r29
     376:	cf 91       	pop	r28
     378:	08 95       	ret

0000037a <_ZN3lcd11SelectLine2Ev>:


void lcd::SelectLine2(void){
     37a:	cf 93       	push	r28
     37c:	df 93       	push	r29
     37e:	ec 01       	movw	r28, r24
	
	TWI_StartCommunication();
     380:	a8 df       	rcall	.-176    	; 0x2d2 <_ZN3lcd22TWI_StartCommunicationEv>
	
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     382:	48 e1       	ldi	r20, 0x18	; 24
     384:	6c e7       	ldi	r22, 0x7C	; 124
     386:	ce 01       	movw	r24, r28
     388:	af df       	rcall	.-162    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     38a:	48 e2       	ldi	r20, 0x28	; 40
     38c:	60 e0       	ldi	r22, 0x00	; 0
     38e:	ce 01       	movw	r24, r28
     390:	ab df       	rcall	.-170    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(LINE_2,TW_MT_DATA_ACK);
     392:	48 e2       	ldi	r20, 0x28	; 40
     394:	60 ec       	ldi	r22, 0xC0	; 192
     396:	ce 01       	movw	r24, r28
     398:	a7 df       	rcall	.-178    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);// Clear Flag and Enable
}

void lcd::TWI_STOP(){
	
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
     39a:	84 e9       	ldi	r24, 0x94	; 148
     39c:	80 93 bc 00 	sts	0x00BC, r24
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
	TWI_TransmitData(LINE_2,TW_MT_DATA_ACK);
	
	TWI_STOP();
}
     3a0:	df 91       	pop	r29
     3a2:	cf 91       	pop	r28
     3a4:	08 95       	ret

000003a6 <_ZN3lcd5CGRAMEv>:

void lcd::CGRAM(void)
{
     3a6:	ff 92       	push	r15
     3a8:	0f 93       	push	r16
     3aa:	1f 93       	push	r17
     3ac:	cf 93       	push	r28
     3ae:	df 93       	push	r29
     3b0:	ec 01       	movw	r28, r24
 	TWI_StartCommunication();
     3b2:	8f df       	rcall	.-226    	; 0x2d2 <_ZN3lcd22TWI_StartCommunicationEv>
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     3b4:	48 e1       	ldi	r20, 0x18	; 24
     3b6:	6c e7       	ldi	r22, 0x7C	; 124
     3b8:	ce 01       	movw	r24, r28
     3ba:	96 df       	rcall	.-212    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);;
     3bc:	48 e2       	ldi	r20, 0x28	; 40
     3be:	60 e0       	ldi	r22, 0x00	; 0
     3c0:	ce 01       	movw	r24, r28
     3c2:	92 df       	rcall	.-220    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x38,TW_MT_DATA_ACK);		//go to instructino table 0
     3c4:	48 e2       	ldi	r20, 0x28	; 40
     3c6:	68 e3       	ldi	r22, 0x38	; 56
     3c8:	ce 01       	movw	r24, r28
     3ca:	8e df       	rcall	.-228    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x40,TW_MT_DATA_ACK);		//Set CGRAM address to 0x00
     3cc:	48 e2       	ldi	r20, 0x28	; 40
     3ce:	60 e4       	ldi	r22, 0x40	; 64
     3d0:	ce 01       	movw	r24, r28
     3d2:	8a df       	rcall	.-236    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);// Clear Flag and Enable
}

void lcd::TWI_STOP(){
	
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
     3d4:	0c eb       	ldi	r16, 0xBC	; 188
     3d6:	10 e0       	ldi	r17, 0x00	; 0
     3d8:	0f 2e       	mov	r0, r31
     3da:	f4 e9       	ldi	r31, 0x94	; 148
     3dc:	ff 2e       	mov	r15, r31
     3de:	f0 2d       	mov	r31, r0
     3e0:	f8 01       	movw	r30, r16
     3e2:	f0 82       	st	Z, r15
     3e4:	83 ec       	ldi	r24, 0xC3	; 195
     3e6:	99 e0       	ldi	r25, 0x09	; 9
     3e8:	01 97       	sbiw	r24, 0x01	; 1
     3ea:	f1 f7       	brne	.-4      	; 0x3e8 <_ZN3lcd5CGRAMEv+0x42>
     3ec:	00 c0       	rjmp	.+0      	; 0x3ee <_ZN3lcd5CGRAMEv+0x48>
     3ee:	00 00       	nop
	TWI_TransmitData(0x38,TW_MT_DATA_ACK);		//go to instructino table 0
	TWI_TransmitData(0x40,TW_MT_DATA_ACK);		//Set CGRAM address to 0x00
	TWI_STOP();
	_delay_ms(10);
	
	TWI_StartCommunication();
     3f0:	ce 01       	movw	r24, r28
     3f2:	6f df       	rcall	.-290    	; 0x2d2 <_ZN3lcd22TWI_StartCommunicationEv>
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     3f4:	48 e1       	ldi	r20, 0x18	; 24
     3f6:	6c e7       	ldi	r22, 0x7C	; 124
     3f8:	ce 01       	movw	r24, r28
     3fa:	76 df       	rcall	.-276    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     3fc:	48 e2       	ldi	r20, 0x28	; 40
     3fe:	60 e0       	ldi	r22, 0x00	; 0
     400:	ce 01       	movw	r24, r28
     402:	72 df       	rcall	.-284    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x00,TW_MT_DATA_ACK);		//write to first CGRAM address
     404:	48 e2       	ldi	r20, 0x28	; 40
     406:	60 e0       	ldi	r22, 0x00	; 0
     408:	ce 01       	movw	r24, r28
     40a:	6e df       	rcall	.-292    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x1E,TW_MT_DATA_ACK);
     40c:	48 e2       	ldi	r20, 0x28	; 40
     40e:	6e e1       	ldi	r22, 0x1E	; 30
     410:	ce 01       	movw	r24, r28
     412:	6a df       	rcall	.-300    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x18,TW_MT_DATA_ACK);
     414:	48 e2       	ldi	r20, 0x28	; 40
     416:	68 e1       	ldi	r22, 0x18	; 24
     418:	ce 01       	movw	r24, r28
     41a:	66 df       	rcall	.-308    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x14,TW_MT_DATA_ACK);
     41c:	48 e2       	ldi	r20, 0x28	; 40
     41e:	64 e1       	ldi	r22, 0x14	; 20
     420:	ce 01       	movw	r24, r28
     422:	62 df       	rcall	.-316    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x12,TW_MT_DATA_ACK);
     424:	48 e2       	ldi	r20, 0x28	; 40
     426:	62 e1       	ldi	r22, 0x12	; 18
     428:	ce 01       	movw	r24, r28
     42a:	5e df       	rcall	.-324    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);
     42c:	48 e2       	ldi	r20, 0x28	; 40
     42e:	61 e0       	ldi	r22, 0x01	; 1
     430:	ce 01       	movw	r24, r28
     432:	5a df       	rcall	.-332    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x00,TW_MT_DATA_ACK);
     434:	48 e2       	ldi	r20, 0x28	; 40
     436:	60 e0       	ldi	r22, 0x00	; 0
     438:	ce 01       	movw	r24, r28
     43a:	56 df       	rcall	.-340    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x00,TW_MT_DATA_ACK);		//8 bytes per character
     43c:	48 e2       	ldi	r20, 0x28	; 40
     43e:	60 e0       	ldi	r22, 0x00	; 0
     440:	ce 01       	movw	r24, r28
     442:	52 df       	rcall	.-348    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);// Clear Flag and Enable
}

void lcd::TWI_STOP(){
	
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
     444:	f8 01       	movw	r30, r16
     446:	f0 82       	st	Z, r15
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);
	TWI_TransmitData(0x00,TW_MT_DATA_ACK);
	TWI_TransmitData(0x00,TW_MT_DATA_ACK);		//8 bytes per character
	//continue writing to remaining CGRAM if desired
	TWI_STOP();
}
     448:	df 91       	pop	r29
     44a:	cf 91       	pop	r28
     44c:	1f 91       	pop	r17
     44e:	0f 91       	pop	r16
     450:	ff 90       	pop	r15
     452:	08 95       	ret

00000454 <_ZN3lcd8init_LCDEv>:

void lcd::init_LCD()
{
     454:	ff 92       	push	r15
     456:	0f 93       	push	r16
     458:	1f 93       	push	r17
     45a:	cf 93       	push	r28
     45c:	df 93       	push	r29
     45e:	ec 01       	movw	r28, r24
	TWI_StartCommunication();
     460:	38 df       	rcall	.-400    	; 0x2d2 <_ZN3lcd22TWI_StartCommunicationEv>
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     462:	48 e1       	ldi	r20, 0x18	; 24
     464:	6c e7       	ldi	r22, 0x7C	; 124
     466:	ce 01       	movw	r24, r28
     468:	3f df       	rcall	.-386    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     46a:	48 e2       	ldi	r20, 0x28	; 40
     46c:	60 e0       	ldi	r22, 0x00	; 0
     46e:	ce 01       	movw	r24, r28
     470:	3b df       	rcall	.-394    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x38,TW_MT_DATA_ACK);						// Function Set: 8 bit bus mode, 2-line mode, single height font
     472:	48 e2       	ldi	r20, 0x28	; 40
     474:	68 e3       	ldi	r22, 0x38	; 56
     476:	ce 01       	movw	r24, r28
     478:	37 df       	rcall	.-402    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
     47a:	87 ea       	ldi	r24, 0xA7	; 167
     47c:	91 e6       	ldi	r25, 0x61	; 97
     47e:	01 97       	sbiw	r24, 0x01	; 1
     480:	f1 f7       	brne	.-4      	; 0x47e <_ZN3lcd8init_LCDEv+0x2a>
     482:	00 c0       	rjmp	.+0      	; 0x484 <_ZN3lcd8init_LCDEv+0x30>
     484:	00 00       	nop
	_delay_ms(100);
	TWI_TransmitData(0x39,TW_MT_DATA_ACK);						// Use Extended instruction set
     486:	48 e2       	ldi	r20, 0x28	; 40
     488:	69 e3       	ldi	r22, 0x39	; 57
     48a:	ce 01       	movw	r24, r28
     48c:	2d df       	rcall	.-422    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
     48e:	e7 ea       	ldi	r30, 0xA7	; 167
     490:	f1 e6       	ldi	r31, 0x61	; 97
     492:	31 97       	sbiw	r30, 0x01	; 1
     494:	f1 f7       	brne	.-4      	; 0x492 <_ZN3lcd8init_LCDEv+0x3e>
     496:	00 c0       	rjmp	.+0      	; 0x498 <_ZN3lcd8init_LCDEv+0x44>
     498:	00 00       	nop
	_delay_ms(100);
	TWI_TransmitData(0x14,TW_MT_DATA_ACK);						// Set Internal Osc Freq
     49a:	48 e2       	ldi	r20, 0x28	; 40
     49c:	64 e1       	ldi	r22, 0x14	; 20
     49e:	ce 01       	movw	r24, r28
     4a0:	23 df       	rcall	.-442    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x78,TW_MT_DATA_ACK);						// Contrast Set
     4a2:	48 e2       	ldi	r20, 0x28	; 40
     4a4:	68 e7       	ldi	r22, 0x78	; 120
     4a6:	ce 01       	movw	r24, r28
     4a8:	1f df       	rcall	.-450    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x5D,TW_MT_DATA_ACK);						// Power/Icon/Contrast Control
     4aa:	48 e2       	ldi	r20, 0x28	; 40
     4ac:	6d e5       	ldi	r22, 0x5D	; 93
     4ae:	ce 01       	movw	r24, r28
     4b0:	1b df       	rcall	.-458    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x6D,TW_MT_DATA_ACK);						// Follower Control
     4b2:	48 e2       	ldi	r20, 0x28	; 40
     4b4:	6d e6       	ldi	r22, 0x6D	; 109
     4b6:	ce 01       	movw	r24, r28
     4b8:	17 df       	rcall	.-466    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x0C,TW_MT_DATA_ACK);						// Display On/Off
     4ba:	48 e2       	ldi	r20, 0x28	; 40
     4bc:	6c e0       	ldi	r22, 0x0C	; 12
     4be:	ce 01       	movw	r24, r28
     4c0:	13 df       	rcall	.-474    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);						// Clear Display
     4c2:	48 e2       	ldi	r20, 0x28	; 40
     4c4:	61 e0       	ldi	r22, 0x01	; 1
     4c6:	ce 01       	movw	r24, r28
     4c8:	0f df       	rcall	.-482    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x06,TW_MT_DATA_ACK);						// Entry Mode Set: Cursor/Shift as characters input
     4ca:	48 e2       	ldi	r20, 0x28	; 40
     4cc:	66 e0       	ldi	r22, 0x06	; 6
     4ce:	ce 01       	movw	r24, r28
     4d0:	0b df       	rcall	.-490    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
     4d2:	87 ea       	ldi	r24, 0xA7	; 167
     4d4:	91 e6       	ldi	r25, 0x61	; 97
     4d6:	01 97       	sbiw	r24, 0x01	; 1
     4d8:	f1 f7       	brne	.-4      	; 0x4d6 <_ZN3lcd8init_LCDEv+0x82>
     4da:	00 c0       	rjmp	.+0      	; 0x4dc <_ZN3lcd8init_LCDEv+0x88>
     4dc:	00 00       	nop
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);// Clear Flag and Enable
}

void lcd::TWI_STOP(){
	
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
     4de:	0c eb       	ldi	r16, 0xBC	; 188
     4e0:	10 e0       	ldi	r17, 0x00	; 0
     4e2:	0f 2e       	mov	r0, r31
     4e4:	f4 e9       	ldi	r31, 0x94	; 148
     4e6:	ff 2e       	mov	r15, r31
     4e8:	f0 2d       	mov	r31, r0
     4ea:	f8 01       	movw	r30, r16
     4ec:	f0 82       	st	Z, r15
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);						// Clear Display
	TWI_TransmitData(0x06,TW_MT_DATA_ACK);						// Entry Mode Set: Cursor/Shift as characters input
	_delay_ms(100);
	TWI_STOP();

	CGRAM();			//define CGRAM
     4ee:	ce 01       	movw	r24, r28
     4f0:	5a df       	rcall	.-332    	; 0x3a6 <_ZN3lcd5CGRAMEv>

	TWI_StartCommunication();
     4f2:	ce 01       	movw	r24, r28
     4f4:	ee de       	rcall	.-548    	; 0x2d2 <_ZN3lcd22TWI_StartCommunicationEv>
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     4f6:	48 e1       	ldi	r20, 0x18	; 24
     4f8:	6c e7       	ldi	r22, 0x7C	; 124
     4fa:	ce 01       	movw	r24, r28
     4fc:	f5 de       	rcall	.-534    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     4fe:	48 e2       	ldi	r20, 0x28	; 40
     500:	60 e0       	ldi	r22, 0x00	; 0
     502:	ce 01       	movw	r24, r28
     504:	f1 de       	rcall	.-542    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x39,TW_MT_DATA_ACK);
     506:	48 e2       	ldi	r20, 0x28	; 40
     508:	69 e3       	ldi	r22, 0x39	; 57
     50a:	ce 01       	movw	r24, r28
     50c:	ed de       	rcall	.-550    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);
     50e:	48 e2       	ldi	r20, 0x28	; 40
     510:	61 e0       	ldi	r22, 0x01	; 1
     512:	ce 01       	movw	r24, r28
     514:	e9 de       	rcall	.-558    	; 0x2e8 <_ZN3lcd16TWI_TransmitDataEhh>
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);// Clear Flag and Enable
}

void lcd::TWI_STOP(){
	
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
     516:	f8 01       	movw	r30, r16
     518:	f0 82       	st	Z, r15
     51a:	87 ea       	ldi	r24, 0xA7	; 167
     51c:	91 e6       	ldi	r25, 0x61	; 97
     51e:	01 97       	sbiw	r24, 0x01	; 1
     520:	f1 f7       	brne	.-4      	; 0x51e <_ZN3lcd8init_LCDEv+0xca>
     522:	00 c0       	rjmp	.+0      	; 0x524 <_ZN3lcd8init_LCDEv+0xd0>
     524:	00 00       	nop
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
	TWI_TransmitData(0x39,TW_MT_DATA_ACK);
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);
	TWI_STOP();
	_delay_ms(100);
}
     526:	df 91       	pop	r29
     528:	cf 91       	pop	r28
     52a:	1f 91       	pop	r17
     52c:	0f 91       	pop	r16
     52e:	ff 90       	pop	r15
     530:	08 95       	ret

00000532 <_ZN3lcdC1Ev>:
#include "lcd.h"


lcd::lcd(){
     532:	cf 93       	push	r28
     534:	df 93       	push	r29
     536:	ec 01       	movw	r28, r24
	
		TWI_INIT();
     538:	b9 de       	rcall	.-654    	; 0x2ac <_ZN3lcd8TWI_INITEv>
		init_LCD();
     53a:	ce 01       	movw	r24, r28
     53c:	8b df       	rcall	.-234    	; 0x454 <_ZN3lcd8init_LCDEv>
     53e:	87 e8       	ldi	r24, 0x87	; 135
     540:	93 e1       	ldi	r25, 0x13	; 19
     542:	01 97       	sbiw	r24, 0x01	; 1
     544:	f1 f7       	brne	.-4      	; 0x542 <_ZN3lcdC1Ev+0x10>
     546:	00 c0       	rjmp	.+0      	; 0x548 <_ZN3lcdC1Ev+0x16>
     548:	00 00       	nop
		_delay_ms(20);
		
}
     54a:	df 91       	pop	r29
     54c:	cf 91       	pop	r28
     54e:	08 95       	ret

00000550 <_ZN3lcd5printEPhh>:
	print(text2, LINE_BOTTOM);

}


void lcd::print(unsigned char* text, uint8_t valLine){
     550:	0f 93       	push	r16
     552:	1f 93       	push	r17
     554:	cf 93       	push	r28
     556:	df 93       	push	r29
     558:	ec 01       	movw	r28, r24
     55a:	8b 01       	movw	r16, r22
		
	if( valLine == LINE_TOP ){
     55c:	41 11       	cpse	r20, r1
     55e:	0b c0       	rjmp	.+22     	; 0x576 <_ZN3lcd5printEPhh+0x26>
		SelectLine1();
     560:	f6 de       	rcall	.-532    	; 0x34e <_ZN3lcd11SelectLine1Ev>
     562:	83 ec       	ldi	r24, 0xC3	; 195
     564:	99 e0       	ldi	r25, 0x09	; 9
     566:	01 97       	sbiw	r24, 0x01	; 1
     568:	f1 f7       	brne	.-4      	; 0x566 <_ZN3lcd5printEPhh+0x16>
     56a:	00 c0       	rjmp	.+0      	; 0x56c <_ZN3lcd5printEPhh+0x1c>
     56c:	00 00       	nop
		_delay_ms(10);
		Show(text);
     56e:	b8 01       	movw	r22, r16
     570:	ce 01       	movw	r24, r28
     572:	c7 de       	rcall	.-626    	; 0x302 <_ZN3lcd4ShowEPh>
     574:	0c c0       	rjmp	.+24     	; 0x58e <_ZN3lcd5printEPhh+0x3e>
	}else if( valLine == LINE_BOTTOM ){
     576:	41 30       	cpi	r20, 0x01	; 1
     578:	51 f4       	brne	.+20     	; 0x58e <_ZN3lcd5printEPhh+0x3e>
		SelectLine2();
     57a:	ff de       	rcall	.-514    	; 0x37a <_ZN3lcd11SelectLine2Ev>
     57c:	83 ec       	ldi	r24, 0xC3	; 195
     57e:	99 e0       	ldi	r25, 0x09	; 9
     580:	01 97       	sbiw	r24, 0x01	; 1
     582:	f1 f7       	brne	.-4      	; 0x580 <_ZN3lcd5printEPhh+0x30>
     584:	00 c0       	rjmp	.+0      	; 0x586 <_ZN3lcd5printEPhh+0x36>
     586:	00 00       	nop
		_delay_ms(10);
		Show(text);
     588:	b8 01       	movw	r22, r16
     58a:	ce 01       	movw	r24, r28
     58c:	ba de       	rcall	.-652    	; 0x302 <_ZN3lcd4ShowEPh>
	}
		
}
     58e:	df 91       	pop	r29
     590:	cf 91       	pop	r28
     592:	1f 91       	pop	r17
     594:	0f 91       	pop	r16
     596:	08 95       	ret

00000598 <_ZN3lcd15test_LCD_ScreenEv>:
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);
	TWI_STOP();
	_delay_ms(100);
}

void lcd::test_LCD_Screen(){
     598:	0f 93       	push	r16
     59a:	1f 93       	push	r17
     59c:	cf 93       	push	r28
     59e:	df 93       	push	r29
     5a0:	cd b7       	in	r28, 0x3d	; 61
     5a2:	de b7       	in	r29, 0x3e	; 62
     5a4:	a2 97       	sbiw	r28, 0x22	; 34
     5a6:	0f b6       	in	r0, 0x3f	; 63
     5a8:	f8 94       	cli
     5aa:	de bf       	out	0x3e, r29	; 62
     5ac:	0f be       	out	0x3f, r0	; 63
     5ae:	cd bf       	out	0x3d, r28	; 61
     5b0:	8c 01       	movw	r16, r24
	
	unsigned char text1[]={"-! TEST LINE 1 !"};
     5b2:	81 e1       	ldi	r24, 0x11	; 17
     5b4:	e0 e0       	ldi	r30, 0x00	; 0
     5b6:	f1 e0       	ldi	r31, 0x01	; 1
     5b8:	de 01       	movw	r26, r28
     5ba:	52 96       	adiw	r26, 0x12	; 18
     5bc:	01 90       	ld	r0, Z+
     5be:	0d 92       	st	X+, r0
     5c0:	8a 95       	dec	r24
     5c2:	e1 f7       	brne	.-8      	; 0x5bc <_ZN3lcd15test_LCD_ScreenEv+0x24>
	unsigned char text2[]={"! TEST LINE 2 !-"};
     5c4:	81 e1       	ldi	r24, 0x11	; 17
     5c6:	e1 e1       	ldi	r30, 0x11	; 17
     5c8:	f1 e0       	ldi	r31, 0x01	; 1
     5ca:	de 01       	movw	r26, r28
     5cc:	11 96       	adiw	r26, 0x01	; 1
     5ce:	01 90       	ld	r0, Z+
     5d0:	0d 92       	st	X+, r0
     5d2:	8a 95       	dec	r24
     5d4:	e1 f7       	brne	.-8      	; 0x5ce <_ZN3lcd15test_LCD_ScreenEv+0x36>

	
	print(text1, LINE_TOP);
     5d6:	40 e0       	ldi	r20, 0x00	; 0
     5d8:	be 01       	movw	r22, r28
     5da:	6e 5e       	subi	r22, 0xEE	; 238
     5dc:	7f 4f       	sbci	r23, 0xFF	; 255
     5de:	c8 01       	movw	r24, r16
     5e0:	b7 df       	rcall	.-146    	; 0x550 <_ZN3lcd5printEPhh>
	print(text2, LINE_BOTTOM);
     5e2:	41 e0       	ldi	r20, 0x01	; 1
     5e4:	be 01       	movw	r22, r28
     5e6:	6f 5f       	subi	r22, 0xFF	; 255
     5e8:	7f 4f       	sbci	r23, 0xFF	; 255
     5ea:	c8 01       	movw	r24, r16
     5ec:	b1 df       	rcall	.-158    	; 0x550 <_ZN3lcd5printEPhh>
     5ee:	83 e2       	ldi	r24, 0x23	; 35
     5f0:	94 ef       	ldi	r25, 0xF4	; 244
     5f2:	01 97       	sbiw	r24, 0x01	; 1
     5f4:	f1 f7       	brne	.-4      	; 0x5f2 <_ZN3lcd15test_LCD_ScreenEv+0x5a>
     5f6:	00 c0       	rjmp	.+0      	; 0x5f8 <_ZN3lcd15test_LCD_ScreenEv+0x60>
     5f8:	00 00       	nop
	_delay_ms(250);
	print(text1, LINE_BOTTOM);
     5fa:	41 e0       	ldi	r20, 0x01	; 1
     5fc:	be 01       	movw	r22, r28
     5fe:	6e 5e       	subi	r22, 0xEE	; 238
     600:	7f 4f       	sbci	r23, 0xFF	; 255
     602:	c8 01       	movw	r24, r16
     604:	a5 df       	rcall	.-182    	; 0x550 <_ZN3lcd5printEPhh>
	print(text2, LINE_TOP);
     606:	40 e0       	ldi	r20, 0x00	; 0
     608:	be 01       	movw	r22, r28
     60a:	6f 5f       	subi	r22, 0xFF	; 255
     60c:	7f 4f       	sbci	r23, 0xFF	; 255
     60e:	c8 01       	movw	r24, r16
     610:	9f df       	rcall	.-194    	; 0x550 <_ZN3lcd5printEPhh>
     612:	83 e2       	ldi	r24, 0x23	; 35
     614:	94 ef       	ldi	r25, 0xF4	; 244
     616:	01 97       	sbiw	r24, 0x01	; 1
     618:	f1 f7       	brne	.-4      	; 0x616 <_ZN3lcd15test_LCD_ScreenEv+0x7e>
     61a:	00 c0       	rjmp	.+0      	; 0x61c <_ZN3lcd15test_LCD_ScreenEv+0x84>
     61c:	00 00       	nop
	_delay_ms(250);
	print(text1, LINE_TOP);
     61e:	40 e0       	ldi	r20, 0x00	; 0
     620:	be 01       	movw	r22, r28
     622:	6e 5e       	subi	r22, 0xEE	; 238
     624:	7f 4f       	sbci	r23, 0xFF	; 255
     626:	c8 01       	movw	r24, r16
     628:	93 df       	rcall	.-218    	; 0x550 <_ZN3lcd5printEPhh>
	print(text2, LINE_BOTTOM);
     62a:	41 e0       	ldi	r20, 0x01	; 1
     62c:	be 01       	movw	r22, r28
     62e:	6f 5f       	subi	r22, 0xFF	; 255
     630:	7f 4f       	sbci	r23, 0xFF	; 255
     632:	c8 01       	movw	r24, r16
     634:	8d df       	rcall	.-230    	; 0x550 <_ZN3lcd5printEPhh>

}
     636:	a2 96       	adiw	r28, 0x22	; 34
     638:	0f b6       	in	r0, 0x3f	; 63
     63a:	f8 94       	cli
     63c:	de bf       	out	0x3e, r29	; 62
     63e:	0f be       	out	0x3f, r0	; 63
     640:	cd bf       	out	0x3d, r28	; 61
     642:	df 91       	pop	r29
     644:	cf 91       	pop	r28
     646:	1f 91       	pop	r17
     648:	0f 91       	pop	r16
     64a:	08 95       	ret

0000064c <_ZN3rtc10spi_selectEv>:
}


void rtc::spi_select( ) {

	SPCR |= ( 1 << CPHA );
     64c:	8c b5       	in	r24, 0x2c	; 44
     64e:	84 60       	ori	r24, 0x04	; 4
     650:	8c bd       	out	0x2c, r24	; 44
	PORTB |= ( 1 << SS_PIN );
     652:	2c 9a       	sbi	0x05, 4	; 5
     654:	08 95       	ret

00000656 <_ZN3rtc12spi_deselectEv>:
*	This routine de-selects the device by lowering the CE
*	line. Must be done after the master transmit is complete
*/
void rtc::spi_deselect( ){

	PORTB &= ~( 1 << SS_PIN );
     656:	2c 98       	cbi	0x05, 4	; 5
     658:	08 95       	ret

0000065a <_ZN3rtc4initEv>:
void rtc::init( ){

	char IOReg;

	/* Outputs: MOSI and SCK out, all others inputs */
	DDRB = ( 1 << DD_MOSI_PIN ) | ( 1 << DD_SCK_PIN ) | ( 1 << DD_SS_PIN );
     65a:	20 eb       	ldi	r18, 0xB0	; 176
     65c:	24 b9       	out	0x04, r18	; 4
	/* Enable SPI, Master, CPOL=0, CPHA=1, set clock rate fck/16 */
	SPCR = ( 1 << SPE ) | ( 1 << MSTR ) | ( 1 << SPR0 );	// POSSIBLE ERROR: PULLING DATA HIGH
     65e:	21 e5       	ldi	r18, 0x51	; 81
     660:	2c bd       	out	0x2c, r18	; 44
	
	/* Clear the SPIF bit in SPSR */
	IOReg = SPSR;
     662:	2d b5       	in	r18, 0x2d	; 45
	IOReg = SPDR;
     664:	2e b5       	in	r18, 0x2e	; 46

	spi_deselect( );
     666:	f7 cf       	rjmp	.-18     	; 0x656 <_ZN3rtc12spi_deselectEv>
     668:	08 95       	ret

0000066a <_ZN3rtc19spi_master_transmitEh>:

// This routine exchanges 1 byte with the SPI port. 
unsigned char rtc::spi_master_transmit( unsigned char cData )
{

	SPDR  = cData;	// Set Pointer to beginning of String
     66a:	6e bd       	out	0x2e, r22	; 46
	/* wait until Char is sent */
	while ( ! (SPSR & ( 1 << SPIF ))){
     66c:	0d b4       	in	r0, 0x2d	; 45
     66e:	07 fe       	sbrs	r0, 7
     670:	fd cf       	rjmp	.-6      	; 0x66c <_ZN3rtc19spi_master_transmitEh+0x2>
		;	
	}

	return SPDR;
     672:	8e b5       	in	r24, 0x2e	; 46
}
     674:	08 95       	ret

00000676 <_ZN3rtc10read_blockEhPhj>:

/*
*	ReadBlock reads iCount bytes starting at cAddr into the
*	buffer pBuffer
*/
void rtc::read_block( unsigned char cAddr, unsigned char *pBuffer, unsigned int iCount ){
     676:	cf 92       	push	r12
     678:	df 92       	push	r13
     67a:	ef 92       	push	r14
     67c:	ff 92       	push	r15
     67e:	0f 93       	push	r16
     680:	1f 93       	push	r17
     682:	cf 93       	push	r28
     684:	df 93       	push	r29
     686:	7c 01       	movw	r14, r24
     688:	16 2f       	mov	r17, r22
     68a:	c4 2e       	mov	r12, r20
     68c:	d5 2e       	mov	r13, r21
     68e:	e9 01       	movw	r28, r18
	
	spi_select( );
     690:	dd df       	rcall	.-70     	; 0x64c <_ZN3rtc10spi_selectEv>

	spi_master_transmit( cAddr );
     692:	61 2f       	mov	r22, r17
     694:	c7 01       	movw	r24, r14
     696:	e9 df       	rcall	.-46     	; 0x66a <_ZN3rtc19spi_master_transmitEh>
	while( iCount-- ){
     698:	20 97       	sbiw	r28, 0x00	; 0
     69a:	51 f0       	breq	.+20     	; 0x6b0 <_ZN3rtc10read_blockEhPhj+0x3a>
     69c:	0c 2d       	mov	r16, r12
     69e:	1d 2d       	mov	r17, r13
		*pBuffer++ = spi_master_transmit( 0 );
     6a0:	60 e0       	ldi	r22, 0x00	; 0
     6a2:	c7 01       	movw	r24, r14
     6a4:	e2 df       	rcall	.-60     	; 0x66a <_ZN3rtc19spi_master_transmitEh>
     6a6:	f8 01       	movw	r30, r16
     6a8:	81 93       	st	Z+, r24
     6aa:	8f 01       	movw	r16, r30
     6ac:	21 97       	sbiw	r28, 0x01	; 1
void rtc::read_block( unsigned char cAddr, unsigned char *pBuffer, unsigned int iCount ){
	
	spi_select( );

	spi_master_transmit( cAddr );
	while( iCount-- ){
     6ae:	c1 f7       	brne	.-16     	; 0x6a0 <_ZN3rtc10read_blockEhPhj+0x2a>
		*pBuffer++ = spi_master_transmit( 0 );
	}

	spi_deselect();
     6b0:	c7 01       	movw	r24, r14
     6b2:	d1 df       	rcall	.-94     	; 0x656 <_ZN3rtc12spi_deselectEv>

}
     6b4:	df 91       	pop	r29
     6b6:	cf 91       	pop	r28
     6b8:	1f 91       	pop	r17
     6ba:	0f 91       	pop	r16
     6bc:	ff 90       	pop	r15
     6be:	ef 90       	pop	r14
     6c0:	df 90       	pop	r13
     6c2:	cf 90       	pop	r12
     6c4:	08 95       	ret

000006c6 <_ZN3rtc11write_blockEhPhj>:
/*
*  WriteBlock sends iCount bytes from the buffer pBuffer
*  to the device at iAddr + 0x80. The device uses a split
*  memory map where all write addresses are at address +0x80
*/
void rtc::write_block(unsigned char iAddr, unsigned char *pBuffer, unsigned int iCount){
     6c6:	cf 92       	push	r12
     6c8:	df 92       	push	r13
     6ca:	ef 92       	push	r14
     6cc:	ff 92       	push	r15
     6ce:	0f 93       	push	r16
     6d0:	1f 93       	push	r17
     6d2:	cf 93       	push	r28
     6d4:	df 93       	push	r29
     6d6:	7c 01       	movw	r14, r24
     6d8:	16 2f       	mov	r17, r22
     6da:	c4 2e       	mov	r12, r20
     6dc:	d5 2e       	mov	r13, r21
     6de:	e9 01       	movw	r28, r18

	spi_select( );
     6e0:	b5 df       	rcall	.-150    	; 0x64c <_ZN3rtc10spi_selectEv>

	spi_master_transmit( iAddr + 0x80 );
     6e2:	60 e8       	ldi	r22, 0x80	; 128
     6e4:	61 0f       	add	r22, r17
     6e6:	c7 01       	movw	r24, r14
     6e8:	c0 df       	rcall	.-128    	; 0x66a <_ZN3rtc19spi_master_transmitEh>
	while( iCount-- ){
     6ea:	20 97       	sbiw	r28, 0x00	; 0
     6ec:	49 f0       	breq	.+18     	; 0x700 <_ZN3rtc11write_blockEhPhj+0x3a>
     6ee:	0c 2d       	mov	r16, r12
     6f0:	1d 2d       	mov	r17, r13
		spi_master_transmit( *pBuffer++ );
     6f2:	f8 01       	movw	r30, r16
     6f4:	61 91       	ld	r22, Z+
     6f6:	8f 01       	movw	r16, r30
     6f8:	c7 01       	movw	r24, r14
     6fa:	b7 df       	rcall	.-146    	; 0x66a <_ZN3rtc19spi_master_transmitEh>
     6fc:	21 97       	sbiw	r28, 0x01	; 1
void rtc::write_block(unsigned char iAddr, unsigned char *pBuffer, unsigned int iCount){

	spi_select( );

	spi_master_transmit( iAddr + 0x80 );
	while( iCount-- ){
     6fe:	c9 f7       	brne	.-14     	; 0x6f2 <_ZN3rtc11write_blockEhPhj+0x2c>
		spi_master_transmit( *pBuffer++ );
	}

	spi_deselect( );
     700:	c7 01       	movw	r24, r14
     702:	a9 df       	rcall	.-174    	; 0x656 <_ZN3rtc12spi_deselectEv>
}
     704:	df 91       	pop	r29
     706:	cf 91       	pop	r28
     708:	1f 91       	pop	r17
     70a:	0f 91       	pop	r16
     70c:	ff 90       	pop	r15
     70e:	ef 90       	pop	r14
     710:	df 90       	pop	r13
     712:	cf 90       	pop	r12
     714:	08 95       	ret

00000716 <_ZN3rtcC1Ev>:
#include <avr/io.h>
#include <util/delay.h>
#include "rtc.h"


rtc::rtc(){
     716:	0f 93       	push	r16
     718:	1f 93       	push	r17
     71a:	cf 93       	push	r28
     71c:	df 93       	push	r29
     71e:	00 d0       	rcall	.+0      	; 0x720 <_ZN3rtcC1Ev+0xa>
     720:	cd b7       	in	r28, 0x3d	; 61
     722:	de b7       	in	r29, 0x3e	; 62
     724:	8c 01       	movw	r16, r24
	
	uint8_t tc = 0;
     726:	1a 82       	std	Y+2, r1	; 0x02
	uint8_t tc2 = 0xFF;
     728:	8f ef       	ldi	r24, 0xFF	; 255
     72a:	89 83       	std	Y+1, r24	; 0x01


	init();
     72c:	c8 01       	movw	r24, r16
     72e:	95 df       	rcall	.-214    	; 0x65a <_ZN3rtc4initEv>
	write_block(0x0F,&tc,1);	// Enable timer and unwrite protect memory
     730:	21 e0       	ldi	r18, 0x01	; 1
     732:	30 e0       	ldi	r19, 0x00	; 0
     734:	ae 01       	movw	r20, r28
     736:	4e 5f       	subi	r20, 0xFE	; 254
     738:	5f 4f       	sbci	r21, 0xFF	; 255
     73a:	6f e0       	ldi	r22, 0x0F	; 15
     73c:	c8 01       	movw	r24, r16
     73e:	c3 df       	rcall	.-122    	; 0x6c6 <_ZN3rtc11write_blockEhPhj>
	write_block(0x82,&tc2,1);	// set 12hr format
     740:	21 e0       	ldi	r18, 0x01	; 1
     742:	30 e0       	ldi	r19, 0x00	; 0
     744:	ae 01       	movw	r20, r28
     746:	4f 5f       	subi	r20, 0xFF	; 255
     748:	5f 4f       	sbci	r21, 0xFF	; 255
     74a:	62 e8       	ldi	r22, 0x82	; 130
     74c:	c8 01       	movw	r24, r16
     74e:	bb df       	rcall	.-138    	; 0x6c6 <_ZN3rtc11write_blockEhPhj>
	
}
     750:	0f 90       	pop	r0
     752:	0f 90       	pop	r0
     754:	df 91       	pop	r29
     756:	cf 91       	pop	r28
     758:	1f 91       	pop	r17
     75a:	0f 91       	pop	r16
     75c:	08 95       	ret

0000075e <_ZN3rtc8get_timeEv>:

	spi_deselect( );
}


rtc_time rtc::get_time( ){
     75e:	cf 93       	push	r28
     760:	df 93       	push	r29
     762:	cd b7       	in	r28, 0x3d	; 61
     764:	de b7       	in	r29, 0x3e	; 62
     766:	2e 97       	sbiw	r28, 0x0e	; 14
     768:	0f b6       	in	r0, 0x3f	; 63
     76a:	f8 94       	cli
     76c:	de bf       	out	0x3e, r29	; 62
     76e:	0f be       	out	0x3f, r0	; 63
     770:	cd bf       	out	0x3d, r28	; 61

	rtc_time rtmToConvert;


	read_block( 0, ( unsigned char * )&rtmToConvert, sizeof( rtc_time ));
     772:	27 e0       	ldi	r18, 0x07	; 7
     774:	30 e0       	ldi	r19, 0x00	; 0
     776:	ae 01       	movw	r20, r28
     778:	48 5f       	subi	r20, 0xF8	; 248
     77a:	5f 4f       	sbci	r21, 0xFF	; 255
     77c:	60 e0       	ldi	r22, 0x00	; 0
     77e:	7b df       	rcall	.-266    	; 0x676 <_ZN3rtc10read_blockEhPhj>

	return rtmToConvert;
     780:	87 e0       	ldi	r24, 0x07	; 7
     782:	fe 01       	movw	r30, r28
     784:	38 96       	adiw	r30, 0x08	; 8
     786:	de 01       	movw	r26, r28
     788:	11 96       	adiw	r26, 0x01	; 1
     78a:	01 90       	ld	r0, Z+
     78c:	0d 92       	st	X+, r0
     78e:	8a 95       	dec	r24
     790:	e1 f7       	brne	.-8      	; 0x78a <_ZN3rtc8get_timeEv+0x2c>
     792:	29 81       	ldd	r18, Y+1	; 0x01
     794:	3a 81       	ldd	r19, Y+2	; 0x02
     796:	4b 81       	ldd	r20, Y+3	; 0x03
     798:	5c 81       	ldd	r21, Y+4	; 0x04
     79a:	6d 81       	ldd	r22, Y+5	; 0x05
     79c:	7e 81       	ldd	r23, Y+6	; 0x06
}
     79e:	8f 81       	ldd	r24, Y+7	; 0x07
     7a0:	90 e0       	ldi	r25, 0x00	; 0
     7a2:	2e 96       	adiw	r28, 0x0e	; 14
     7a4:	0f b6       	in	r0, 0x3f	; 63
     7a6:	f8 94       	cli
     7a8:	de bf       	out	0x3e, r29	; 62
     7aa:	0f be       	out	0x3f, r0	; 63
     7ac:	cd bf       	out	0x3d, r28	; 61
     7ae:	df 91       	pop	r29
     7b0:	cf 91       	pop	r28
     7b2:	08 95       	ret

000007b4 <_ZN3rtc8set_timeEP8rtc_time>:


void rtc::set_time( rtc_time* rtmSetTime ){
     7b4:	ab 01       	movw	r20, r22

	write_block( 0, ( unsigned char * )rtmSetTime, sizeof(rtc_time));
     7b6:	27 e0       	ldi	r18, 0x07	; 7
     7b8:	30 e0       	ldi	r19, 0x00	; 0
     7ba:	60 e0       	ldi	r22, 0x00	; 0
     7bc:	84 cf       	rjmp	.-248    	; 0x6c6 <_ZN3rtc11write_blockEhPhj>
     7be:	08 95       	ret

000007c0 <_ZN3rtc11rtm_to_charE8rtc_timePhj>:
}


void rtc::rtm_to_char( rtc_time rtmToConvert, unsigned char* uchToReturn, unsigned int valCharLen ){
     7c0:	8f 92       	push	r8
     7c2:	9f 92       	push	r9
     7c4:	af 92       	push	r10
     7c6:	bf 92       	push	r11
     7c8:	cf 92       	push	r12
     7ca:	df 92       	push	r13
     7cc:	ef 92       	push	r14
     7ce:	ff 92       	push	r15
     7d0:	0f 93       	push	r16
     7d2:	1f 93       	push	r17
     7d4:	cf 93       	push	r28
     7d6:	df 93       	push	r29
     7d8:	cd b7       	in	r28, 0x3d	; 61
     7da:	de b7       	in	r29, 0x3e	; 62
     7dc:	27 97       	sbiw	r28, 0x07	; 7
     7de:	0f b6       	in	r0, 0x3f	; 63
     7e0:	f8 94       	cli
     7e2:	de bf       	out	0x3e, r29	; 62
     7e4:	0f be       	out	0x3f, r0	; 63
     7e6:	cd bf       	out	0x3d, r28	; 61
     7e8:	09 83       	std	Y+1, r16	; 0x01
     7ea:	1a 83       	std	Y+2, r17	; 0x02
     7ec:	2b 83       	std	Y+3, r18	; 0x03
     7ee:	3c 83       	std	Y+4, r19	; 0x04
     7f0:	4d 83       	std	Y+5, r20	; 0x05
     7f2:	5e 83       	std	Y+6, r21	; 0x06
     7f4:	6f 83       	std	Y+7, r22	; 0x07
     7f6:	c7 01       	movw	r24, r14
     7f8:	a6 01       	movw	r20, r12
	uchTimeOut[valTextOffset + 6] = valSecs >> 8;
	uchTimeOut[valTextOffset + 7] = valSecs & 0x00FF;
	
	memcpy( uchToReturn, uchTimeOut, valCharLen );

}
     7fa:	ad b6       	in	r10, 0x3d	; 61
     7fc:	be b6       	in	r11, 0x3e	; 62
     7fe:	f1 2e       	mov	r15, r17
     800:	32 2f       	mov	r19, r18
}


void rtc::rtm_to_char( rtc_time rtmToConvert, unsigned char* uchToReturn, unsigned int valCharLen ){
	
	unsigned char uchTimeOut[ valCharLen ];
     802:	6d b7       	in	r22, 0x3d	; 61
     804:	7e b7       	in	r23, 0x3e	; 62
     806:	6c 19       	sub	r22, r12
     808:	7d 09       	sbc	r23, r13
     80a:	0f b6       	in	r0, 0x3f	; 63
     80c:	f8 94       	cli
     80e:	7e bf       	out	0x3e, r23	; 62
     810:	0f be       	out	0x3f, r0	; 63
     812:	6d bf       	out	0x3d, r22	; 61
     814:	6f 5f       	subi	r22, 0xFF	; 255
     816:	7f 4f       	sbci	r23, 0xFF	; 255
	uint8_t valTimeLength = 8;
	unsigned int valTextOffset = ( valCharLen - valTimeLength ) / 2;
     818:	46 01       	movw	r8, r12
     81a:	28 e0       	ldi	r18, 0x08	; 8
     81c:	82 1a       	sub	r8, r18
     81e:	91 08       	sbc	r9, r1
     820:	96 94       	lsr	r9
     822:	87 94       	ror	r8
	uint16_t valSecs = 0x2020;
	uint16_t valMins = 0x20;
	uint16_t valHours = 0x20;
	
	
	for(unsigned int valN = 0; valN < valCharLen; valN++ ){
     824:	c1 14       	cp	r12, r1
     826:	d1 04       	cpc	r13, r1
     828:	49 f0       	breq	.+18     	; 0x83c <_ZN3rtc11rtm_to_charE8rtc_timePhj+0x7c>
     82a:	fb 01       	movw	r30, r22
     82c:	db 01       	movw	r26, r22
     82e:	ac 0d       	add	r26, r12
     830:	bd 1d       	adc	r27, r13
		uchTimeOut[valN] = ' ';
     832:	20 e2       	ldi	r18, 0x20	; 32
     834:	21 93       	st	Z+, r18
	uint16_t valSecs = 0x2020;
	uint16_t valMins = 0x20;
	uint16_t valHours = 0x20;
	
	
	for(unsigned int valN = 0; valN < valCharLen; valN++ ){
     836:	ea 17       	cp	r30, r26
     838:	fb 07       	cpc	r31, r27
     83a:	e1 f7       	brne	.-8      	; 0x834 <_ZN3rtc11rtm_to_charE8rtc_timePhj+0x74>
		uchTimeOut[valN] = ' ';
	}

	valSecs &= 0x0000;
	valSecs |= (( rtmToConvert.ucSeconds & 0xF0 ) + 0x0300 ) << 4;
     83c:	e0 2f       	mov	r30, r16
     83e:	e0 7f       	andi	r30, 0xF0	; 240
     840:	f0 e0       	ldi	r31, 0x00	; 0
     842:	fd 5f       	subi	r31, 0xFD	; 253
     844:	df 01       	movw	r26, r30
     846:	a2 95       	swap	r26
     848:	b2 95       	swap	r27
     84a:	b0 7f       	andi	r27, 0xF0	; 240
     84c:	ba 27       	eor	r27, r26
     84e:	a0 7f       	andi	r26, 0xF0	; 240
     850:	ba 27       	eor	r27, r26
	valSecs |= ( rtmToConvert.ucSeconds & 0x0F) + 0x0030;
     852:	0f 70       	andi	r16, 0x0F	; 15
     854:	e0 2f       	mov	r30, r16
     856:	f0 e0       	ldi	r31, 0x00	; 0
     858:	f0 96       	adiw	r30, 0x30	; 48
     85a:	6d 01       	movw	r12, r26
     85c:	ce 2a       	or	r12, r30
     85e:	df 2a       	or	r13, r31
	valMins &= 0x0000;
	valMins |= (( rtmToConvert.ucMinutes & 0xF0 ) + 0x0300 ) << 4;
     860:	af 2d       	mov	r26, r15
     862:	a0 7f       	andi	r26, 0xF0	; 240
     864:	b0 e0       	ldi	r27, 0x00	; 0
     866:	bd 5f       	subi	r27, 0xFD	; 253
     868:	8d 01       	movw	r16, r26
     86a:	02 95       	swap	r16
     86c:	12 95       	swap	r17
     86e:	10 7f       	andi	r17, 0xF0	; 240
     870:	10 27       	eor	r17, r16
     872:	00 7f       	andi	r16, 0xF0	; 240
     874:	10 27       	eor	r17, r16
	valMins |= ( rtmToConvert.ucMinutes & 0x0F) + 0x0030;
     876:	af 2d       	mov	r26, r15
     878:	af 70       	andi	r26, 0x0F	; 15
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	d0 96       	adiw	r26, 0x30	; 48
     87e:	a0 2b       	or	r26, r16
     880:	b1 2b       	or	r27, r17
	valHours &= 0x0000;
	valHours |= (( rtmToConvert.ucHours & 0x10 ) + 0x0300 ) << 4;
     882:	03 2f       	mov	r16, r19
     884:	00 71       	andi	r16, 0x10	; 16
     886:	10 e0       	ldi	r17, 0x00	; 0
     888:	1d 5f       	subi	r17, 0xFD	; 253
     88a:	02 95       	swap	r16
     88c:	12 95       	swap	r17
     88e:	10 7f       	andi	r17, 0xF0	; 240
     890:	10 27       	eor	r17, r16
     892:	00 7f       	andi	r16, 0xF0	; 240
     894:	10 27       	eor	r17, r16
	valHours |= ( rtmToConvert.ucHours & 0x0F) + 0x0030;
     896:	3f 70       	andi	r19, 0x0F	; 15
     898:	23 2f       	mov	r18, r19
     89a:	30 e0       	ldi	r19, 0x00	; 0
     89c:	20 5d       	subi	r18, 0xD0	; 208
     89e:	3f 4f       	sbci	r19, 0xFF	; 255
     8a0:	20 2b       	or	r18, r16
     8a2:	31 2b       	or	r19, r17
	uchTimeOut[valTextOffset] = valHours >> 8;
     8a4:	fb 01       	movw	r30, r22
     8a6:	e8 0d       	add	r30, r8
     8a8:	f9 1d       	adc	r31, r9
     8aa:	30 83       	st	Z, r19
	uchTimeOut[valTextOffset + 1] = valHours & 0x00FF;
     8ac:	21 83       	std	Z+1, r18	; 0x01
	uchTimeOut[valTextOffset + 2] = ':';
     8ae:	2a e3       	ldi	r18, 0x3A	; 58
     8b0:	22 83       	std	Z+2, r18	; 0x02
	uchTimeOut[valTextOffset + 3] = valMins >> 8;
     8b2:	b3 83       	std	Z+3, r27	; 0x03
	uchTimeOut[valTextOffset + 4] = valMins & 0x00FF;
     8b4:	a4 83       	std	Z+4, r26	; 0x04
	uchTimeOut[valTextOffset + 5] = ':';
     8b6:	25 83       	std	Z+5, r18	; 0x05
	uchTimeOut[valTextOffset + 6] = valSecs >> 8;
     8b8:	d6 82       	std	Z+6, r13	; 0x06
	uchTimeOut[valTextOffset + 7] = valSecs & 0x00FF;
     8ba:	c7 82       	std	Z+7, r12	; 0x07
	
	memcpy( uchToReturn, uchTimeOut, valCharLen );
     8bc:	83 d4       	rcall	.+2310   	; 0x11c4 <memcpy>

}
     8be:	0f b6       	in	r0, 0x3f	; 63
     8c0:	f8 94       	cli
     8c2:	be be       	out	0x3e, r11	; 62
     8c4:	0f be       	out	0x3f, r0	; 63
     8c6:	ad be       	out	0x3d, r10	; 61
     8c8:	27 96       	adiw	r28, 0x07	; 7
     8ca:	0f b6       	in	r0, 0x3f	; 63
     8cc:	f8 94       	cli
     8ce:	de bf       	out	0x3e, r29	; 62
     8d0:	0f be       	out	0x3f, r0	; 63
     8d2:	cd bf       	out	0x3d, r28	; 61
     8d4:	df 91       	pop	r29
     8d6:	cf 91       	pop	r28
     8d8:	1f 91       	pop	r17
     8da:	0f 91       	pop	r16
     8dc:	ff 90       	pop	r15
     8de:	ef 90       	pop	r14
     8e0:	df 90       	pop	r13
     8e2:	cf 90       	pop	r12
     8e4:	bf 90       	pop	r11
     8e6:	af 90       	pop	r10
     8e8:	9f 90       	pop	r9
     8ea:	8f 90       	pop	r8
     8ec:	08 95       	ret

000008ee <vfprintf>:
     8ee:	2f 92       	push	r2
     8f0:	3f 92       	push	r3
     8f2:	4f 92       	push	r4
     8f4:	5f 92       	push	r5
     8f6:	6f 92       	push	r6
     8f8:	7f 92       	push	r7
     8fa:	8f 92       	push	r8
     8fc:	9f 92       	push	r9
     8fe:	af 92       	push	r10
     900:	bf 92       	push	r11
     902:	cf 92       	push	r12
     904:	df 92       	push	r13
     906:	ef 92       	push	r14
     908:	ff 92       	push	r15
     90a:	0f 93       	push	r16
     90c:	1f 93       	push	r17
     90e:	cf 93       	push	r28
     910:	df 93       	push	r29
     912:	cd b7       	in	r28, 0x3d	; 61
     914:	de b7       	in	r29, 0x3e	; 62
     916:	63 97       	sbiw	r28, 0x13	; 19
     918:	0f b6       	in	r0, 0x3f	; 63
     91a:	f8 94       	cli
     91c:	de bf       	out	0x3e, r29	; 62
     91e:	0f be       	out	0x3f, r0	; 63
     920:	cd bf       	out	0x3d, r28	; 61
     922:	6c 01       	movw	r12, r24
     924:	4b 01       	movw	r8, r22
     926:	2a 01       	movw	r4, r20
     928:	fc 01       	movw	r30, r24
     92a:	17 82       	std	Z+7, r1	; 0x07
     92c:	16 82       	std	Z+6, r1	; 0x06
     92e:	83 81       	ldd	r24, Z+3	; 0x03
     930:	81 ff       	sbrs	r24, 1
     932:	29 c3       	rjmp	.+1618   	; 0xf86 <vfprintf+0x698>
     934:	ae 01       	movw	r20, r28
     936:	4f 5f       	subi	r20, 0xFF	; 255
     938:	5f 4f       	sbci	r21, 0xFF	; 255
     93a:	3a 01       	movw	r6, r20
     93c:	f6 01       	movw	r30, r12
     93e:	93 81       	ldd	r25, Z+3	; 0x03
     940:	f4 01       	movw	r30, r8
     942:	93 fd       	sbrc	r25, 3
     944:	85 91       	lpm	r24, Z+
     946:	93 ff       	sbrs	r25, 3
     948:	81 91       	ld	r24, Z+
     94a:	4f 01       	movw	r8, r30
     94c:	88 23       	and	r24, r24
     94e:	09 f4       	brne	.+2      	; 0x952 <vfprintf+0x64>
     950:	16 c3       	rjmp	.+1580   	; 0xf7e <vfprintf+0x690>
     952:	85 32       	cpi	r24, 0x25	; 37
     954:	39 f4       	brne	.+14     	; 0x964 <vfprintf+0x76>
     956:	93 fd       	sbrc	r25, 3
     958:	85 91       	lpm	r24, Z+
     95a:	93 ff       	sbrs	r25, 3
     95c:	81 91       	ld	r24, Z+
     95e:	4f 01       	movw	r8, r30
     960:	85 32       	cpi	r24, 0x25	; 37
     962:	31 f4       	brne	.+12     	; 0x970 <vfprintf+0x82>
     964:	b6 01       	movw	r22, r12
     966:	90 e0       	ldi	r25, 0x00	; 0
     968:	41 d4       	rcall	.+2178   	; 0x11ec <fputc>
     96a:	52 01       	movw	r10, r4
     96c:	25 01       	movw	r4, r10
     96e:	e6 cf       	rjmp	.-52     	; 0x93c <vfprintf+0x4e>
     970:	10 e0       	ldi	r17, 0x00	; 0
     972:	f1 2c       	mov	r15, r1
     974:	20 e0       	ldi	r18, 0x00	; 0
     976:	20 32       	cpi	r18, 0x20	; 32
     978:	a0 f4       	brcc	.+40     	; 0x9a2 <vfprintf+0xb4>
     97a:	8b 32       	cpi	r24, 0x2B	; 43
     97c:	69 f0       	breq	.+26     	; 0x998 <vfprintf+0xaa>
     97e:	30 f4       	brcc	.+12     	; 0x98c <vfprintf+0x9e>
     980:	80 32       	cpi	r24, 0x20	; 32
     982:	59 f0       	breq	.+22     	; 0x99a <vfprintf+0xac>
     984:	83 32       	cpi	r24, 0x23	; 35
     986:	69 f4       	brne	.+26     	; 0x9a2 <vfprintf+0xb4>
     988:	20 61       	ori	r18, 0x10	; 16
     98a:	2c c0       	rjmp	.+88     	; 0x9e4 <vfprintf+0xf6>
     98c:	8d 32       	cpi	r24, 0x2D	; 45
     98e:	39 f0       	breq	.+14     	; 0x99e <vfprintf+0xb0>
     990:	80 33       	cpi	r24, 0x30	; 48
     992:	39 f4       	brne	.+14     	; 0x9a2 <vfprintf+0xb4>
     994:	21 60       	ori	r18, 0x01	; 1
     996:	26 c0       	rjmp	.+76     	; 0x9e4 <vfprintf+0xf6>
     998:	22 60       	ori	r18, 0x02	; 2
     99a:	24 60       	ori	r18, 0x04	; 4
     99c:	23 c0       	rjmp	.+70     	; 0x9e4 <vfprintf+0xf6>
     99e:	28 60       	ori	r18, 0x08	; 8
     9a0:	21 c0       	rjmp	.+66     	; 0x9e4 <vfprintf+0xf6>
     9a2:	27 fd       	sbrc	r18, 7
     9a4:	27 c0       	rjmp	.+78     	; 0x9f4 <vfprintf+0x106>
     9a6:	30 ed       	ldi	r19, 0xD0	; 208
     9a8:	38 0f       	add	r19, r24
     9aa:	3a 30       	cpi	r19, 0x0A	; 10
     9ac:	78 f4       	brcc	.+30     	; 0x9cc <vfprintf+0xde>
     9ae:	26 ff       	sbrs	r18, 6
     9b0:	06 c0       	rjmp	.+12     	; 0x9be <vfprintf+0xd0>
     9b2:	fa e0       	ldi	r31, 0x0A	; 10
     9b4:	1f 9f       	mul	r17, r31
     9b6:	30 0d       	add	r19, r0
     9b8:	11 24       	eor	r1, r1
     9ba:	13 2f       	mov	r17, r19
     9bc:	13 c0       	rjmp	.+38     	; 0x9e4 <vfprintf+0xf6>
     9be:	4a e0       	ldi	r20, 0x0A	; 10
     9c0:	f4 9e       	mul	r15, r20
     9c2:	30 0d       	add	r19, r0
     9c4:	11 24       	eor	r1, r1
     9c6:	f3 2e       	mov	r15, r19
     9c8:	20 62       	ori	r18, 0x20	; 32
     9ca:	0c c0       	rjmp	.+24     	; 0x9e4 <vfprintf+0xf6>
     9cc:	8e 32       	cpi	r24, 0x2E	; 46
     9ce:	21 f4       	brne	.+8      	; 0x9d8 <vfprintf+0xea>
     9d0:	26 fd       	sbrc	r18, 6
     9d2:	d5 c2       	rjmp	.+1450   	; 0xf7e <vfprintf+0x690>
     9d4:	20 64       	ori	r18, 0x40	; 64
     9d6:	06 c0       	rjmp	.+12     	; 0x9e4 <vfprintf+0xf6>
     9d8:	8c 36       	cpi	r24, 0x6C	; 108
     9da:	11 f4       	brne	.+4      	; 0x9e0 <vfprintf+0xf2>
     9dc:	20 68       	ori	r18, 0x80	; 128
     9de:	02 c0       	rjmp	.+4      	; 0x9e4 <vfprintf+0xf6>
     9e0:	88 36       	cpi	r24, 0x68	; 104
     9e2:	41 f4       	brne	.+16     	; 0x9f4 <vfprintf+0x106>
     9e4:	f4 01       	movw	r30, r8
     9e6:	93 fd       	sbrc	r25, 3
     9e8:	85 91       	lpm	r24, Z+
     9ea:	93 ff       	sbrs	r25, 3
     9ec:	81 91       	ld	r24, Z+
     9ee:	4f 01       	movw	r8, r30
     9f0:	81 11       	cpse	r24, r1
     9f2:	c1 cf       	rjmp	.-126    	; 0x976 <vfprintf+0x88>
     9f4:	9b eb       	ldi	r25, 0xBB	; 187
     9f6:	98 0f       	add	r25, r24
     9f8:	93 30       	cpi	r25, 0x03	; 3
     9fa:	18 f4       	brcc	.+6      	; 0xa02 <vfprintf+0x114>
     9fc:	20 61       	ori	r18, 0x10	; 16
     9fe:	80 5e       	subi	r24, 0xE0	; 224
     a00:	06 c0       	rjmp	.+12     	; 0xa0e <vfprintf+0x120>
     a02:	9b e9       	ldi	r25, 0x9B	; 155
     a04:	98 0f       	add	r25, r24
     a06:	93 30       	cpi	r25, 0x03	; 3
     a08:	08 f0       	brcs	.+2      	; 0xa0c <vfprintf+0x11e>
     a0a:	64 c1       	rjmp	.+712    	; 0xcd4 <vfprintf+0x3e6>
     a0c:	2f 7e       	andi	r18, 0xEF	; 239
     a0e:	26 ff       	sbrs	r18, 6
     a10:	16 e0       	ldi	r17, 0x06	; 6
     a12:	2f 73       	andi	r18, 0x3F	; 63
     a14:	32 2e       	mov	r3, r18
     a16:	85 36       	cpi	r24, 0x65	; 101
     a18:	19 f4       	brne	.+6      	; 0xa20 <vfprintf+0x132>
     a1a:	20 64       	ori	r18, 0x40	; 64
     a1c:	32 2e       	mov	r3, r18
     a1e:	08 c0       	rjmp	.+16     	; 0xa30 <vfprintf+0x142>
     a20:	86 36       	cpi	r24, 0x66	; 102
     a22:	21 f4       	brne	.+8      	; 0xa2c <vfprintf+0x13e>
     a24:	f2 2f       	mov	r31, r18
     a26:	f0 68       	ori	r31, 0x80	; 128
     a28:	3f 2e       	mov	r3, r31
     a2a:	02 c0       	rjmp	.+4      	; 0xa30 <vfprintf+0x142>
     a2c:	11 11       	cpse	r17, r1
     a2e:	11 50       	subi	r17, 0x01	; 1
     a30:	37 fe       	sbrs	r3, 7
     a32:	07 c0       	rjmp	.+14     	; 0xa42 <vfprintf+0x154>
     a34:	1c 33       	cpi	r17, 0x3C	; 60
     a36:	50 f4       	brcc	.+20     	; 0xa4c <vfprintf+0x15e>
     a38:	ee 24       	eor	r14, r14
     a3a:	e3 94       	inc	r14
     a3c:	e1 0e       	add	r14, r17
     a3e:	27 e0       	ldi	r18, 0x07	; 7
     a40:	0b c0       	rjmp	.+22     	; 0xa58 <vfprintf+0x16a>
     a42:	18 30       	cpi	r17, 0x08	; 8
     a44:	38 f0       	brcs	.+14     	; 0xa54 <vfprintf+0x166>
     a46:	27 e0       	ldi	r18, 0x07	; 7
     a48:	17 e0       	ldi	r17, 0x07	; 7
     a4a:	05 c0       	rjmp	.+10     	; 0xa56 <vfprintf+0x168>
     a4c:	27 e0       	ldi	r18, 0x07	; 7
     a4e:	4c e3       	ldi	r20, 0x3C	; 60
     a50:	e4 2e       	mov	r14, r20
     a52:	02 c0       	rjmp	.+4      	; 0xa58 <vfprintf+0x16a>
     a54:	21 2f       	mov	r18, r17
     a56:	e1 2c       	mov	r14, r1
     a58:	52 01       	movw	r10, r4
     a5a:	44 e0       	ldi	r20, 0x04	; 4
     a5c:	a4 0e       	add	r10, r20
     a5e:	b1 1c       	adc	r11, r1
     a60:	f2 01       	movw	r30, r4
     a62:	60 81       	ld	r22, Z
     a64:	71 81       	ldd	r23, Z+1	; 0x01
     a66:	82 81       	ldd	r24, Z+2	; 0x02
     a68:	93 81       	ldd	r25, Z+3	; 0x03
     a6a:	0e 2d       	mov	r16, r14
     a6c:	a3 01       	movw	r20, r6
     a6e:	c7 d2       	rcall	.+1422   	; 0xffe <__ftoa_engine>
     a70:	2c 01       	movw	r4, r24
     a72:	09 81       	ldd	r16, Y+1	; 0x01
     a74:	00 ff       	sbrs	r16, 0
     a76:	02 c0       	rjmp	.+4      	; 0xa7c <vfprintf+0x18e>
     a78:	03 ff       	sbrs	r16, 3
     a7a:	07 c0       	rjmp	.+14     	; 0xa8a <vfprintf+0x19c>
     a7c:	31 fc       	sbrc	r3, 1
     a7e:	08 c0       	rjmp	.+16     	; 0xa90 <vfprintf+0x1a2>
     a80:	32 fe       	sbrs	r3, 2
     a82:	09 c0       	rjmp	.+18     	; 0xa96 <vfprintf+0x1a8>
     a84:	30 e2       	ldi	r19, 0x20	; 32
     a86:	23 2e       	mov	r2, r19
     a88:	07 c0       	rjmp	.+14     	; 0xa98 <vfprintf+0x1aa>
     a8a:	2d e2       	ldi	r18, 0x2D	; 45
     a8c:	22 2e       	mov	r2, r18
     a8e:	04 c0       	rjmp	.+8      	; 0xa98 <vfprintf+0x1aa>
     a90:	9b e2       	ldi	r25, 0x2B	; 43
     a92:	29 2e       	mov	r2, r25
     a94:	01 c0       	rjmp	.+2      	; 0xa98 <vfprintf+0x1aa>
     a96:	21 2c       	mov	r2, r1
     a98:	80 2f       	mov	r24, r16
     a9a:	8c 70       	andi	r24, 0x0C	; 12
     a9c:	19 f0       	breq	.+6      	; 0xaa4 <vfprintf+0x1b6>
     a9e:	21 10       	cpse	r2, r1
     aa0:	51 c2       	rjmp	.+1186   	; 0xf44 <vfprintf+0x656>
     aa2:	8d c2       	rjmp	.+1306   	; 0xfbe <vfprintf+0x6d0>
     aa4:	37 fe       	sbrs	r3, 7
     aa6:	0f c0       	rjmp	.+30     	; 0xac6 <vfprintf+0x1d8>
     aa8:	e4 0c       	add	r14, r4
     aaa:	04 ff       	sbrs	r16, 4
     aac:	04 c0       	rjmp	.+8      	; 0xab6 <vfprintf+0x1c8>
     aae:	8a 81       	ldd	r24, Y+2	; 0x02
     ab0:	81 33       	cpi	r24, 0x31	; 49
     ab2:	09 f4       	brne	.+2      	; 0xab6 <vfprintf+0x1c8>
     ab4:	ea 94       	dec	r14
     ab6:	1e 14       	cp	r1, r14
     ab8:	74 f5       	brge	.+92     	; 0xb16 <vfprintf+0x228>
     aba:	f8 e0       	ldi	r31, 0x08	; 8
     abc:	fe 15       	cp	r31, r14
     abe:	78 f5       	brcc	.+94     	; 0xb1e <vfprintf+0x230>
     ac0:	88 e0       	ldi	r24, 0x08	; 8
     ac2:	e8 2e       	mov	r14, r24
     ac4:	2c c0       	rjmp	.+88     	; 0xb1e <vfprintf+0x230>
     ac6:	36 fc       	sbrc	r3, 6
     ac8:	2a c0       	rjmp	.+84     	; 0xb1e <vfprintf+0x230>
     aca:	81 2f       	mov	r24, r17
     acc:	90 e0       	ldi	r25, 0x00	; 0
     ace:	84 15       	cp	r24, r4
     ad0:	95 05       	cpc	r25, r5
     ad2:	9c f0       	brlt	.+38     	; 0xafa <vfprintf+0x20c>
     ad4:	2c ef       	ldi	r18, 0xFC	; 252
     ad6:	42 16       	cp	r4, r18
     ad8:	2f ef       	ldi	r18, 0xFF	; 255
     ada:	52 06       	cpc	r5, r18
     adc:	74 f0       	brlt	.+28     	; 0xafa <vfprintf+0x20c>
     ade:	43 2d       	mov	r20, r3
     ae0:	40 68       	ori	r20, 0x80	; 128
     ae2:	34 2e       	mov	r3, r20
     ae4:	0a c0       	rjmp	.+20     	; 0xafa <vfprintf+0x20c>
     ae6:	e2 e0       	ldi	r30, 0x02	; 2
     ae8:	f0 e0       	ldi	r31, 0x00	; 0
     aea:	ec 0f       	add	r30, r28
     aec:	fd 1f       	adc	r31, r29
     aee:	e1 0f       	add	r30, r17
     af0:	f1 1d       	adc	r31, r1
     af2:	80 81       	ld	r24, Z
     af4:	80 33       	cpi	r24, 0x30	; 48
     af6:	19 f4       	brne	.+6      	; 0xafe <vfprintf+0x210>
     af8:	11 50       	subi	r17, 0x01	; 1
     afa:	11 11       	cpse	r17, r1
     afc:	f4 cf       	rjmp	.-24     	; 0xae6 <vfprintf+0x1f8>
     afe:	37 fe       	sbrs	r3, 7
     b00:	0e c0       	rjmp	.+28     	; 0xb1e <vfprintf+0x230>
     b02:	ee 24       	eor	r14, r14
     b04:	e3 94       	inc	r14
     b06:	e1 0e       	add	r14, r17
     b08:	81 2f       	mov	r24, r17
     b0a:	90 e0       	ldi	r25, 0x00	; 0
     b0c:	48 16       	cp	r4, r24
     b0e:	59 06       	cpc	r5, r25
     b10:	2c f4       	brge	.+10     	; 0xb1c <vfprintf+0x22e>
     b12:	14 19       	sub	r17, r4
     b14:	04 c0       	rjmp	.+8      	; 0xb1e <vfprintf+0x230>
     b16:	ee 24       	eor	r14, r14
     b18:	e3 94       	inc	r14
     b1a:	01 c0       	rjmp	.+2      	; 0xb1e <vfprintf+0x230>
     b1c:	10 e0       	ldi	r17, 0x00	; 0
     b1e:	37 fe       	sbrs	r3, 7
     b20:	06 c0       	rjmp	.+12     	; 0xb2e <vfprintf+0x240>
     b22:	14 14       	cp	r1, r4
     b24:	15 04       	cpc	r1, r5
     b26:	34 f4       	brge	.+12     	; 0xb34 <vfprintf+0x246>
     b28:	c2 01       	movw	r24, r4
     b2a:	01 96       	adiw	r24, 0x01	; 1
     b2c:	05 c0       	rjmp	.+10     	; 0xb38 <vfprintf+0x24a>
     b2e:	85 e0       	ldi	r24, 0x05	; 5
     b30:	90 e0       	ldi	r25, 0x00	; 0
     b32:	02 c0       	rjmp	.+4      	; 0xb38 <vfprintf+0x24a>
     b34:	81 e0       	ldi	r24, 0x01	; 1
     b36:	90 e0       	ldi	r25, 0x00	; 0
     b38:	21 10       	cpse	r2, r1
     b3a:	01 96       	adiw	r24, 0x01	; 1
     b3c:	11 23       	and	r17, r17
     b3e:	31 f0       	breq	.+12     	; 0xb4c <vfprintf+0x25e>
     b40:	21 2f       	mov	r18, r17
     b42:	30 e0       	ldi	r19, 0x00	; 0
     b44:	2f 5f       	subi	r18, 0xFF	; 255
     b46:	3f 4f       	sbci	r19, 0xFF	; 255
     b48:	82 0f       	add	r24, r18
     b4a:	93 1f       	adc	r25, r19
     b4c:	2f 2d       	mov	r18, r15
     b4e:	30 e0       	ldi	r19, 0x00	; 0
     b50:	82 17       	cp	r24, r18
     b52:	93 07       	cpc	r25, r19
     b54:	14 f4       	brge	.+4      	; 0xb5a <vfprintf+0x26c>
     b56:	f8 1a       	sub	r15, r24
     b58:	01 c0       	rjmp	.+2      	; 0xb5c <vfprintf+0x26e>
     b5a:	f1 2c       	mov	r15, r1
     b5c:	83 2d       	mov	r24, r3
     b5e:	89 70       	andi	r24, 0x09	; 9
     b60:	41 f4       	brne	.+16     	; 0xb72 <vfprintf+0x284>
     b62:	ff 20       	and	r15, r15
     b64:	31 f0       	breq	.+12     	; 0xb72 <vfprintf+0x284>
     b66:	b6 01       	movw	r22, r12
     b68:	80 e2       	ldi	r24, 0x20	; 32
     b6a:	90 e0       	ldi	r25, 0x00	; 0
     b6c:	3f d3       	rcall	.+1662   	; 0x11ec <fputc>
     b6e:	fa 94       	dec	r15
     b70:	f8 cf       	rjmp	.-16     	; 0xb62 <vfprintf+0x274>
     b72:	22 20       	and	r2, r2
     b74:	21 f0       	breq	.+8      	; 0xb7e <vfprintf+0x290>
     b76:	b6 01       	movw	r22, r12
     b78:	82 2d       	mov	r24, r2
     b7a:	90 e0       	ldi	r25, 0x00	; 0
     b7c:	37 d3       	rcall	.+1646   	; 0x11ec <fputc>
     b7e:	33 fc       	sbrc	r3, 3
     b80:	08 c0       	rjmp	.+16     	; 0xb92 <vfprintf+0x2a4>
     b82:	ff 20       	and	r15, r15
     b84:	31 f0       	breq	.+12     	; 0xb92 <vfprintf+0x2a4>
     b86:	b6 01       	movw	r22, r12
     b88:	80 e3       	ldi	r24, 0x30	; 48
     b8a:	90 e0       	ldi	r25, 0x00	; 0
     b8c:	2f d3       	rcall	.+1630   	; 0x11ec <fputc>
     b8e:	fa 94       	dec	r15
     b90:	f8 cf       	rjmp	.-16     	; 0xb82 <vfprintf+0x294>
     b92:	37 fe       	sbrs	r3, 7
     b94:	58 c0       	rjmp	.+176    	; 0xc46 <vfprintf+0x358>
     b96:	94 2d       	mov	r25, r4
     b98:	85 2d       	mov	r24, r5
     b9a:	57 fe       	sbrs	r5, 7
     b9c:	02 c0       	rjmp	.+4      	; 0xba2 <vfprintf+0x2b4>
     b9e:	90 e0       	ldi	r25, 0x00	; 0
     ba0:	80 e0       	ldi	r24, 0x00	; 0
     ba2:	29 2e       	mov	r2, r25
     ba4:	38 2e       	mov	r3, r24
     ba6:	20 e0       	ldi	r18, 0x00	; 0
     ba8:	30 e0       	ldi	r19, 0x00	; 0
     baa:	a2 01       	movw	r20, r4
     bac:	4e 19       	sub	r20, r14
     bae:	51 09       	sbc	r21, r1
     bb0:	5d 87       	std	Y+13, r21	; 0x0d
     bb2:	4c 87       	std	Y+12, r20	; 0x0c
     bb4:	a2 01       	movw	r20, r4
     bb6:	42 19       	sub	r20, r2
     bb8:	53 09       	sbc	r21, r3
     bba:	5f 87       	std	Y+15, r21	; 0x0f
     bbc:	4e 87       	std	Y+14, r20	; 0x0e
     bbe:	61 2f       	mov	r22, r17
     bc0:	70 e0       	ldi	r23, 0x00	; 0
     bc2:	44 27       	eor	r20, r20
     bc4:	55 27       	eor	r21, r21
     bc6:	46 1b       	sub	r20, r22
     bc8:	57 0b       	sbc	r21, r23
     bca:	59 8b       	std	Y+17, r21	; 0x11
     bcc:	48 8b       	std	Y+16, r20	; 0x10
     bce:	5f ef       	ldi	r21, 0xFF	; 255
     bd0:	25 16       	cp	r2, r21
     bd2:	35 06       	cpc	r3, r21
     bd4:	41 f4       	brne	.+16     	; 0xbe6 <vfprintf+0x2f8>
     bd6:	b6 01       	movw	r22, r12
     bd8:	8e e2       	ldi	r24, 0x2E	; 46
     bda:	90 e0       	ldi	r25, 0x00	; 0
     bdc:	2a 8b       	std	Y+18, r18	; 0x12
     bde:	3b 8b       	std	Y+19, r19	; 0x13
     be0:	05 d3       	rcall	.+1546   	; 0x11ec <fputc>
     be2:	3b 89       	ldd	r19, Y+19	; 0x13
     be4:	2a 89       	ldd	r18, Y+18	; 0x12
     be6:	42 14       	cp	r4, r2
     be8:	53 04       	cpc	r5, r3
     bea:	6c f0       	brlt	.+26     	; 0xc06 <vfprintf+0x318>
     bec:	4c 85       	ldd	r20, Y+12	; 0x0c
     bee:	5d 85       	ldd	r21, Y+13	; 0x0d
     bf0:	42 15       	cp	r20, r2
     bf2:	53 05       	cpc	r21, r3
     bf4:	44 f4       	brge	.+16     	; 0xc06 <vfprintf+0x318>
     bf6:	ee 85       	ldd	r30, Y+14	; 0x0e
     bf8:	ff 85       	ldd	r31, Y+15	; 0x0f
     bfa:	e2 0f       	add	r30, r18
     bfc:	f3 1f       	adc	r31, r19
     bfe:	e6 0d       	add	r30, r6
     c00:	f7 1d       	adc	r31, r7
     c02:	81 81       	ldd	r24, Z+1	; 0x01
     c04:	01 c0       	rjmp	.+2      	; 0xc08 <vfprintf+0x31a>
     c06:	80 e3       	ldi	r24, 0x30	; 48
     c08:	51 e0       	ldi	r21, 0x01	; 1
     c0a:	25 1a       	sub	r2, r21
     c0c:	31 08       	sbc	r3, r1
     c0e:	2f 5f       	subi	r18, 0xFF	; 255
     c10:	3f 4f       	sbci	r19, 0xFF	; 255
     c12:	48 89       	ldd	r20, Y+16	; 0x10
     c14:	59 89       	ldd	r21, Y+17	; 0x11
     c16:	24 16       	cp	r2, r20
     c18:	35 06       	cpc	r3, r21
     c1a:	44 f0       	brlt	.+16     	; 0xc2c <vfprintf+0x33e>
     c1c:	b6 01       	movw	r22, r12
     c1e:	90 e0       	ldi	r25, 0x00	; 0
     c20:	2a 8b       	std	Y+18, r18	; 0x12
     c22:	3b 8b       	std	Y+19, r19	; 0x13
     c24:	e3 d2       	rcall	.+1478   	; 0x11ec <fputc>
     c26:	2a 89       	ldd	r18, Y+18	; 0x12
     c28:	3b 89       	ldd	r19, Y+19	; 0x13
     c2a:	d1 cf       	rjmp	.-94     	; 0xbce <vfprintf+0x2e0>
     c2c:	24 14       	cp	r2, r4
     c2e:	35 04       	cpc	r3, r5
     c30:	39 f4       	brne	.+14     	; 0xc40 <vfprintf+0x352>
     c32:	9a 81       	ldd	r25, Y+2	; 0x02
     c34:	96 33       	cpi	r25, 0x36	; 54
     c36:	18 f4       	brcc	.+6      	; 0xc3e <vfprintf+0x350>
     c38:	95 33       	cpi	r25, 0x35	; 53
     c3a:	11 f4       	brne	.+4      	; 0xc40 <vfprintf+0x352>
     c3c:	04 ff       	sbrs	r16, 4
     c3e:	81 e3       	ldi	r24, 0x31	; 49
     c40:	b6 01       	movw	r22, r12
     c42:	90 e0       	ldi	r25, 0x00	; 0
     c44:	45 c0       	rjmp	.+138    	; 0xcd0 <vfprintf+0x3e2>
     c46:	8a 81       	ldd	r24, Y+2	; 0x02
     c48:	81 33       	cpi	r24, 0x31	; 49
     c4a:	09 f0       	breq	.+2      	; 0xc4e <vfprintf+0x360>
     c4c:	0f 7e       	andi	r16, 0xEF	; 239
     c4e:	b6 01       	movw	r22, r12
     c50:	90 e0       	ldi	r25, 0x00	; 0
     c52:	cc d2       	rcall	.+1432   	; 0x11ec <fputc>
     c54:	11 11       	cpse	r17, r1
     c56:	05 c0       	rjmp	.+10     	; 0xc62 <vfprintf+0x374>
     c58:	34 fc       	sbrc	r3, 4
     c5a:	16 c0       	rjmp	.+44     	; 0xc88 <vfprintf+0x39a>
     c5c:	85 e6       	ldi	r24, 0x65	; 101
     c5e:	90 e0       	ldi	r25, 0x00	; 0
     c60:	15 c0       	rjmp	.+42     	; 0xc8c <vfprintf+0x39e>
     c62:	b6 01       	movw	r22, r12
     c64:	8e e2       	ldi	r24, 0x2E	; 46
     c66:	90 e0       	ldi	r25, 0x00	; 0
     c68:	c1 d2       	rcall	.+1410   	; 0x11ec <fputc>
     c6a:	82 e0       	ldi	r24, 0x02	; 2
     c6c:	ee 24       	eor	r14, r14
     c6e:	e3 94       	inc	r14
     c70:	e8 0e       	add	r14, r24
     c72:	f3 01       	movw	r30, r6
     c74:	e8 0f       	add	r30, r24
     c76:	f1 1d       	adc	r31, r1
     c78:	80 81       	ld	r24, Z
     c7a:	b6 01       	movw	r22, r12
     c7c:	90 e0       	ldi	r25, 0x00	; 0
     c7e:	b6 d2       	rcall	.+1388   	; 0x11ec <fputc>
     c80:	11 50       	subi	r17, 0x01	; 1
     c82:	8e 2d       	mov	r24, r14
     c84:	99 f7       	brne	.-26     	; 0xc6c <vfprintf+0x37e>
     c86:	e8 cf       	rjmp	.-48     	; 0xc58 <vfprintf+0x36a>
     c88:	85 e4       	ldi	r24, 0x45	; 69
     c8a:	90 e0       	ldi	r25, 0x00	; 0
     c8c:	b6 01       	movw	r22, r12
     c8e:	ae d2       	rcall	.+1372   	; 0x11ec <fputc>
     c90:	57 fc       	sbrc	r5, 7
     c92:	05 c0       	rjmp	.+10     	; 0xc9e <vfprintf+0x3b0>
     c94:	41 14       	cp	r4, r1
     c96:	51 04       	cpc	r5, r1
     c98:	39 f4       	brne	.+14     	; 0xca8 <vfprintf+0x3ba>
     c9a:	04 ff       	sbrs	r16, 4
     c9c:	05 c0       	rjmp	.+10     	; 0xca8 <vfprintf+0x3ba>
     c9e:	51 94       	neg	r5
     ca0:	41 94       	neg	r4
     ca2:	51 08       	sbc	r5, r1
     ca4:	8d e2       	ldi	r24, 0x2D	; 45
     ca6:	01 c0       	rjmp	.+2      	; 0xcaa <vfprintf+0x3bc>
     ca8:	8b e2       	ldi	r24, 0x2B	; 43
     caa:	b6 01       	movw	r22, r12
     cac:	90 e0       	ldi	r25, 0x00	; 0
     cae:	9e d2       	rcall	.+1340   	; 0x11ec <fputc>
     cb0:	80 e3       	ldi	r24, 0x30	; 48
     cb2:	9a e0       	ldi	r25, 0x0A	; 10
     cb4:	49 16       	cp	r4, r25
     cb6:	51 04       	cpc	r5, r1
     cb8:	2c f0       	brlt	.+10     	; 0xcc4 <vfprintf+0x3d6>
     cba:	8f 5f       	subi	r24, 0xFF	; 255
     cbc:	5a e0       	ldi	r21, 0x0A	; 10
     cbe:	45 1a       	sub	r4, r21
     cc0:	51 08       	sbc	r5, r1
     cc2:	f7 cf       	rjmp	.-18     	; 0xcb2 <vfprintf+0x3c4>
     cc4:	b6 01       	movw	r22, r12
     cc6:	90 e0       	ldi	r25, 0x00	; 0
     cc8:	91 d2       	rcall	.+1314   	; 0x11ec <fputc>
     cca:	b6 01       	movw	r22, r12
     ccc:	c2 01       	movw	r24, r4
     cce:	c0 96       	adiw	r24, 0x30	; 48
     cd0:	8d d2       	rcall	.+1306   	; 0x11ec <fputc>
     cd2:	4c c1       	rjmp	.+664    	; 0xf6c <vfprintf+0x67e>
     cd4:	83 36       	cpi	r24, 0x63	; 99
     cd6:	31 f0       	breq	.+12     	; 0xce4 <vfprintf+0x3f6>
     cd8:	83 37       	cpi	r24, 0x73	; 115
     cda:	79 f0       	breq	.+30     	; 0xcfa <vfprintf+0x40c>
     cdc:	83 35       	cpi	r24, 0x53	; 83
     cde:	09 f0       	breq	.+2      	; 0xce2 <vfprintf+0x3f4>
     ce0:	54 c0       	rjmp	.+168    	; 0xd8a <vfprintf+0x49c>
     ce2:	20 c0       	rjmp	.+64     	; 0xd24 <vfprintf+0x436>
     ce4:	52 01       	movw	r10, r4
     ce6:	e2 e0       	ldi	r30, 0x02	; 2
     ce8:	ae 0e       	add	r10, r30
     cea:	b1 1c       	adc	r11, r1
     cec:	f2 01       	movw	r30, r4
     cee:	80 81       	ld	r24, Z
     cf0:	89 83       	std	Y+1, r24	; 0x01
     cf2:	01 e0       	ldi	r16, 0x01	; 1
     cf4:	10 e0       	ldi	r17, 0x00	; 0
     cf6:	23 01       	movw	r4, r6
     cf8:	13 c0       	rjmp	.+38     	; 0xd20 <vfprintf+0x432>
     cfa:	52 01       	movw	r10, r4
     cfc:	f2 e0       	ldi	r31, 0x02	; 2
     cfe:	af 0e       	add	r10, r31
     d00:	b1 1c       	adc	r11, r1
     d02:	f2 01       	movw	r30, r4
     d04:	40 80       	ld	r4, Z
     d06:	51 80       	ldd	r5, Z+1	; 0x01
     d08:	26 ff       	sbrs	r18, 6
     d0a:	03 c0       	rjmp	.+6      	; 0xd12 <vfprintf+0x424>
     d0c:	61 2f       	mov	r22, r17
     d0e:	70 e0       	ldi	r23, 0x00	; 0
     d10:	02 c0       	rjmp	.+4      	; 0xd16 <vfprintf+0x428>
     d12:	6f ef       	ldi	r22, 0xFF	; 255
     d14:	7f ef       	ldi	r23, 0xFF	; 255
     d16:	c2 01       	movw	r24, r4
     d18:	2a 8b       	std	Y+18, r18	; 0x12
     d1a:	5d d2       	rcall	.+1210   	; 0x11d6 <strnlen>
     d1c:	8c 01       	movw	r16, r24
     d1e:	2a 89       	ldd	r18, Y+18	; 0x12
     d20:	2f 77       	andi	r18, 0x7F	; 127
     d22:	14 c0       	rjmp	.+40     	; 0xd4c <vfprintf+0x45e>
     d24:	52 01       	movw	r10, r4
     d26:	f2 e0       	ldi	r31, 0x02	; 2
     d28:	af 0e       	add	r10, r31
     d2a:	b1 1c       	adc	r11, r1
     d2c:	f2 01       	movw	r30, r4
     d2e:	40 80       	ld	r4, Z
     d30:	51 80       	ldd	r5, Z+1	; 0x01
     d32:	26 ff       	sbrs	r18, 6
     d34:	03 c0       	rjmp	.+6      	; 0xd3c <vfprintf+0x44e>
     d36:	61 2f       	mov	r22, r17
     d38:	70 e0       	ldi	r23, 0x00	; 0
     d3a:	02 c0       	rjmp	.+4      	; 0xd40 <vfprintf+0x452>
     d3c:	6f ef       	ldi	r22, 0xFF	; 255
     d3e:	7f ef       	ldi	r23, 0xFF	; 255
     d40:	c2 01       	movw	r24, r4
     d42:	2a 8b       	std	Y+18, r18	; 0x12
     d44:	34 d2       	rcall	.+1128   	; 0x11ae <strnlen_P>
     d46:	8c 01       	movw	r16, r24
     d48:	2a 89       	ldd	r18, Y+18	; 0x12
     d4a:	20 68       	ori	r18, 0x80	; 128
     d4c:	32 2e       	mov	r3, r18
     d4e:	23 fd       	sbrc	r18, 3
     d50:	18 c0       	rjmp	.+48     	; 0xd82 <vfprintf+0x494>
     d52:	8f 2d       	mov	r24, r15
     d54:	90 e0       	ldi	r25, 0x00	; 0
     d56:	08 17       	cp	r16, r24
     d58:	19 07       	cpc	r17, r25
     d5a:	98 f4       	brcc	.+38     	; 0xd82 <vfprintf+0x494>
     d5c:	b6 01       	movw	r22, r12
     d5e:	80 e2       	ldi	r24, 0x20	; 32
     d60:	90 e0       	ldi	r25, 0x00	; 0
     d62:	44 d2       	rcall	.+1160   	; 0x11ec <fputc>
     d64:	fa 94       	dec	r15
     d66:	f5 cf       	rjmp	.-22     	; 0xd52 <vfprintf+0x464>
     d68:	f2 01       	movw	r30, r4
     d6a:	37 fc       	sbrc	r3, 7
     d6c:	85 91       	lpm	r24, Z+
     d6e:	37 fe       	sbrs	r3, 7
     d70:	81 91       	ld	r24, Z+
     d72:	2f 01       	movw	r4, r30
     d74:	b6 01       	movw	r22, r12
     d76:	90 e0       	ldi	r25, 0x00	; 0
     d78:	39 d2       	rcall	.+1138   	; 0x11ec <fputc>
     d7a:	f1 10       	cpse	r15, r1
     d7c:	fa 94       	dec	r15
     d7e:	01 50       	subi	r16, 0x01	; 1
     d80:	11 09       	sbc	r17, r1
     d82:	01 15       	cp	r16, r1
     d84:	11 05       	cpc	r17, r1
     d86:	81 f7       	brne	.-32     	; 0xd68 <vfprintf+0x47a>
     d88:	f1 c0       	rjmp	.+482    	; 0xf6c <vfprintf+0x67e>
     d8a:	84 36       	cpi	r24, 0x64	; 100
     d8c:	11 f0       	breq	.+4      	; 0xd92 <vfprintf+0x4a4>
     d8e:	89 36       	cpi	r24, 0x69	; 105
     d90:	51 f5       	brne	.+84     	; 0xde6 <vfprintf+0x4f8>
     d92:	52 01       	movw	r10, r4
     d94:	27 ff       	sbrs	r18, 7
     d96:	09 c0       	rjmp	.+18     	; 0xdaa <vfprintf+0x4bc>
     d98:	f4 e0       	ldi	r31, 0x04	; 4
     d9a:	af 0e       	add	r10, r31
     d9c:	b1 1c       	adc	r11, r1
     d9e:	f2 01       	movw	r30, r4
     da0:	60 81       	ld	r22, Z
     da2:	71 81       	ldd	r23, Z+1	; 0x01
     da4:	82 81       	ldd	r24, Z+2	; 0x02
     da6:	93 81       	ldd	r25, Z+3	; 0x03
     da8:	0a c0       	rjmp	.+20     	; 0xdbe <vfprintf+0x4d0>
     daa:	f2 e0       	ldi	r31, 0x02	; 2
     dac:	af 0e       	add	r10, r31
     dae:	b1 1c       	adc	r11, r1
     db0:	f2 01       	movw	r30, r4
     db2:	60 81       	ld	r22, Z
     db4:	71 81       	ldd	r23, Z+1	; 0x01
     db6:	07 2e       	mov	r0, r23
     db8:	00 0c       	add	r0, r0
     dba:	88 0b       	sbc	r24, r24
     dbc:	99 0b       	sbc	r25, r25
     dbe:	2f 76       	andi	r18, 0x6F	; 111
     dc0:	32 2e       	mov	r3, r18
     dc2:	97 ff       	sbrs	r25, 7
     dc4:	09 c0       	rjmp	.+18     	; 0xdd8 <vfprintf+0x4ea>
     dc6:	90 95       	com	r25
     dc8:	80 95       	com	r24
     dca:	70 95       	com	r23
     dcc:	61 95       	neg	r22
     dce:	7f 4f       	sbci	r23, 0xFF	; 255
     dd0:	8f 4f       	sbci	r24, 0xFF	; 255
     dd2:	9f 4f       	sbci	r25, 0xFF	; 255
     dd4:	20 68       	ori	r18, 0x80	; 128
     dd6:	32 2e       	mov	r3, r18
     dd8:	2a e0       	ldi	r18, 0x0A	; 10
     dda:	30 e0       	ldi	r19, 0x00	; 0
     ddc:	a3 01       	movw	r20, r6
     dde:	3e d2       	rcall	.+1148   	; 0x125c <__ultoa_invert>
     de0:	e8 2e       	mov	r14, r24
     de2:	e6 18       	sub	r14, r6
     de4:	3e c0       	rjmp	.+124    	; 0xe62 <vfprintf+0x574>
     de6:	02 2f       	mov	r16, r18
     de8:	85 37       	cpi	r24, 0x75	; 117
     dea:	21 f4       	brne	.+8      	; 0xdf4 <vfprintf+0x506>
     dec:	0f 7e       	andi	r16, 0xEF	; 239
     dee:	2a e0       	ldi	r18, 0x0A	; 10
     df0:	30 e0       	ldi	r19, 0x00	; 0
     df2:	1d c0       	rjmp	.+58     	; 0xe2e <vfprintf+0x540>
     df4:	09 7f       	andi	r16, 0xF9	; 249
     df6:	8f 36       	cpi	r24, 0x6F	; 111
     df8:	91 f0       	breq	.+36     	; 0xe1e <vfprintf+0x530>
     dfa:	18 f4       	brcc	.+6      	; 0xe02 <vfprintf+0x514>
     dfc:	88 35       	cpi	r24, 0x58	; 88
     dfe:	59 f0       	breq	.+22     	; 0xe16 <vfprintf+0x528>
     e00:	be c0       	rjmp	.+380    	; 0xf7e <vfprintf+0x690>
     e02:	80 37       	cpi	r24, 0x70	; 112
     e04:	19 f0       	breq	.+6      	; 0xe0c <vfprintf+0x51e>
     e06:	88 37       	cpi	r24, 0x78	; 120
     e08:	11 f0       	breq	.+4      	; 0xe0e <vfprintf+0x520>
     e0a:	b9 c0       	rjmp	.+370    	; 0xf7e <vfprintf+0x690>
     e0c:	00 61       	ori	r16, 0x10	; 16
     e0e:	04 ff       	sbrs	r16, 4
     e10:	09 c0       	rjmp	.+18     	; 0xe24 <vfprintf+0x536>
     e12:	04 60       	ori	r16, 0x04	; 4
     e14:	07 c0       	rjmp	.+14     	; 0xe24 <vfprintf+0x536>
     e16:	24 ff       	sbrs	r18, 4
     e18:	08 c0       	rjmp	.+16     	; 0xe2a <vfprintf+0x53c>
     e1a:	06 60       	ori	r16, 0x06	; 6
     e1c:	06 c0       	rjmp	.+12     	; 0xe2a <vfprintf+0x53c>
     e1e:	28 e0       	ldi	r18, 0x08	; 8
     e20:	30 e0       	ldi	r19, 0x00	; 0
     e22:	05 c0       	rjmp	.+10     	; 0xe2e <vfprintf+0x540>
     e24:	20 e1       	ldi	r18, 0x10	; 16
     e26:	30 e0       	ldi	r19, 0x00	; 0
     e28:	02 c0       	rjmp	.+4      	; 0xe2e <vfprintf+0x540>
     e2a:	20 e1       	ldi	r18, 0x10	; 16
     e2c:	32 e0       	ldi	r19, 0x02	; 2
     e2e:	52 01       	movw	r10, r4
     e30:	07 ff       	sbrs	r16, 7
     e32:	09 c0       	rjmp	.+18     	; 0xe46 <vfprintf+0x558>
     e34:	f4 e0       	ldi	r31, 0x04	; 4
     e36:	af 0e       	add	r10, r31
     e38:	b1 1c       	adc	r11, r1
     e3a:	f2 01       	movw	r30, r4
     e3c:	60 81       	ld	r22, Z
     e3e:	71 81       	ldd	r23, Z+1	; 0x01
     e40:	82 81       	ldd	r24, Z+2	; 0x02
     e42:	93 81       	ldd	r25, Z+3	; 0x03
     e44:	08 c0       	rjmp	.+16     	; 0xe56 <vfprintf+0x568>
     e46:	f2 e0       	ldi	r31, 0x02	; 2
     e48:	af 0e       	add	r10, r31
     e4a:	b1 1c       	adc	r11, r1
     e4c:	f2 01       	movw	r30, r4
     e4e:	60 81       	ld	r22, Z
     e50:	71 81       	ldd	r23, Z+1	; 0x01
     e52:	80 e0       	ldi	r24, 0x00	; 0
     e54:	90 e0       	ldi	r25, 0x00	; 0
     e56:	a3 01       	movw	r20, r6
     e58:	01 d2       	rcall	.+1026   	; 0x125c <__ultoa_invert>
     e5a:	e8 2e       	mov	r14, r24
     e5c:	e6 18       	sub	r14, r6
     e5e:	0f 77       	andi	r16, 0x7F	; 127
     e60:	30 2e       	mov	r3, r16
     e62:	36 fe       	sbrs	r3, 6
     e64:	0b c0       	rjmp	.+22     	; 0xe7c <vfprintf+0x58e>
     e66:	33 2d       	mov	r19, r3
     e68:	3e 7f       	andi	r19, 0xFE	; 254
     e6a:	e1 16       	cp	r14, r17
     e6c:	50 f4       	brcc	.+20     	; 0xe82 <vfprintf+0x594>
     e6e:	34 fe       	sbrs	r3, 4
     e70:	0a c0       	rjmp	.+20     	; 0xe86 <vfprintf+0x598>
     e72:	32 fc       	sbrc	r3, 2
     e74:	08 c0       	rjmp	.+16     	; 0xe86 <vfprintf+0x598>
     e76:	33 2d       	mov	r19, r3
     e78:	3e 7e       	andi	r19, 0xEE	; 238
     e7a:	05 c0       	rjmp	.+10     	; 0xe86 <vfprintf+0x598>
     e7c:	0e 2d       	mov	r16, r14
     e7e:	33 2d       	mov	r19, r3
     e80:	03 c0       	rjmp	.+6      	; 0xe88 <vfprintf+0x59a>
     e82:	0e 2d       	mov	r16, r14
     e84:	01 c0       	rjmp	.+2      	; 0xe88 <vfprintf+0x59a>
     e86:	01 2f       	mov	r16, r17
     e88:	34 ff       	sbrs	r19, 4
     e8a:	0c c0       	rjmp	.+24     	; 0xea4 <vfprintf+0x5b6>
     e8c:	fe 01       	movw	r30, r28
     e8e:	ee 0d       	add	r30, r14
     e90:	f1 1d       	adc	r31, r1
     e92:	80 81       	ld	r24, Z
     e94:	80 33       	cpi	r24, 0x30	; 48
     e96:	11 f4       	brne	.+4      	; 0xe9c <vfprintf+0x5ae>
     e98:	39 7e       	andi	r19, 0xE9	; 233
     e9a:	08 c0       	rjmp	.+16     	; 0xeac <vfprintf+0x5be>
     e9c:	32 ff       	sbrs	r19, 2
     e9e:	05 c0       	rjmp	.+10     	; 0xeaa <vfprintf+0x5bc>
     ea0:	0e 5f       	subi	r16, 0xFE	; 254
     ea2:	04 c0       	rjmp	.+8      	; 0xeac <vfprintf+0x5be>
     ea4:	83 2f       	mov	r24, r19
     ea6:	86 78       	andi	r24, 0x86	; 134
     ea8:	09 f0       	breq	.+2      	; 0xeac <vfprintf+0x5be>
     eaa:	0f 5f       	subi	r16, 0xFF	; 255
     eac:	33 fd       	sbrc	r19, 3
     eae:	12 c0       	rjmp	.+36     	; 0xed4 <vfprintf+0x5e6>
     eb0:	30 ff       	sbrs	r19, 0
     eb2:	06 c0       	rjmp	.+12     	; 0xec0 <vfprintf+0x5d2>
     eb4:	1e 2d       	mov	r17, r14
     eb6:	0f 15       	cp	r16, r15
     eb8:	18 f4       	brcc	.+6      	; 0xec0 <vfprintf+0x5d2>
     eba:	1f 0d       	add	r17, r15
     ebc:	10 1b       	sub	r17, r16
     ebe:	0f 2d       	mov	r16, r15
     ec0:	0f 15       	cp	r16, r15
     ec2:	60 f4       	brcc	.+24     	; 0xedc <vfprintf+0x5ee>
     ec4:	b6 01       	movw	r22, r12
     ec6:	80 e2       	ldi	r24, 0x20	; 32
     ec8:	90 e0       	ldi	r25, 0x00	; 0
     eca:	3b 8b       	std	Y+19, r19	; 0x13
     ecc:	8f d1       	rcall	.+798    	; 0x11ec <fputc>
     ece:	0f 5f       	subi	r16, 0xFF	; 255
     ed0:	3b 89       	ldd	r19, Y+19	; 0x13
     ed2:	f6 cf       	rjmp	.-20     	; 0xec0 <vfprintf+0x5d2>
     ed4:	0f 15       	cp	r16, r15
     ed6:	10 f4       	brcc	.+4      	; 0xedc <vfprintf+0x5ee>
     ed8:	f0 1a       	sub	r15, r16
     eda:	01 c0       	rjmp	.+2      	; 0xede <vfprintf+0x5f0>
     edc:	f1 2c       	mov	r15, r1
     ede:	34 ff       	sbrs	r19, 4
     ee0:	11 c0       	rjmp	.+34     	; 0xf04 <vfprintf+0x616>
     ee2:	b6 01       	movw	r22, r12
     ee4:	80 e3       	ldi	r24, 0x30	; 48
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	3b 8b       	std	Y+19, r19	; 0x13
     eea:	80 d1       	rcall	.+768    	; 0x11ec <fputc>
     eec:	3b 89       	ldd	r19, Y+19	; 0x13
     eee:	32 ff       	sbrs	r19, 2
     ef0:	16 c0       	rjmp	.+44     	; 0xf1e <vfprintf+0x630>
     ef2:	31 fd       	sbrc	r19, 1
     ef4:	03 c0       	rjmp	.+6      	; 0xefc <vfprintf+0x60e>
     ef6:	88 e7       	ldi	r24, 0x78	; 120
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	02 c0       	rjmp	.+4      	; 0xf00 <vfprintf+0x612>
     efc:	88 e5       	ldi	r24, 0x58	; 88
     efe:	90 e0       	ldi	r25, 0x00	; 0
     f00:	b6 01       	movw	r22, r12
     f02:	0c c0       	rjmp	.+24     	; 0xf1c <vfprintf+0x62e>
     f04:	83 2f       	mov	r24, r19
     f06:	86 78       	andi	r24, 0x86	; 134
     f08:	51 f0       	breq	.+20     	; 0xf1e <vfprintf+0x630>
     f0a:	31 ff       	sbrs	r19, 1
     f0c:	02 c0       	rjmp	.+4      	; 0xf12 <vfprintf+0x624>
     f0e:	8b e2       	ldi	r24, 0x2B	; 43
     f10:	01 c0       	rjmp	.+2      	; 0xf14 <vfprintf+0x626>
     f12:	80 e2       	ldi	r24, 0x20	; 32
     f14:	37 fd       	sbrc	r19, 7
     f16:	8d e2       	ldi	r24, 0x2D	; 45
     f18:	b6 01       	movw	r22, r12
     f1a:	90 e0       	ldi	r25, 0x00	; 0
     f1c:	67 d1       	rcall	.+718    	; 0x11ec <fputc>
     f1e:	e1 16       	cp	r14, r17
     f20:	30 f4       	brcc	.+12     	; 0xf2e <vfprintf+0x640>
     f22:	b6 01       	movw	r22, r12
     f24:	80 e3       	ldi	r24, 0x30	; 48
     f26:	90 e0       	ldi	r25, 0x00	; 0
     f28:	61 d1       	rcall	.+706    	; 0x11ec <fputc>
     f2a:	11 50       	subi	r17, 0x01	; 1
     f2c:	f8 cf       	rjmp	.-16     	; 0xf1e <vfprintf+0x630>
     f2e:	ea 94       	dec	r14
     f30:	f3 01       	movw	r30, r6
     f32:	ee 0d       	add	r30, r14
     f34:	f1 1d       	adc	r31, r1
     f36:	80 81       	ld	r24, Z
     f38:	b6 01       	movw	r22, r12
     f3a:	90 e0       	ldi	r25, 0x00	; 0
     f3c:	57 d1       	rcall	.+686    	; 0x11ec <fputc>
     f3e:	e1 10       	cpse	r14, r1
     f40:	f6 cf       	rjmp	.-20     	; 0xf2e <vfprintf+0x640>
     f42:	14 c0       	rjmp	.+40     	; 0xf6c <vfprintf+0x67e>
     f44:	f4 e0       	ldi	r31, 0x04	; 4
     f46:	ff 15       	cp	r31, r15
     f48:	48 f5       	brcc	.+82     	; 0xf9c <vfprintf+0x6ae>
     f4a:	84 e0       	ldi	r24, 0x04	; 4
     f4c:	f8 1a       	sub	r15, r24
     f4e:	33 fe       	sbrs	r3, 3
     f50:	1d c0       	rjmp	.+58     	; 0xf8c <vfprintf+0x69e>
     f52:	21 10       	cpse	r2, r1
     f54:	24 c0       	rjmp	.+72     	; 0xf9e <vfprintf+0x6b0>
     f56:	03 ff       	sbrs	r16, 3
     f58:	27 c0       	rjmp	.+78     	; 0xfa8 <vfprintf+0x6ba>
     f5a:	0c e8       	ldi	r16, 0x8C	; 140
     f5c:	10 e0       	ldi	r17, 0x00	; 0
     f5e:	f3 2d       	mov	r31, r3
     f60:	f0 71       	andi	r31, 0x10	; 16
     f62:	3f 2e       	mov	r3, r31
     f64:	f8 01       	movw	r30, r16
     f66:	84 91       	lpm	r24, Z
     f68:	81 11       	cpse	r24, r1
     f6a:	21 c0       	rjmp	.+66     	; 0xfae <vfprintf+0x6c0>
     f6c:	ff 20       	and	r15, r15
     f6e:	09 f4       	brne	.+2      	; 0xf72 <vfprintf+0x684>
     f70:	fd cc       	rjmp	.-1542   	; 0x96c <vfprintf+0x7e>
     f72:	b6 01       	movw	r22, r12
     f74:	80 e2       	ldi	r24, 0x20	; 32
     f76:	90 e0       	ldi	r25, 0x00	; 0
     f78:	39 d1       	rcall	.+626    	; 0x11ec <fputc>
     f7a:	fa 94       	dec	r15
     f7c:	f7 cf       	rjmp	.-18     	; 0xf6c <vfprintf+0x67e>
     f7e:	f6 01       	movw	r30, r12
     f80:	86 81       	ldd	r24, Z+6	; 0x06
     f82:	97 81       	ldd	r25, Z+7	; 0x07
     f84:	23 c0       	rjmp	.+70     	; 0xfcc <vfprintf+0x6de>
     f86:	8f ef       	ldi	r24, 0xFF	; 255
     f88:	9f ef       	ldi	r25, 0xFF	; 255
     f8a:	20 c0       	rjmp	.+64     	; 0xfcc <vfprintf+0x6de>
     f8c:	b6 01       	movw	r22, r12
     f8e:	80 e2       	ldi	r24, 0x20	; 32
     f90:	90 e0       	ldi	r25, 0x00	; 0
     f92:	2c d1       	rcall	.+600    	; 0x11ec <fputc>
     f94:	fa 94       	dec	r15
     f96:	f1 10       	cpse	r15, r1
     f98:	f9 cf       	rjmp	.-14     	; 0xf8c <vfprintf+0x69e>
     f9a:	db cf       	rjmp	.-74     	; 0xf52 <vfprintf+0x664>
     f9c:	f1 2c       	mov	r15, r1
     f9e:	b6 01       	movw	r22, r12
     fa0:	82 2d       	mov	r24, r2
     fa2:	90 e0       	ldi	r25, 0x00	; 0
     fa4:	23 d1       	rcall	.+582    	; 0x11ec <fputc>
     fa6:	d7 cf       	rjmp	.-82     	; 0xf56 <vfprintf+0x668>
     fa8:	00 e9       	ldi	r16, 0x90	; 144
     faa:	10 e0       	ldi	r17, 0x00	; 0
     fac:	d8 cf       	rjmp	.-80     	; 0xf5e <vfprintf+0x670>
     fae:	31 10       	cpse	r3, r1
     fb0:	80 52       	subi	r24, 0x20	; 32
     fb2:	b6 01       	movw	r22, r12
     fb4:	90 e0       	ldi	r25, 0x00	; 0
     fb6:	1a d1       	rcall	.+564    	; 0x11ec <fputc>
     fb8:	0f 5f       	subi	r16, 0xFF	; 255
     fba:	1f 4f       	sbci	r17, 0xFF	; 255
     fbc:	d3 cf       	rjmp	.-90     	; 0xf64 <vfprintf+0x676>
     fbe:	23 e0       	ldi	r18, 0x03	; 3
     fc0:	2f 15       	cp	r18, r15
     fc2:	10 f4       	brcc	.+4      	; 0xfc8 <vfprintf+0x6da>
     fc4:	83 e0       	ldi	r24, 0x03	; 3
     fc6:	c2 cf       	rjmp	.-124    	; 0xf4c <vfprintf+0x65e>
     fc8:	f1 2c       	mov	r15, r1
     fca:	c5 cf       	rjmp	.-118    	; 0xf56 <vfprintf+0x668>
     fcc:	63 96       	adiw	r28, 0x13	; 19
     fce:	0f b6       	in	r0, 0x3f	; 63
     fd0:	f8 94       	cli
     fd2:	de bf       	out	0x3e, r29	; 62
     fd4:	0f be       	out	0x3f, r0	; 63
     fd6:	cd bf       	out	0x3d, r28	; 61
     fd8:	df 91       	pop	r29
     fda:	cf 91       	pop	r28
     fdc:	1f 91       	pop	r17
     fde:	0f 91       	pop	r16
     fe0:	ff 90       	pop	r15
     fe2:	ef 90       	pop	r14
     fe4:	df 90       	pop	r13
     fe6:	cf 90       	pop	r12
     fe8:	bf 90       	pop	r11
     fea:	af 90       	pop	r10
     fec:	9f 90       	pop	r9
     fee:	8f 90       	pop	r8
     ff0:	7f 90       	pop	r7
     ff2:	6f 90       	pop	r6
     ff4:	5f 90       	pop	r5
     ff6:	4f 90       	pop	r4
     ff8:	3f 90       	pop	r3
     ffa:	2f 90       	pop	r2
     ffc:	08 95       	ret

00000ffe <__ftoa_engine>:
     ffe:	28 30       	cpi	r18, 0x08	; 8
    1000:	08 f0       	brcs	.+2      	; 0x1004 <__ftoa_engine+0x6>
    1002:	27 e0       	ldi	r18, 0x07	; 7
    1004:	33 27       	eor	r19, r19
    1006:	da 01       	movw	r26, r20
    1008:	99 0f       	add	r25, r25
    100a:	31 1d       	adc	r19, r1
    100c:	87 fd       	sbrc	r24, 7
    100e:	91 60       	ori	r25, 0x01	; 1
    1010:	00 96       	adiw	r24, 0x00	; 0
    1012:	61 05       	cpc	r22, r1
    1014:	71 05       	cpc	r23, r1
    1016:	39 f4       	brne	.+14     	; 0x1026 <__ftoa_engine+0x28>
    1018:	32 60       	ori	r19, 0x02	; 2
    101a:	2e 5f       	subi	r18, 0xFE	; 254
    101c:	3d 93       	st	X+, r19
    101e:	30 e3       	ldi	r19, 0x30	; 48
    1020:	2a 95       	dec	r18
    1022:	e1 f7       	brne	.-8      	; 0x101c <__ftoa_engine+0x1e>
    1024:	08 95       	ret
    1026:	9f 3f       	cpi	r25, 0xFF	; 255
    1028:	30 f0       	brcs	.+12     	; 0x1036 <__ftoa_engine+0x38>
    102a:	80 38       	cpi	r24, 0x80	; 128
    102c:	71 05       	cpc	r23, r1
    102e:	61 05       	cpc	r22, r1
    1030:	09 f0       	breq	.+2      	; 0x1034 <__ftoa_engine+0x36>
    1032:	3c 5f       	subi	r19, 0xFC	; 252
    1034:	3c 5f       	subi	r19, 0xFC	; 252
    1036:	3d 93       	st	X+, r19
    1038:	91 30       	cpi	r25, 0x01	; 1
    103a:	08 f0       	brcs	.+2      	; 0x103e <__ftoa_engine+0x40>
    103c:	80 68       	ori	r24, 0x80	; 128
    103e:	91 1d       	adc	r25, r1
    1040:	df 93       	push	r29
    1042:	cf 93       	push	r28
    1044:	1f 93       	push	r17
    1046:	0f 93       	push	r16
    1048:	ff 92       	push	r15
    104a:	ef 92       	push	r14
    104c:	19 2f       	mov	r17, r25
    104e:	98 7f       	andi	r25, 0xF8	; 248
    1050:	96 95       	lsr	r25
    1052:	e9 2f       	mov	r30, r25
    1054:	96 95       	lsr	r25
    1056:	96 95       	lsr	r25
    1058:	e9 0f       	add	r30, r25
    105a:	ff 27       	eor	r31, r31
    105c:	e2 51       	subi	r30, 0x12	; 18
    105e:	ff 4f       	sbci	r31, 0xFF	; 255
    1060:	99 27       	eor	r25, r25
    1062:	33 27       	eor	r19, r19
    1064:	ee 24       	eor	r14, r14
    1066:	ff 24       	eor	r15, r15
    1068:	a7 01       	movw	r20, r14
    106a:	e7 01       	movw	r28, r14
    106c:	05 90       	lpm	r0, Z+
    106e:	08 94       	sec
    1070:	07 94       	ror	r0
    1072:	28 f4       	brcc	.+10     	; 0x107e <__ftoa_engine+0x80>
    1074:	36 0f       	add	r19, r22
    1076:	e7 1e       	adc	r14, r23
    1078:	f8 1e       	adc	r15, r24
    107a:	49 1f       	adc	r20, r25
    107c:	51 1d       	adc	r21, r1
    107e:	66 0f       	add	r22, r22
    1080:	77 1f       	adc	r23, r23
    1082:	88 1f       	adc	r24, r24
    1084:	99 1f       	adc	r25, r25
    1086:	06 94       	lsr	r0
    1088:	a1 f7       	brne	.-24     	; 0x1072 <__ftoa_engine+0x74>
    108a:	05 90       	lpm	r0, Z+
    108c:	07 94       	ror	r0
    108e:	28 f4       	brcc	.+10     	; 0x109a <__ftoa_engine+0x9c>
    1090:	e7 0e       	add	r14, r23
    1092:	f8 1e       	adc	r15, r24
    1094:	49 1f       	adc	r20, r25
    1096:	56 1f       	adc	r21, r22
    1098:	c1 1d       	adc	r28, r1
    109a:	77 0f       	add	r23, r23
    109c:	88 1f       	adc	r24, r24
    109e:	99 1f       	adc	r25, r25
    10a0:	66 1f       	adc	r22, r22
    10a2:	06 94       	lsr	r0
    10a4:	a1 f7       	brne	.-24     	; 0x108e <__ftoa_engine+0x90>
    10a6:	05 90       	lpm	r0, Z+
    10a8:	07 94       	ror	r0
    10aa:	28 f4       	brcc	.+10     	; 0x10b6 <__ftoa_engine+0xb8>
    10ac:	f8 0e       	add	r15, r24
    10ae:	49 1f       	adc	r20, r25
    10b0:	56 1f       	adc	r21, r22
    10b2:	c7 1f       	adc	r28, r23
    10b4:	d1 1d       	adc	r29, r1
    10b6:	88 0f       	add	r24, r24
    10b8:	99 1f       	adc	r25, r25
    10ba:	66 1f       	adc	r22, r22
    10bc:	77 1f       	adc	r23, r23
    10be:	06 94       	lsr	r0
    10c0:	a1 f7       	brne	.-24     	; 0x10aa <__ftoa_engine+0xac>
    10c2:	05 90       	lpm	r0, Z+
    10c4:	07 94       	ror	r0
    10c6:	20 f4       	brcc	.+8      	; 0x10d0 <__ftoa_engine+0xd2>
    10c8:	49 0f       	add	r20, r25
    10ca:	56 1f       	adc	r21, r22
    10cc:	c7 1f       	adc	r28, r23
    10ce:	d8 1f       	adc	r29, r24
    10d0:	99 0f       	add	r25, r25
    10d2:	66 1f       	adc	r22, r22
    10d4:	77 1f       	adc	r23, r23
    10d6:	88 1f       	adc	r24, r24
    10d8:	06 94       	lsr	r0
    10da:	a9 f7       	brne	.-22     	; 0x10c6 <__ftoa_engine+0xc8>
    10dc:	84 91       	lpm	r24, Z
    10de:	10 95       	com	r17
    10e0:	17 70       	andi	r17, 0x07	; 7
    10e2:	41 f0       	breq	.+16     	; 0x10f4 <__ftoa_engine+0xf6>
    10e4:	d6 95       	lsr	r29
    10e6:	c7 95       	ror	r28
    10e8:	57 95       	ror	r21
    10ea:	47 95       	ror	r20
    10ec:	f7 94       	ror	r15
    10ee:	e7 94       	ror	r14
    10f0:	1a 95       	dec	r17
    10f2:	c1 f7       	brne	.-16     	; 0x10e4 <__ftoa_engine+0xe6>
    10f4:	e4 e9       	ldi	r30, 0x94	; 148
    10f6:	f0 e0       	ldi	r31, 0x00	; 0
    10f8:	68 94       	set
    10fa:	15 90       	lpm	r1, Z+
    10fc:	15 91       	lpm	r17, Z+
    10fe:	35 91       	lpm	r19, Z+
    1100:	65 91       	lpm	r22, Z+
    1102:	95 91       	lpm	r25, Z+
    1104:	05 90       	lpm	r0, Z+
    1106:	7f e2       	ldi	r23, 0x2F	; 47
    1108:	73 95       	inc	r23
    110a:	e1 18       	sub	r14, r1
    110c:	f1 0a       	sbc	r15, r17
    110e:	43 0b       	sbc	r20, r19
    1110:	56 0b       	sbc	r21, r22
    1112:	c9 0b       	sbc	r28, r25
    1114:	d0 09       	sbc	r29, r0
    1116:	c0 f7       	brcc	.-16     	; 0x1108 <__ftoa_engine+0x10a>
    1118:	e1 0c       	add	r14, r1
    111a:	f1 1e       	adc	r15, r17
    111c:	43 1f       	adc	r20, r19
    111e:	56 1f       	adc	r21, r22
    1120:	c9 1f       	adc	r28, r25
    1122:	d0 1d       	adc	r29, r0
    1124:	7e f4       	brtc	.+30     	; 0x1144 <__ftoa_engine+0x146>
    1126:	70 33       	cpi	r23, 0x30	; 48
    1128:	11 f4       	brne	.+4      	; 0x112e <__ftoa_engine+0x130>
    112a:	8a 95       	dec	r24
    112c:	e6 cf       	rjmp	.-52     	; 0x10fa <__ftoa_engine+0xfc>
    112e:	e8 94       	clt
    1130:	01 50       	subi	r16, 0x01	; 1
    1132:	30 f0       	brcs	.+12     	; 0x1140 <__ftoa_engine+0x142>
    1134:	08 0f       	add	r16, r24
    1136:	0a f4       	brpl	.+2      	; 0x113a <__ftoa_engine+0x13c>
    1138:	00 27       	eor	r16, r16
    113a:	02 17       	cp	r16, r18
    113c:	08 f4       	brcc	.+2      	; 0x1140 <__ftoa_engine+0x142>
    113e:	20 2f       	mov	r18, r16
    1140:	23 95       	inc	r18
    1142:	02 2f       	mov	r16, r18
    1144:	7a 33       	cpi	r23, 0x3A	; 58
    1146:	28 f0       	brcs	.+10     	; 0x1152 <__ftoa_engine+0x154>
    1148:	79 e3       	ldi	r23, 0x39	; 57
    114a:	7d 93       	st	X+, r23
    114c:	2a 95       	dec	r18
    114e:	e9 f7       	brne	.-6      	; 0x114a <__ftoa_engine+0x14c>
    1150:	10 c0       	rjmp	.+32     	; 0x1172 <__ftoa_engine+0x174>
    1152:	7d 93       	st	X+, r23
    1154:	2a 95       	dec	r18
    1156:	89 f6       	brne	.-94     	; 0x10fa <__ftoa_engine+0xfc>
    1158:	06 94       	lsr	r0
    115a:	97 95       	ror	r25
    115c:	67 95       	ror	r22
    115e:	37 95       	ror	r19
    1160:	17 95       	ror	r17
    1162:	17 94       	ror	r1
    1164:	e1 18       	sub	r14, r1
    1166:	f1 0a       	sbc	r15, r17
    1168:	43 0b       	sbc	r20, r19
    116a:	56 0b       	sbc	r21, r22
    116c:	c9 0b       	sbc	r28, r25
    116e:	d0 09       	sbc	r29, r0
    1170:	98 f0       	brcs	.+38     	; 0x1198 <__ftoa_engine+0x19a>
    1172:	23 95       	inc	r18
    1174:	7e 91       	ld	r23, -X
    1176:	73 95       	inc	r23
    1178:	7a 33       	cpi	r23, 0x3A	; 58
    117a:	08 f0       	brcs	.+2      	; 0x117e <__ftoa_engine+0x180>
    117c:	70 e3       	ldi	r23, 0x30	; 48
    117e:	7c 93       	st	X, r23
    1180:	20 13       	cpse	r18, r16
    1182:	b8 f7       	brcc	.-18     	; 0x1172 <__ftoa_engine+0x174>
    1184:	7e 91       	ld	r23, -X
    1186:	70 61       	ori	r23, 0x10	; 16
    1188:	7d 93       	st	X+, r23
    118a:	30 f0       	brcs	.+12     	; 0x1198 <__ftoa_engine+0x19a>
    118c:	83 95       	inc	r24
    118e:	71 e3       	ldi	r23, 0x31	; 49
    1190:	7d 93       	st	X+, r23
    1192:	70 e3       	ldi	r23, 0x30	; 48
    1194:	2a 95       	dec	r18
    1196:	e1 f7       	brne	.-8      	; 0x1190 <__ftoa_engine+0x192>
    1198:	11 24       	eor	r1, r1
    119a:	ef 90       	pop	r14
    119c:	ff 90       	pop	r15
    119e:	0f 91       	pop	r16
    11a0:	1f 91       	pop	r17
    11a2:	cf 91       	pop	r28
    11a4:	df 91       	pop	r29
    11a6:	99 27       	eor	r25, r25
    11a8:	87 fd       	sbrc	r24, 7
    11aa:	90 95       	com	r25
    11ac:	08 95       	ret

000011ae <strnlen_P>:
    11ae:	fc 01       	movw	r30, r24
    11b0:	05 90       	lpm	r0, Z+
    11b2:	61 50       	subi	r22, 0x01	; 1
    11b4:	70 40       	sbci	r23, 0x00	; 0
    11b6:	01 10       	cpse	r0, r1
    11b8:	d8 f7       	brcc	.-10     	; 0x11b0 <strnlen_P+0x2>
    11ba:	80 95       	com	r24
    11bc:	90 95       	com	r25
    11be:	8e 0f       	add	r24, r30
    11c0:	9f 1f       	adc	r25, r31
    11c2:	08 95       	ret

000011c4 <memcpy>:
    11c4:	fb 01       	movw	r30, r22
    11c6:	dc 01       	movw	r26, r24
    11c8:	02 c0       	rjmp	.+4      	; 0x11ce <memcpy+0xa>
    11ca:	01 90       	ld	r0, Z+
    11cc:	0d 92       	st	X+, r0
    11ce:	41 50       	subi	r20, 0x01	; 1
    11d0:	50 40       	sbci	r21, 0x00	; 0
    11d2:	d8 f7       	brcc	.-10     	; 0x11ca <memcpy+0x6>
    11d4:	08 95       	ret

000011d6 <strnlen>:
    11d6:	fc 01       	movw	r30, r24
    11d8:	61 50       	subi	r22, 0x01	; 1
    11da:	70 40       	sbci	r23, 0x00	; 0
    11dc:	01 90       	ld	r0, Z+
    11de:	01 10       	cpse	r0, r1
    11e0:	d8 f7       	brcc	.-10     	; 0x11d8 <strnlen+0x2>
    11e2:	80 95       	com	r24
    11e4:	90 95       	com	r25
    11e6:	8e 0f       	add	r24, r30
    11e8:	9f 1f       	adc	r25, r31
    11ea:	08 95       	ret

000011ec <fputc>:
    11ec:	0f 93       	push	r16
    11ee:	1f 93       	push	r17
    11f0:	cf 93       	push	r28
    11f2:	df 93       	push	r29
    11f4:	fb 01       	movw	r30, r22
    11f6:	23 81       	ldd	r18, Z+3	; 0x03
    11f8:	21 fd       	sbrc	r18, 1
    11fa:	03 c0       	rjmp	.+6      	; 0x1202 <fputc+0x16>
    11fc:	8f ef       	ldi	r24, 0xFF	; 255
    11fe:	9f ef       	ldi	r25, 0xFF	; 255
    1200:	28 c0       	rjmp	.+80     	; 0x1252 <fputc+0x66>
    1202:	22 ff       	sbrs	r18, 2
    1204:	16 c0       	rjmp	.+44     	; 0x1232 <fputc+0x46>
    1206:	46 81       	ldd	r20, Z+6	; 0x06
    1208:	57 81       	ldd	r21, Z+7	; 0x07
    120a:	24 81       	ldd	r18, Z+4	; 0x04
    120c:	35 81       	ldd	r19, Z+5	; 0x05
    120e:	42 17       	cp	r20, r18
    1210:	53 07       	cpc	r21, r19
    1212:	44 f4       	brge	.+16     	; 0x1224 <fputc+0x38>
    1214:	a0 81       	ld	r26, Z
    1216:	b1 81       	ldd	r27, Z+1	; 0x01
    1218:	9d 01       	movw	r18, r26
    121a:	2f 5f       	subi	r18, 0xFF	; 255
    121c:	3f 4f       	sbci	r19, 0xFF	; 255
    121e:	31 83       	std	Z+1, r19	; 0x01
    1220:	20 83       	st	Z, r18
    1222:	8c 93       	st	X, r24
    1224:	26 81       	ldd	r18, Z+6	; 0x06
    1226:	37 81       	ldd	r19, Z+7	; 0x07
    1228:	2f 5f       	subi	r18, 0xFF	; 255
    122a:	3f 4f       	sbci	r19, 0xFF	; 255
    122c:	37 83       	std	Z+7, r19	; 0x07
    122e:	26 83       	std	Z+6, r18	; 0x06
    1230:	10 c0       	rjmp	.+32     	; 0x1252 <fputc+0x66>
    1232:	eb 01       	movw	r28, r22
    1234:	09 2f       	mov	r16, r25
    1236:	18 2f       	mov	r17, r24
    1238:	00 84       	ldd	r0, Z+8	; 0x08
    123a:	f1 85       	ldd	r31, Z+9	; 0x09
    123c:	e0 2d       	mov	r30, r0
    123e:	09 95       	icall
    1240:	89 2b       	or	r24, r25
    1242:	e1 f6       	brne	.-72     	; 0x11fc <fputc+0x10>
    1244:	8e 81       	ldd	r24, Y+6	; 0x06
    1246:	9f 81       	ldd	r25, Y+7	; 0x07
    1248:	01 96       	adiw	r24, 0x01	; 1
    124a:	9f 83       	std	Y+7, r25	; 0x07
    124c:	8e 83       	std	Y+6, r24	; 0x06
    124e:	81 2f       	mov	r24, r17
    1250:	90 2f       	mov	r25, r16
    1252:	df 91       	pop	r29
    1254:	cf 91       	pop	r28
    1256:	1f 91       	pop	r17
    1258:	0f 91       	pop	r16
    125a:	08 95       	ret

0000125c <__ultoa_invert>:
    125c:	fa 01       	movw	r30, r20
    125e:	aa 27       	eor	r26, r26
    1260:	28 30       	cpi	r18, 0x08	; 8
    1262:	51 f1       	breq	.+84     	; 0x12b8 <__ultoa_invert+0x5c>
    1264:	20 31       	cpi	r18, 0x10	; 16
    1266:	81 f1       	breq	.+96     	; 0x12c8 <__ultoa_invert+0x6c>
    1268:	e8 94       	clt
    126a:	6f 93       	push	r22
    126c:	6e 7f       	andi	r22, 0xFE	; 254
    126e:	6e 5f       	subi	r22, 0xFE	; 254
    1270:	7f 4f       	sbci	r23, 0xFF	; 255
    1272:	8f 4f       	sbci	r24, 0xFF	; 255
    1274:	9f 4f       	sbci	r25, 0xFF	; 255
    1276:	af 4f       	sbci	r26, 0xFF	; 255
    1278:	b1 e0       	ldi	r27, 0x01	; 1
    127a:	3e d0       	rcall	.+124    	; 0x12f8 <__ultoa_invert+0x9c>
    127c:	b4 e0       	ldi	r27, 0x04	; 4
    127e:	3c d0       	rcall	.+120    	; 0x12f8 <__ultoa_invert+0x9c>
    1280:	67 0f       	add	r22, r23
    1282:	78 1f       	adc	r23, r24
    1284:	89 1f       	adc	r24, r25
    1286:	9a 1f       	adc	r25, r26
    1288:	a1 1d       	adc	r26, r1
    128a:	68 0f       	add	r22, r24
    128c:	79 1f       	adc	r23, r25
    128e:	8a 1f       	adc	r24, r26
    1290:	91 1d       	adc	r25, r1
    1292:	a1 1d       	adc	r26, r1
    1294:	6a 0f       	add	r22, r26
    1296:	71 1d       	adc	r23, r1
    1298:	81 1d       	adc	r24, r1
    129a:	91 1d       	adc	r25, r1
    129c:	a1 1d       	adc	r26, r1
    129e:	20 d0       	rcall	.+64     	; 0x12e0 <__ultoa_invert+0x84>
    12a0:	09 f4       	brne	.+2      	; 0x12a4 <__ultoa_invert+0x48>
    12a2:	68 94       	set
    12a4:	3f 91       	pop	r19
    12a6:	2a e0       	ldi	r18, 0x0A	; 10
    12a8:	26 9f       	mul	r18, r22
    12aa:	11 24       	eor	r1, r1
    12ac:	30 19       	sub	r19, r0
    12ae:	30 5d       	subi	r19, 0xD0	; 208
    12b0:	31 93       	st	Z+, r19
    12b2:	de f6       	brtc	.-74     	; 0x126a <__ultoa_invert+0xe>
    12b4:	cf 01       	movw	r24, r30
    12b6:	08 95       	ret
    12b8:	46 2f       	mov	r20, r22
    12ba:	47 70       	andi	r20, 0x07	; 7
    12bc:	40 5d       	subi	r20, 0xD0	; 208
    12be:	41 93       	st	Z+, r20
    12c0:	b3 e0       	ldi	r27, 0x03	; 3
    12c2:	0f d0       	rcall	.+30     	; 0x12e2 <__ultoa_invert+0x86>
    12c4:	c9 f7       	brne	.-14     	; 0x12b8 <__ultoa_invert+0x5c>
    12c6:	f6 cf       	rjmp	.-20     	; 0x12b4 <__ultoa_invert+0x58>
    12c8:	46 2f       	mov	r20, r22
    12ca:	4f 70       	andi	r20, 0x0F	; 15
    12cc:	40 5d       	subi	r20, 0xD0	; 208
    12ce:	4a 33       	cpi	r20, 0x3A	; 58
    12d0:	18 f0       	brcs	.+6      	; 0x12d8 <__ultoa_invert+0x7c>
    12d2:	49 5d       	subi	r20, 0xD9	; 217
    12d4:	31 fd       	sbrc	r19, 1
    12d6:	40 52       	subi	r20, 0x20	; 32
    12d8:	41 93       	st	Z+, r20
    12da:	02 d0       	rcall	.+4      	; 0x12e0 <__ultoa_invert+0x84>
    12dc:	a9 f7       	brne	.-22     	; 0x12c8 <__ultoa_invert+0x6c>
    12de:	ea cf       	rjmp	.-44     	; 0x12b4 <__ultoa_invert+0x58>
    12e0:	b4 e0       	ldi	r27, 0x04	; 4
    12e2:	a6 95       	lsr	r26
    12e4:	97 95       	ror	r25
    12e6:	87 95       	ror	r24
    12e8:	77 95       	ror	r23
    12ea:	67 95       	ror	r22
    12ec:	ba 95       	dec	r27
    12ee:	c9 f7       	brne	.-14     	; 0x12e2 <__ultoa_invert+0x86>
    12f0:	00 97       	sbiw	r24, 0x00	; 0
    12f2:	61 05       	cpc	r22, r1
    12f4:	71 05       	cpc	r23, r1
    12f6:	08 95       	ret
    12f8:	9b 01       	movw	r18, r22
    12fa:	ac 01       	movw	r20, r24
    12fc:	0a 2e       	mov	r0, r26
    12fe:	06 94       	lsr	r0
    1300:	57 95       	ror	r21
    1302:	47 95       	ror	r20
    1304:	37 95       	ror	r19
    1306:	27 95       	ror	r18
    1308:	ba 95       	dec	r27
    130a:	c9 f7       	brne	.-14     	; 0x12fe <__ultoa_invert+0xa2>
    130c:	62 0f       	add	r22, r18
    130e:	73 1f       	adc	r23, r19
    1310:	84 1f       	adc	r24, r20
    1312:	95 1f       	adc	r25, r21
    1314:	a0 1d       	adc	r26, r0
    1316:	08 95       	ret

00001318 <_exit>:
    1318:	f8 94       	cli

0000131a <__stop_program>:
    131a:	ff cf       	rjmp	.-2      	; 0x131a <__stop_program>
