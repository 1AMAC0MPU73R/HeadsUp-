
HeadsUp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000032  00800100  00001174  000011e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001174  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  0000121a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001278  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000108  00000000  00000000  000012b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001974  00000000  00000000  000013c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005e6  00000000  00000000  00002d34  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000088c  00000000  00000000  0000331a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002d8  00000000  00000000  00003ba8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000634  00000000  00000000  00003e80  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000c23  00000000  00000000  000044b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d8  00000000  00000000  000050d7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	c6 c0       	rjmp	.+396    	; 0x18e <__ctors_end>
       2:	00 00       	nop
       4:	d9 c0       	rjmp	.+434    	; 0x1b8 <__bad_interrupt>
       6:	00 00       	nop
       8:	d7 c0       	rjmp	.+430    	; 0x1b8 <__bad_interrupt>
       a:	00 00       	nop
       c:	d5 c0       	rjmp	.+426    	; 0x1b8 <__bad_interrupt>
       e:	00 00       	nop
      10:	d3 c0       	rjmp	.+422    	; 0x1b8 <__bad_interrupt>
      12:	00 00       	nop
      14:	d1 c0       	rjmp	.+418    	; 0x1b8 <__bad_interrupt>
      16:	00 00       	nop
      18:	cf c0       	rjmp	.+414    	; 0x1b8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	cd c0       	rjmp	.+410    	; 0x1b8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	cb c0       	rjmp	.+406    	; 0x1b8 <__bad_interrupt>
      22:	00 00       	nop
      24:	c9 c0       	rjmp	.+402    	; 0x1b8 <__bad_interrupt>
      26:	00 00       	nop
      28:	c7 c0       	rjmp	.+398    	; 0x1b8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	c5 c0       	rjmp	.+394    	; 0x1b8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	c3 c0       	rjmp	.+390    	; 0x1b8 <__bad_interrupt>
      32:	00 00       	nop
      34:	c1 c0       	rjmp	.+386    	; 0x1b8 <__bad_interrupt>
      36:	00 00       	nop
      38:	bf c0       	rjmp	.+382    	; 0x1b8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	bd c0       	rjmp	.+378    	; 0x1b8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	bb c0       	rjmp	.+374    	; 0x1b8 <__bad_interrupt>
      42:	00 00       	nop
      44:	b9 c0       	rjmp	.+370    	; 0x1b8 <__bad_interrupt>
      46:	00 00       	nop
      48:	b7 c0       	rjmp	.+366    	; 0x1b8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	b5 c0       	rjmp	.+362    	; 0x1b8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	b3 c0       	rjmp	.+358    	; 0x1b8 <__bad_interrupt>
      52:	00 00       	nop
      54:	b1 c0       	rjmp	.+354    	; 0x1b8 <__bad_interrupt>
      56:	00 00       	nop
      58:	af c0       	rjmp	.+350    	; 0x1b8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	ad c0       	rjmp	.+346    	; 0x1b8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	ab c0       	rjmp	.+342    	; 0x1b8 <__bad_interrupt>
      62:	00 00       	nop
      64:	a9 c0       	rjmp	.+338    	; 0x1b8 <__bad_interrupt>
      66:	00 00       	nop
      68:	a7 c0       	rjmp	.+334    	; 0x1b8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	a5 c0       	rjmp	.+330    	; 0x1b8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	a3 c0       	rjmp	.+326    	; 0x1b8 <__bad_interrupt>
      72:	00 00       	nop
      74:	a1 c0       	rjmp	.+322    	; 0x1b8 <__bad_interrupt>
      76:	00 00       	nop
      78:	9f c0       	rjmp	.+318    	; 0x1b8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	9d c0       	rjmp	.+314    	; 0x1b8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	9b c0       	rjmp	.+310    	; 0x1b8 <__bad_interrupt>
      82:	00 00       	nop
      84:	99 c0       	rjmp	.+306    	; 0x1b8 <__bad_interrupt>
      86:	00 00       	nop
      88:	97 c0       	rjmp	.+302    	; 0x1b8 <__bad_interrupt>
	...

0000008c <__trampolines_end>:
      8c:	6e 61       	ori	r22, 0x1E	; 30
      8e:	6e 00       	.word	0x006e	; ????

00000090 <__c.2177>:
      90:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      a0:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      b0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      c0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      d0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      e0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      f0:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     100:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     110:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     120:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     130:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     140:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     150:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     160:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     170:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     180:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000018e <__ctors_end>:
     18e:	11 24       	eor	r1, r1
     190:	1f be       	out	0x3f, r1	; 63
     192:	cf ef       	ldi	r28, 0xFF	; 255
     194:	d0 e4       	ldi	r29, 0x40	; 64
     196:	de bf       	out	0x3e, r29	; 62
     198:	cd bf       	out	0x3d, r28	; 61

0000019a <__do_copy_data>:
     19a:	11 e0       	ldi	r17, 0x01	; 1
     19c:	a0 e0       	ldi	r26, 0x00	; 0
     19e:	b1 e0       	ldi	r27, 0x01	; 1
     1a0:	e4 e7       	ldi	r30, 0x74	; 116
     1a2:	f1 e1       	ldi	r31, 0x11	; 17
     1a4:	00 e0       	ldi	r16, 0x00	; 0
     1a6:	0b bf       	out	0x3b, r16	; 59
     1a8:	02 c0       	rjmp	.+4      	; 0x1ae <__do_copy_data+0x14>
     1aa:	07 90       	elpm	r0, Z+
     1ac:	0d 92       	st	X+, r0
     1ae:	a2 33       	cpi	r26, 0x32	; 50
     1b0:	b1 07       	cpc	r27, r17
     1b2:	d9 f7       	brne	.-10     	; 0x1aa <__do_copy_data+0x10>
     1b4:	54 d2       	rcall	.+1192   	; 0x65e <main>
     1b6:	dc c7       	rjmp	.+4024   	; 0x1170 <_exit>

000001b8 <__bad_interrupt>:
     1b8:	23 cf       	rjmp	.-442    	; 0x0 <__vectors>

000001ba <_ZN3lcd8TWI_INITEv>:
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);// Clear Flag and Enable
}

void lcd::TWI_STOP(){
	
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
     1ba:	e4 e6       	ldi	r30, 0x64	; 100
     1bc:	f0 e0       	ldi	r31, 0x00	; 0
     1be:	80 81       	ld	r24, Z
     1c0:	8f 77       	andi	r24, 0x7F	; 127
     1c2:	80 83       	st	Z, r24
     1c4:	ec eb       	ldi	r30, 0xBC	; 188
     1c6:	f0 e0       	ldi	r31, 0x00	; 0
     1c8:	80 81       	ld	r24, Z
     1ca:	8e 7f       	andi	r24, 0xFE	; 254
     1cc:	80 83       	st	Z, r24
     1ce:	82 e0       	ldi	r24, 0x02	; 2
     1d0:	80 93 b8 00 	sts	0x00B8, r24
     1d4:	e9 eb       	ldi	r30, 0xB9	; 185
     1d6:	f0 e0       	ldi	r31, 0x00	; 0
     1d8:	80 81       	ld	r24, Z
     1da:	8d 7f       	andi	r24, 0xFD	; 253
     1dc:	80 83       	st	Z, r24
     1de:	08 95       	ret

000001e0 <_ZN3lcd22TWI_StartCommunicationEv>:
	
}

void lcd::TWI_StartCommunication(){
	
	TWCR = (1 << TWEN) | (1 << TWINT) | (1 << TWSTA);
     1e0:	84 ea       	ldi	r24, 0xA4	; 164
     1e2:	80 93 bc 00 	sts	0x00BC, r24
	while ( ! (TWCR & (1 << TWINT)));				// wait for flag to be set
     1e6:	ec eb       	ldi	r30, 0xBC	; 188
     1e8:	f0 e0       	ldi	r31, 0x00	; 0
     1ea:	80 81       	ld	r24, Z
     1ec:	88 23       	and	r24, r24
     1ee:	ec f7       	brge	.-6      	; 0x1ea <_ZN3lcd22TWI_StartCommunicationEv+0xa>
}


void lcd::TWI_CheckStatusRegister(uint8_t Status){
	
	if( (TWSR & 0xF8) != Status ) {					// Error check for start condition
     1f0:	80 91 b9 00 	lds	r24, 0x00B9
     1f4:	08 95       	ret

000001f6 <_ZN3lcd16TWI_TransmitDataEhh>:
	
}

void lcd::TWI_TransmitData(uint8_t TwiData, uint8_t StatusCode){
	
	TWDR = TwiData;
     1f6:	60 93 bb 00 	sts	0x00BB, r22
}


void lcd::TWI_ClearFlagAndEnable(){
	
	TWCR = (1 << TWINT) | (1 << TWEN);				// Clear Flag and Enable
     1fa:	84 e8       	ldi	r24, 0x84	; 132
     1fc:	80 93 bc 00 	sts	0x00BC, r24
	
	TWDR = TwiData;
	/*After TWDR is loaded with SLA+W, a specific val must be written to TWCR, instucting the TWINT hardware
	to transmit the SLA+W present in TWDR*/
	TWI_ClearFlagAndEnable();
	while ( ! (TWCR & (1 << TWINT)));	// wait for flag to be set
     200:	ec eb       	ldi	r30, 0xBC	; 188
     202:	f0 e0       	ldi	r31, 0x00	; 0
     204:	80 81       	ld	r24, Z
     206:	88 23       	and	r24, r24
     208:	ec f7       	brge	.-6      	; 0x204 <_ZN3lcd16TWI_TransmitDataEhh+0xe>
}


void lcd::TWI_CheckStatusRegister(uint8_t Status){
	
	if( (TWSR & 0xF8) != Status ) {					// Error check for start condition
     20a:	80 91 b9 00 	lds	r24, 0x00B9
     20e:	08 95       	ret

00000210 <_ZN3lcd4ShowEPh>:
	TWI_CheckStatusRegister(StatusCode);	// works!!

}


void lcd::Show(unsigned char *text){
     210:	ef 92       	push	r14
     212:	ff 92       	push	r15
     214:	0f 93       	push	r16
     216:	1f 93       	push	r17
     218:	cf 93       	push	r28
     21a:	df 93       	push	r29
     21c:	8c 01       	movw	r16, r24
     21e:	eb 01       	movw	r28, r22
	
	int n, d;
	d=0x00;
	
	
	TWI_StartCommunication();
     220:	df df       	rcall	.-66     	; 0x1e0 <_ZN3lcd22TWI_StartCommunicationEv>
	
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     222:	48 e1       	ldi	r20, 0x18	; 24
     224:	6c e7       	ldi	r22, 0x7C	; 124
     226:	c8 01       	movw	r24, r16
     228:	e6 df       	rcall	.-52     	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(SEND_DATA,TW_MT_DATA_ACK);
     22a:	48 e2       	ldi	r20, 0x28	; 40
     22c:	60 e4       	ldi	r22, 0x40	; 64
     22e:	c8 01       	movw	r24, r16
     230:	e2 df       	rcall	.-60     	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
     232:	7e 01       	movw	r14, r28
     234:	80 e1       	ldi	r24, 0x10	; 16
     236:	e8 0e       	add	r14, r24
     238:	f1 1c       	adc	r15, r1
	for(n=0;n<16;n++){
		TWI_TransmitData(*text,TW_MT_DATA_ACK);
     23a:	48 e2       	ldi	r20, 0x28	; 40
     23c:	69 91       	ld	r22, Y+
     23e:	c8 01       	movw	r24, r16
     240:	da df       	rcall	.-76     	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	
	TWI_StartCommunication();
	
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
	TWI_TransmitData(SEND_DATA,TW_MT_DATA_ACK);
	for(n=0;n<16;n++){
     242:	ce 15       	cp	r28, r14
     244:	df 05       	cpc	r29, r15
     246:	c9 f7       	brne	.-14     	; 0x23a <_ZN3lcd4ShowEPh+0x2a>
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);// Clear Flag and Enable
}

void lcd::TWI_STOP(){
	
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
     248:	84 e9       	ldi	r24, 0x94	; 148
     24a:	80 93 bc 00 	sts	0x00BC, r24
		++text;
		}
		
	TWI_STOP();
	
}
     24e:	df 91       	pop	r29
     250:	cf 91       	pop	r28
     252:	1f 91       	pop	r17
     254:	0f 91       	pop	r16
     256:	ff 90       	pop	r15
     258:	ef 90       	pop	r14
     25a:	08 95       	ret

0000025c <_ZN3lcd11SelectLine1Ev>:


void lcd::SelectLine1(void){
     25c:	cf 93       	push	r28
     25e:	df 93       	push	r29
     260:	ec 01       	movw	r28, r24
	
	TWI_StartCommunication();
     262:	be df       	rcall	.-132    	; 0x1e0 <_ZN3lcd22TWI_StartCommunicationEv>
	
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     264:	48 e1       	ldi	r20, 0x18	; 24
     266:	6c e7       	ldi	r22, 0x7C	; 124
     268:	ce 01       	movw	r24, r28
     26a:	c5 df       	rcall	.-118    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     26c:	48 e2       	ldi	r20, 0x28	; 40
     26e:	60 e0       	ldi	r22, 0x00	; 0
     270:	ce 01       	movw	r24, r28
     272:	c1 df       	rcall	.-126    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(LINE_1,TW_MT_DATA_ACK);
     274:	48 e2       	ldi	r20, 0x28	; 40
     276:	60 e8       	ldi	r22, 0x80	; 128
     278:	ce 01       	movw	r24, r28
     27a:	bd df       	rcall	.-134    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);// Clear Flag and Enable
}

void lcd::TWI_STOP(){
	
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
     27c:	84 e9       	ldi	r24, 0x94	; 148
     27e:	80 93 bc 00 	sts	0x00BC, r24
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
	TWI_TransmitData(LINE_1,TW_MT_DATA_ACK);
	
	TWI_STOP();
}
     282:	df 91       	pop	r29
     284:	cf 91       	pop	r28
     286:	08 95       	ret

00000288 <_ZN3lcd11SelectLine2Ev>:


void lcd::SelectLine2(void){
     288:	cf 93       	push	r28
     28a:	df 93       	push	r29
     28c:	ec 01       	movw	r28, r24
	
	TWI_StartCommunication();
     28e:	a8 df       	rcall	.-176    	; 0x1e0 <_ZN3lcd22TWI_StartCommunicationEv>
	
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     290:	48 e1       	ldi	r20, 0x18	; 24
     292:	6c e7       	ldi	r22, 0x7C	; 124
     294:	ce 01       	movw	r24, r28
     296:	af df       	rcall	.-162    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     298:	48 e2       	ldi	r20, 0x28	; 40
     29a:	60 e0       	ldi	r22, 0x00	; 0
     29c:	ce 01       	movw	r24, r28
     29e:	ab df       	rcall	.-170    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(LINE_2,TW_MT_DATA_ACK);
     2a0:	48 e2       	ldi	r20, 0x28	; 40
     2a2:	60 ec       	ldi	r22, 0xC0	; 192
     2a4:	ce 01       	movw	r24, r28
     2a6:	a7 df       	rcall	.-178    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);// Clear Flag and Enable
}

void lcd::TWI_STOP(){
	
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
     2a8:	84 e9       	ldi	r24, 0x94	; 148
     2aa:	80 93 bc 00 	sts	0x00BC, r24
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
	TWI_TransmitData(LINE_2,TW_MT_DATA_ACK);
	
	TWI_STOP();
}
     2ae:	df 91       	pop	r29
     2b0:	cf 91       	pop	r28
     2b2:	08 95       	ret

000002b4 <_ZN3lcd5CGRAMEv>:

void lcd::CGRAM(void)
{
     2b4:	ff 92       	push	r15
     2b6:	0f 93       	push	r16
     2b8:	1f 93       	push	r17
     2ba:	cf 93       	push	r28
     2bc:	df 93       	push	r29
     2be:	ec 01       	movw	r28, r24
 	TWI_StartCommunication();
     2c0:	8f df       	rcall	.-226    	; 0x1e0 <_ZN3lcd22TWI_StartCommunicationEv>
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     2c2:	48 e1       	ldi	r20, 0x18	; 24
     2c4:	6c e7       	ldi	r22, 0x7C	; 124
     2c6:	ce 01       	movw	r24, r28
     2c8:	96 df       	rcall	.-212    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);;
     2ca:	48 e2       	ldi	r20, 0x28	; 40
     2cc:	60 e0       	ldi	r22, 0x00	; 0
     2ce:	ce 01       	movw	r24, r28
     2d0:	92 df       	rcall	.-220    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x38,TW_MT_DATA_ACK);		//go to instructino table 0
     2d2:	48 e2       	ldi	r20, 0x28	; 40
     2d4:	68 e3       	ldi	r22, 0x38	; 56
     2d6:	ce 01       	movw	r24, r28
     2d8:	8e df       	rcall	.-228    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x40,TW_MT_DATA_ACK);		//Set CGRAM address to 0x00
     2da:	48 e2       	ldi	r20, 0x28	; 40
     2dc:	60 e4       	ldi	r22, 0x40	; 64
     2de:	ce 01       	movw	r24, r28
     2e0:	8a df       	rcall	.-236    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);// Clear Flag and Enable
}

void lcd::TWI_STOP(){
	
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
     2e2:	0c eb       	ldi	r16, 0xBC	; 188
     2e4:	10 e0       	ldi	r17, 0x00	; 0
     2e6:	0f 2e       	mov	r0, r31
     2e8:	f4 e9       	ldi	r31, 0x94	; 148
     2ea:	ff 2e       	mov	r15, r31
     2ec:	f0 2d       	mov	r31, r0
     2ee:	f8 01       	movw	r30, r16
     2f0:	f0 82       	st	Z, r15
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2f2:	83 ec       	ldi	r24, 0xC3	; 195
     2f4:	99 e0       	ldi	r25, 0x09	; 9
     2f6:	01 97       	sbiw	r24, 0x01	; 1
     2f8:	f1 f7       	brne	.-4      	; 0x2f6 <_ZN3lcd5CGRAMEv+0x42>
     2fa:	00 c0       	rjmp	.+0      	; 0x2fc <_ZN3lcd5CGRAMEv+0x48>
     2fc:	00 00       	nop
	TWI_TransmitData(0x38,TW_MT_DATA_ACK);		//go to instructino table 0
	TWI_TransmitData(0x40,TW_MT_DATA_ACK);		//Set CGRAM address to 0x00
	TWI_STOP();
	_delay_ms(10);
	
	TWI_StartCommunication();
     2fe:	ce 01       	movw	r24, r28
     300:	6f df       	rcall	.-290    	; 0x1e0 <_ZN3lcd22TWI_StartCommunicationEv>
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     302:	48 e1       	ldi	r20, 0x18	; 24
     304:	6c e7       	ldi	r22, 0x7C	; 124
     306:	ce 01       	movw	r24, r28
     308:	76 df       	rcall	.-276    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     30a:	48 e2       	ldi	r20, 0x28	; 40
     30c:	60 e0       	ldi	r22, 0x00	; 0
     30e:	ce 01       	movw	r24, r28
     310:	72 df       	rcall	.-284    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x00,TW_MT_DATA_ACK);		//write to first CGRAM address
     312:	48 e2       	ldi	r20, 0x28	; 40
     314:	60 e0       	ldi	r22, 0x00	; 0
     316:	ce 01       	movw	r24, r28
     318:	6e df       	rcall	.-292    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x1E,TW_MT_DATA_ACK);
     31a:	48 e2       	ldi	r20, 0x28	; 40
     31c:	6e e1       	ldi	r22, 0x1E	; 30
     31e:	ce 01       	movw	r24, r28
     320:	6a df       	rcall	.-300    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x18,TW_MT_DATA_ACK);
     322:	48 e2       	ldi	r20, 0x28	; 40
     324:	68 e1       	ldi	r22, 0x18	; 24
     326:	ce 01       	movw	r24, r28
     328:	66 df       	rcall	.-308    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x14,TW_MT_DATA_ACK);
     32a:	48 e2       	ldi	r20, 0x28	; 40
     32c:	64 e1       	ldi	r22, 0x14	; 20
     32e:	ce 01       	movw	r24, r28
     330:	62 df       	rcall	.-316    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x12,TW_MT_DATA_ACK);
     332:	48 e2       	ldi	r20, 0x28	; 40
     334:	62 e1       	ldi	r22, 0x12	; 18
     336:	ce 01       	movw	r24, r28
     338:	5e df       	rcall	.-324    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);
     33a:	48 e2       	ldi	r20, 0x28	; 40
     33c:	61 e0       	ldi	r22, 0x01	; 1
     33e:	ce 01       	movw	r24, r28
     340:	5a df       	rcall	.-332    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x00,TW_MT_DATA_ACK);
     342:	48 e2       	ldi	r20, 0x28	; 40
     344:	60 e0       	ldi	r22, 0x00	; 0
     346:	ce 01       	movw	r24, r28
     348:	56 df       	rcall	.-340    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x00,TW_MT_DATA_ACK);		//8 bytes per character
     34a:	48 e2       	ldi	r20, 0x28	; 40
     34c:	60 e0       	ldi	r22, 0x00	; 0
     34e:	ce 01       	movw	r24, r28
     350:	52 df       	rcall	.-348    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);// Clear Flag and Enable
}

void lcd::TWI_STOP(){
	
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
     352:	f8 01       	movw	r30, r16
     354:	f0 82       	st	Z, r15
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);
	TWI_TransmitData(0x00,TW_MT_DATA_ACK);
	TWI_TransmitData(0x00,TW_MT_DATA_ACK);		//8 bytes per character
	//continue writing to remaining CGRAM if desired
	TWI_STOP();
}
     356:	df 91       	pop	r29
     358:	cf 91       	pop	r28
     35a:	1f 91       	pop	r17
     35c:	0f 91       	pop	r16
     35e:	ff 90       	pop	r15
     360:	08 95       	ret

00000362 <_ZN3lcd8init_LCDEv>:

void lcd::init_LCD()
{
     362:	ff 92       	push	r15
     364:	0f 93       	push	r16
     366:	1f 93       	push	r17
     368:	cf 93       	push	r28
     36a:	df 93       	push	r29
     36c:	ec 01       	movw	r28, r24
	TWI_StartCommunication();
     36e:	38 df       	rcall	.-400    	; 0x1e0 <_ZN3lcd22TWI_StartCommunicationEv>
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     370:	48 e1       	ldi	r20, 0x18	; 24
     372:	6c e7       	ldi	r22, 0x7C	; 124
     374:	ce 01       	movw	r24, r28
     376:	3f df       	rcall	.-386    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     378:	48 e2       	ldi	r20, 0x28	; 40
     37a:	60 e0       	ldi	r22, 0x00	; 0
     37c:	ce 01       	movw	r24, r28
     37e:	3b df       	rcall	.-394    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x38,TW_MT_DATA_ACK);						// Function Set: 8 bit bus mode, 2-line mode, single height font
     380:	48 e2       	ldi	r20, 0x28	; 40
     382:	68 e3       	ldi	r22, 0x38	; 56
     384:	ce 01       	movw	r24, r28
     386:	37 df       	rcall	.-402    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
     388:	87 ea       	ldi	r24, 0xA7	; 167
     38a:	91 e6       	ldi	r25, 0x61	; 97
     38c:	01 97       	sbiw	r24, 0x01	; 1
     38e:	f1 f7       	brne	.-4      	; 0x38c <_ZN3lcd8init_LCDEv+0x2a>
     390:	00 c0       	rjmp	.+0      	; 0x392 <_ZN3lcd8init_LCDEv+0x30>
     392:	00 00       	nop
	_delay_ms(100);
	TWI_TransmitData(0x39,TW_MT_DATA_ACK);						// Use Extended instruction set
     394:	48 e2       	ldi	r20, 0x28	; 40
     396:	69 e3       	ldi	r22, 0x39	; 57
     398:	ce 01       	movw	r24, r28
     39a:	2d df       	rcall	.-422    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
     39c:	e7 ea       	ldi	r30, 0xA7	; 167
     39e:	f1 e6       	ldi	r31, 0x61	; 97
     3a0:	31 97       	sbiw	r30, 0x01	; 1
     3a2:	f1 f7       	brne	.-4      	; 0x3a0 <_ZN3lcd8init_LCDEv+0x3e>
     3a4:	00 c0       	rjmp	.+0      	; 0x3a6 <_ZN3lcd8init_LCDEv+0x44>
     3a6:	00 00       	nop
	_delay_ms(100);
	TWI_TransmitData(0x14,TW_MT_DATA_ACK);						// Set Internal Osc Freq
     3a8:	48 e2       	ldi	r20, 0x28	; 40
     3aa:	64 e1       	ldi	r22, 0x14	; 20
     3ac:	ce 01       	movw	r24, r28
     3ae:	23 df       	rcall	.-442    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x78,TW_MT_DATA_ACK);						// Contrast Set
     3b0:	48 e2       	ldi	r20, 0x28	; 40
     3b2:	68 e7       	ldi	r22, 0x78	; 120
     3b4:	ce 01       	movw	r24, r28
     3b6:	1f df       	rcall	.-450    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x5D,TW_MT_DATA_ACK);						// Power/Icon/Contrast Control
     3b8:	48 e2       	ldi	r20, 0x28	; 40
     3ba:	6d e5       	ldi	r22, 0x5D	; 93
     3bc:	ce 01       	movw	r24, r28
     3be:	1b df       	rcall	.-458    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x6D,TW_MT_DATA_ACK);						// Follower Control
     3c0:	48 e2       	ldi	r20, 0x28	; 40
     3c2:	6d e6       	ldi	r22, 0x6D	; 109
     3c4:	ce 01       	movw	r24, r28
     3c6:	17 df       	rcall	.-466    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x0C,TW_MT_DATA_ACK);						// Display On/Off
     3c8:	48 e2       	ldi	r20, 0x28	; 40
     3ca:	6c e0       	ldi	r22, 0x0C	; 12
     3cc:	ce 01       	movw	r24, r28
     3ce:	13 df       	rcall	.-474    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);						// Clear Display
     3d0:	48 e2       	ldi	r20, 0x28	; 40
     3d2:	61 e0       	ldi	r22, 0x01	; 1
     3d4:	ce 01       	movw	r24, r28
     3d6:	0f df       	rcall	.-482    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x06,TW_MT_DATA_ACK);						// Entry Mode Set: Cursor/Shift as characters input
     3d8:	48 e2       	ldi	r20, 0x28	; 40
     3da:	66 e0       	ldi	r22, 0x06	; 6
     3dc:	ce 01       	movw	r24, r28
     3de:	0b df       	rcall	.-490    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
     3e0:	87 ea       	ldi	r24, 0xA7	; 167
     3e2:	91 e6       	ldi	r25, 0x61	; 97
     3e4:	01 97       	sbiw	r24, 0x01	; 1
     3e6:	f1 f7       	brne	.-4      	; 0x3e4 <_ZN3lcd8init_LCDEv+0x82>
     3e8:	00 c0       	rjmp	.+0      	; 0x3ea <_ZN3lcd8init_LCDEv+0x88>
     3ea:	00 00       	nop
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);// Clear Flag and Enable
}

void lcd::TWI_STOP(){
	
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
     3ec:	0c eb       	ldi	r16, 0xBC	; 188
     3ee:	10 e0       	ldi	r17, 0x00	; 0
     3f0:	0f 2e       	mov	r0, r31
     3f2:	f4 e9       	ldi	r31, 0x94	; 148
     3f4:	ff 2e       	mov	r15, r31
     3f6:	f0 2d       	mov	r31, r0
     3f8:	f8 01       	movw	r30, r16
     3fa:	f0 82       	st	Z, r15
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);						// Clear Display
	TWI_TransmitData(0x06,TW_MT_DATA_ACK);						// Entry Mode Set: Cursor/Shift as characters input
	_delay_ms(100);
	TWI_STOP();

	CGRAM();			//define CGRAM
     3fc:	ce 01       	movw	r24, r28
     3fe:	5a df       	rcall	.-332    	; 0x2b4 <_ZN3lcd5CGRAMEv>

	TWI_StartCommunication();
     400:	ce 01       	movw	r24, r28
     402:	ee de       	rcall	.-548    	; 0x1e0 <_ZN3lcd22TWI_StartCommunicationEv>
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     404:	48 e1       	ldi	r20, 0x18	; 24
     406:	6c e7       	ldi	r22, 0x7C	; 124
     408:	ce 01       	movw	r24, r28
     40a:	f5 de       	rcall	.-534    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     40c:	48 e2       	ldi	r20, 0x28	; 40
     40e:	60 e0       	ldi	r22, 0x00	; 0
     410:	ce 01       	movw	r24, r28
     412:	f1 de       	rcall	.-542    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x39,TW_MT_DATA_ACK);
     414:	48 e2       	ldi	r20, 0x28	; 40
     416:	69 e3       	ldi	r22, 0x39	; 57
     418:	ce 01       	movw	r24, r28
     41a:	ed de       	rcall	.-550    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);
     41c:	48 e2       	ldi	r20, 0x28	; 40
     41e:	61 e0       	ldi	r22, 0x01	; 1
     420:	ce 01       	movw	r24, r28
     422:	e9 de       	rcall	.-558    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);// Clear Flag and Enable
}

void lcd::TWI_STOP(){
	
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
     424:	f8 01       	movw	r30, r16
     426:	f0 82       	st	Z, r15
     428:	87 ea       	ldi	r24, 0xA7	; 167
     42a:	91 e6       	ldi	r25, 0x61	; 97
     42c:	01 97       	sbiw	r24, 0x01	; 1
     42e:	f1 f7       	brne	.-4      	; 0x42c <_ZN3lcd8init_LCDEv+0xca>
     430:	00 c0       	rjmp	.+0      	; 0x432 <_ZN3lcd8init_LCDEv+0xd0>
     432:	00 00       	nop
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
	TWI_TransmitData(0x39,TW_MT_DATA_ACK);
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);
	TWI_STOP();
	_delay_ms(100);
}
     434:	df 91       	pop	r29
     436:	cf 91       	pop	r28
     438:	1f 91       	pop	r17
     43a:	0f 91       	pop	r16
     43c:	ff 90       	pop	r15
     43e:	08 95       	ret

00000440 <_ZN3lcdC1Ev>:
#include "LCD.h"


lcd::lcd(){
     440:	cf 93       	push	r28
     442:	df 93       	push	r29
     444:	ec 01       	movw	r28, r24
	
		TWI_INIT();
     446:	b9 de       	rcall	.-654    	; 0x1ba <_ZN3lcd8TWI_INITEv>
		init_LCD();
     448:	ce 01       	movw	r24, r28
     44a:	8b df       	rcall	.-234    	; 0x362 <_ZN3lcd8init_LCDEv>
     44c:	87 e8       	ldi	r24, 0x87	; 135
     44e:	93 e1       	ldi	r25, 0x13	; 19
     450:	01 97       	sbiw	r24, 0x01	; 1
     452:	f1 f7       	brne	.-4      	; 0x450 <_ZN3lcdC1Ev+0x10>
     454:	00 c0       	rjmp	.+0      	; 0x456 <_ZN3lcdC1Ev+0x16>
     456:	00 00       	nop
		_delay_ms(20);
		
}
     458:	df 91       	pop	r29
     45a:	cf 91       	pop	r28
     45c:	08 95       	ret

0000045e <_ZN3lcd5printEPhh>:
	print(text2, LINE_BOTTOM);

}


void lcd::print(unsigned char *text, uint8_t valLine){
     45e:	0f 93       	push	r16
     460:	1f 93       	push	r17
     462:	cf 93       	push	r28
     464:	df 93       	push	r29
     466:	ec 01       	movw	r28, r24
     468:	8b 01       	movw	r16, r22
		
	if( valLine == LINE_TOP ){
     46a:	41 11       	cpse	r20, r1
     46c:	0b c0       	rjmp	.+22     	; 0x484 <_ZN3lcd5printEPhh+0x26>
		SelectLine1();
     46e:	f6 de       	rcall	.-532    	; 0x25c <_ZN3lcd11SelectLine1Ev>
     470:	83 ec       	ldi	r24, 0xC3	; 195
     472:	99 e0       	ldi	r25, 0x09	; 9
     474:	01 97       	sbiw	r24, 0x01	; 1
     476:	f1 f7       	brne	.-4      	; 0x474 <_ZN3lcd5printEPhh+0x16>
     478:	00 c0       	rjmp	.+0      	; 0x47a <_ZN3lcd5printEPhh+0x1c>
     47a:	00 00       	nop
		_delay_ms(10);
		Show(text);
     47c:	b8 01       	movw	r22, r16
     47e:	ce 01       	movw	r24, r28
     480:	c7 de       	rcall	.-626    	; 0x210 <_ZN3lcd4ShowEPh>
     482:	0c c0       	rjmp	.+24     	; 0x49c <_ZN3lcd5printEPhh+0x3e>
	}else if( valLine == LINE_BOTTOM ){
     484:	41 30       	cpi	r20, 0x01	; 1
     486:	51 f4       	brne	.+20     	; 0x49c <_ZN3lcd5printEPhh+0x3e>
		SelectLine2();
     488:	ff de       	rcall	.-514    	; 0x288 <_ZN3lcd11SelectLine2Ev>
     48a:	83 ec       	ldi	r24, 0xC3	; 195
     48c:	99 e0       	ldi	r25, 0x09	; 9
     48e:	01 97       	sbiw	r24, 0x01	; 1
     490:	f1 f7       	brne	.-4      	; 0x48e <_ZN3lcd5printEPhh+0x30>
     492:	00 c0       	rjmp	.+0      	; 0x494 <_ZN3lcd5printEPhh+0x36>
     494:	00 00       	nop
		_delay_ms(10);
		Show(text);
     496:	b8 01       	movw	r22, r16
     498:	ce 01       	movw	r24, r28
     49a:	ba de       	rcall	.-652    	; 0x210 <_ZN3lcd4ShowEPh>
	}
		
}
     49c:	df 91       	pop	r29
     49e:	cf 91       	pop	r28
     4a0:	1f 91       	pop	r17
     4a2:	0f 91       	pop	r16
     4a4:	08 95       	ret

000004a6 <_ZN3lcd15test_LCD_ScreenEv>:
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);
	TWI_STOP();
	_delay_ms(100);
}

void lcd::test_LCD_Screen(){
     4a6:	0f 93       	push	r16
     4a8:	1f 93       	push	r17
     4aa:	cf 93       	push	r28
     4ac:	df 93       	push	r29
     4ae:	cd b7       	in	r28, 0x3d	; 61
     4b0:	de b7       	in	r29, 0x3e	; 62
     4b2:	a2 97       	sbiw	r28, 0x22	; 34
     4b4:	0f b6       	in	r0, 0x3f	; 63
     4b6:	f8 94       	cli
     4b8:	de bf       	out	0x3e, r29	; 62
     4ba:	0f be       	out	0x3f, r0	; 63
     4bc:	cd bf       	out	0x3d, r28	; 61
     4be:	8c 01       	movw	r16, r24
	
	unsigned char text1[]={"-! TEST LINE 1 !"};
     4c0:	81 e1       	ldi	r24, 0x11	; 17
     4c2:	e0 e1       	ldi	r30, 0x10	; 16
     4c4:	f1 e0       	ldi	r31, 0x01	; 1
     4c6:	de 01       	movw	r26, r28
     4c8:	52 96       	adiw	r26, 0x12	; 18
     4ca:	01 90       	ld	r0, Z+
     4cc:	0d 92       	st	X+, r0
     4ce:	8a 95       	dec	r24
     4d0:	e1 f7       	brne	.-8      	; 0x4ca <_ZN3lcd15test_LCD_ScreenEv+0x24>
	unsigned char text2[]={"! TEST LINE 2 !-"};
     4d2:	81 e1       	ldi	r24, 0x11	; 17
     4d4:	e1 e2       	ldi	r30, 0x21	; 33
     4d6:	f1 e0       	ldi	r31, 0x01	; 1
     4d8:	de 01       	movw	r26, r28
     4da:	11 96       	adiw	r26, 0x01	; 1
     4dc:	01 90       	ld	r0, Z+
     4de:	0d 92       	st	X+, r0
     4e0:	8a 95       	dec	r24
     4e2:	e1 f7       	brne	.-8      	; 0x4dc <_ZN3lcd15test_LCD_ScreenEv+0x36>

	
	print(text1, LINE_TOP);
     4e4:	40 e0       	ldi	r20, 0x00	; 0
     4e6:	be 01       	movw	r22, r28
     4e8:	6e 5e       	subi	r22, 0xEE	; 238
     4ea:	7f 4f       	sbci	r23, 0xFF	; 255
     4ec:	c8 01       	movw	r24, r16
     4ee:	b7 df       	rcall	.-146    	; 0x45e <_ZN3lcd5printEPhh>
	print(text2, LINE_BOTTOM);
     4f0:	41 e0       	ldi	r20, 0x01	; 1
     4f2:	be 01       	movw	r22, r28
     4f4:	6f 5f       	subi	r22, 0xFF	; 255
     4f6:	7f 4f       	sbci	r23, 0xFF	; 255
     4f8:	c8 01       	movw	r24, r16
     4fa:	b1 df       	rcall	.-158    	; 0x45e <_ZN3lcd5printEPhh>
     4fc:	83 e2       	ldi	r24, 0x23	; 35
     4fe:	94 ef       	ldi	r25, 0xF4	; 244
     500:	01 97       	sbiw	r24, 0x01	; 1
     502:	f1 f7       	brne	.-4      	; 0x500 <_ZN3lcd15test_LCD_ScreenEv+0x5a>
     504:	00 c0       	rjmp	.+0      	; 0x506 <_ZN3lcd15test_LCD_ScreenEv+0x60>
     506:	00 00       	nop
	_delay_ms(250);
	print(text1, LINE_BOTTOM);
     508:	41 e0       	ldi	r20, 0x01	; 1
     50a:	be 01       	movw	r22, r28
     50c:	6e 5e       	subi	r22, 0xEE	; 238
     50e:	7f 4f       	sbci	r23, 0xFF	; 255
     510:	c8 01       	movw	r24, r16
     512:	a5 df       	rcall	.-182    	; 0x45e <_ZN3lcd5printEPhh>
	print(text2, LINE_TOP);
     514:	40 e0       	ldi	r20, 0x00	; 0
     516:	be 01       	movw	r22, r28
     518:	6f 5f       	subi	r22, 0xFF	; 255
     51a:	7f 4f       	sbci	r23, 0xFF	; 255
     51c:	c8 01       	movw	r24, r16
     51e:	9f df       	rcall	.-194    	; 0x45e <_ZN3lcd5printEPhh>
     520:	83 e2       	ldi	r24, 0x23	; 35
     522:	94 ef       	ldi	r25, 0xF4	; 244
     524:	01 97       	sbiw	r24, 0x01	; 1
     526:	f1 f7       	brne	.-4      	; 0x524 <_ZN3lcd15test_LCD_ScreenEv+0x7e>
     528:	00 c0       	rjmp	.+0      	; 0x52a <_ZN3lcd15test_LCD_ScreenEv+0x84>
     52a:	00 00       	nop
	_delay_ms(250);
	print(text1, LINE_TOP);
     52c:	40 e0       	ldi	r20, 0x00	; 0
     52e:	be 01       	movw	r22, r28
     530:	6e 5e       	subi	r22, 0xEE	; 238
     532:	7f 4f       	sbci	r23, 0xFF	; 255
     534:	c8 01       	movw	r24, r16
     536:	93 df       	rcall	.-218    	; 0x45e <_ZN3lcd5printEPhh>
	print(text2, LINE_BOTTOM);
     538:	41 e0       	ldi	r20, 0x01	; 1
     53a:	be 01       	movw	r22, r28
     53c:	6f 5f       	subi	r22, 0xFF	; 255
     53e:	7f 4f       	sbci	r23, 0xFF	; 255
     540:	c8 01       	movw	r24, r16
     542:	8d df       	rcall	.-230    	; 0x45e <_ZN3lcd5printEPhh>

}
     544:	a2 96       	adiw	r28, 0x22	; 34
     546:	0f b6       	in	r0, 0x3f	; 63
     548:	f8 94       	cli
     54a:	de bf       	out	0x3e, r29	; 62
     54c:	0f be       	out	0x3f, r0	; 63
     54e:	cd bf       	out	0x3d, r28	; 61
     550:	df 91       	pop	r29
     552:	cf 91       	pop	r28
     554:	1f 91       	pop	r17
     556:	0f 91       	pop	r16
     558:	08 95       	ret

0000055a <_Z17ds1305_spi_selectv>:
*	with other devices, their Select routines should reset these
*	parameters to their value.
*	Raising the line enables the part
*/
void ds1305_spi_select() {
	SPCR |= (1<<CPHA);
     55a:	8c b5       	in	r24, 0x2c	; 44
     55c:	84 60       	ori	r24, 0x04	; 4
     55e:	8c bd       	out	0x2c, r24	; 44
	PORTB |= (1<<SS_PIN);
     560:	2c 9a       	sbi	0x05, 4	; 5
     562:	08 95       	ret

00000564 <_Z19ds1305_spi_deselectv>:
/*
*	This routine de-selects the device by lowering the CE
*	line. Must be done after the master transmit is complete
*/
void ds1305_spi_deselect() {
	PORTB &= ~(1<<SS_PIN);
     564:	2c 98       	cbi	0x05, 4	; 5
     566:	08 95       	ret

00000568 <_Z11ds1305_Initv>:
}

void ds1305_Init()
{
     568:	cf 93       	push	r28
     56a:	df 93       	push	r29
     56c:	1f 92       	push	r1
     56e:	cd b7       	in	r28, 0x3d	; 61
     570:	de b7       	in	r29, 0x3e	; 62
	volatile char IOReg;
	/* Outputs: MOSI and SCK out, all others inputs */
	DDRB = (1<<DD_MOSI_PIN) | (1<<DD_SCK_PIN) | (1<<DD_SS_PIN);
     572:	80 eb       	ldi	r24, 0xB0	; 176
     574:	84 b9       	out	0x04, r24	; 4
	/* Enable SPI, Master, CPOL=0, CPHA=1, set clock rate fck/16 */
	SPCR = (1<<SPE) | (1<<MSTR) | (1<<SPR0);	// POSSIBLE ERROR: PULLING DATA HIGH
     576:	81 e5       	ldi	r24, 0x51	; 81
     578:	8c bd       	out	0x2c, r24	; 44
	
	/* Clear the SPIF bit in SPSR */
	IOReg = SPSR;
     57a:	8d b5       	in	r24, 0x2d	; 45
     57c:	89 83       	std	Y+1, r24	; 0x01
	IOReg = SPDR;
     57e:	8e b5       	in	r24, 0x2e	; 46
     580:	89 83       	std	Y+1, r24	; 0x01
	ds1305_spi_deselect();
     582:	f0 df       	rcall	.-32     	; 0x564 <_Z19ds1305_spi_deselectv>
}
     584:	0f 90       	pop	r0
     586:	df 91       	pop	r29
     588:	cf 91       	pop	r28
     58a:	08 95       	ret

0000058c <_Z18SPI_MasterTransmith>:
// This routine exchanges 1 byte with the SPI port. 
unsigned char SPI_MasterTransmit(unsigned char cData)
{
	// Set Pointer to beginning of String

	SPDR  = cData;
     58c:	8e bd       	out	0x2e, r24	; 46
	/* wait until Char is sent */
	while (!(SPSR & (1<<SPIF))){
     58e:	0d b4       	in	r0, 0x2d	; 45
     590:	07 fe       	sbrs	r0, 7
     592:	fd cf       	rjmp	.-6      	; 0x58e <_Z18SPI_MasterTransmith+0x2>
		;	
	}
	return SPDR;
     594:	8e b5       	in	r24, 0x2e	; 46
}
     596:	08 95       	ret

00000598 <_Z16ds1305_ReadBlockhPhj>:
/*
*	ReadBlock reads iCount bytes starting at cAddr into the
*	buffer pBuffer
*/
void ds1305_ReadBlock(unsigned char cAddr, unsigned char *pBuffer, unsigned int iCount)
{
     598:	ef 92       	push	r14
     59a:	ff 92       	push	r15
     59c:	0f 93       	push	r16
     59e:	1f 93       	push	r17
     5a0:	cf 93       	push	r28
     5a2:	df 93       	push	r29
     5a4:	18 2f       	mov	r17, r24
     5a6:	e6 2e       	mov	r14, r22
     5a8:	f7 2e       	mov	r15, r23
     5aa:	ea 01       	movw	r28, r20
	ds1305_spi_select();
     5ac:	d6 df       	rcall	.-84     	; 0x55a <_Z17ds1305_spi_selectv>
	SPI_MasterTransmit(cAddr);
     5ae:	81 2f       	mov	r24, r17
     5b0:	ed df       	rcall	.-38     	; 0x58c <_Z18SPI_MasterTransmith>
	while(iCount--)
     5b2:	20 97       	sbiw	r28, 0x00	; 0
     5b4:	49 f0       	breq	.+18     	; 0x5c8 <_Z16ds1305_ReadBlockhPhj+0x30>
     5b6:	0e 2d       	mov	r16, r14
     5b8:	1f 2d       	mov	r17, r15
	{
		*pBuffer++ = SPI_MasterTransmit(0);
     5ba:	80 e0       	ldi	r24, 0x00	; 0
     5bc:	e7 df       	rcall	.-50     	; 0x58c <_Z18SPI_MasterTransmith>
     5be:	f8 01       	movw	r30, r16
     5c0:	81 93       	st	Z+, r24
     5c2:	8f 01       	movw	r16, r30
     5c4:	21 97       	sbiw	r28, 0x01	; 1
*/
void ds1305_ReadBlock(unsigned char cAddr, unsigned char *pBuffer, unsigned int iCount)
{
	ds1305_spi_select();
	SPI_MasterTransmit(cAddr);
	while(iCount--)
     5c6:	c9 f7       	brne	.-14     	; 0x5ba <_Z16ds1305_ReadBlockhPhj+0x22>
	{
		*pBuffer++ = SPI_MasterTransmit(0);
	}
	ds1305_spi_deselect();
     5c8:	cd df       	rcall	.-102    	; 0x564 <_Z19ds1305_spi_deselectv>
}
     5ca:	df 91       	pop	r29
     5cc:	cf 91       	pop	r28
     5ce:	1f 91       	pop	r17
     5d0:	0f 91       	pop	r16
     5d2:	ff 90       	pop	r15
     5d4:	ef 90       	pop	r14
     5d6:	08 95       	ret

000005d8 <_Z17ds1305_WriteBlockhPhj>:
*  WriteBlock sends iCount bytes from the buffer pBuffer
*  to the device at iAddr + 0x80. The device uses a split
*  memory map where all write addresses are at address +0x80
*/
void ds1305_WriteBlock(unsigned char iAddr, unsigned char *pBuffer, unsigned int iCount)
{
     5d8:	ef 92       	push	r14
     5da:	ff 92       	push	r15
     5dc:	0f 93       	push	r16
     5de:	1f 93       	push	r17
     5e0:	cf 93       	push	r28
     5e2:	df 93       	push	r29
     5e4:	18 2f       	mov	r17, r24
     5e6:	e6 2e       	mov	r14, r22
     5e8:	f7 2e       	mov	r15, r23
     5ea:	ea 01       	movw	r28, r20
	ds1305_spi_select();
     5ec:	b6 df       	rcall	.-148    	; 0x55a <_Z17ds1305_spi_selectv>
	SPI_MasterTransmit(iAddr + 0x80);
     5ee:	80 e8       	ldi	r24, 0x80	; 128
     5f0:	81 0f       	add	r24, r17
     5f2:	cc df       	rcall	.-104    	; 0x58c <_Z18SPI_MasterTransmith>
	while(iCount--)
     5f4:	20 97       	sbiw	r28, 0x00	; 0
     5f6:	41 f0       	breq	.+16     	; 0x608 <_Z17ds1305_WriteBlockhPhj+0x30>
     5f8:	0e 2d       	mov	r16, r14
     5fa:	1f 2d       	mov	r17, r15
	{
		SPI_MasterTransmit(*pBuffer++);
     5fc:	f8 01       	movw	r30, r16
     5fe:	81 91       	ld	r24, Z+
     600:	8f 01       	movw	r16, r30
     602:	c4 df       	rcall	.-120    	; 0x58c <_Z18SPI_MasterTransmith>
     604:	21 97       	sbiw	r28, 0x01	; 1
*/
void ds1305_WriteBlock(unsigned char iAddr, unsigned char *pBuffer, unsigned int iCount)
{
	ds1305_spi_select();
	SPI_MasterTransmit(iAddr + 0x80);
	while(iCount--)
     606:	d1 f7       	brne	.-12     	; 0x5fc <_Z17ds1305_WriteBlockhPhj+0x24>
	{
		SPI_MasterTransmit(*pBuffer++);
	}
	ds1305_spi_deselect();
     608:	ad df       	rcall	.-166    	; 0x564 <_Z19ds1305_spi_deselectv>
     60a:	df 91       	pop	r29
     60c:	cf 91       	pop	r28
     60e:	1f 91       	pop	r17
     610:	0f 91       	pop	r16
     612:	ff 90       	pop	r15
     614:	ef 90       	pop	r14
     616:	08 95       	ret

00000618 <_Z14Test_On_PortA0v>:
void Start_RTC();


void Test_On_PortA0(){
	
	DDRA |= 0x01;
     618:	08 9a       	sbi	0x01, 0	; 1
	
	PORTA |= ( 1 << PINA0);
     61a:	10 9a       	sbi	0x02, 0	; 2
     61c:	83 e2       	ldi	r24, 0x23	; 35
     61e:	94 ef       	ldi	r25, 0xF4	; 244
     620:	01 97       	sbiw	r24, 0x01	; 1
     622:	f1 f7       	brne	.-4      	; 0x620 <_Z14Test_On_PortA0v+0x8>
     624:	00 c0       	rjmp	.+0      	; 0x626 <_Z14Test_On_PortA0v+0xe>
     626:	00 00       	nop
	_delay_ms(250);
	PORTA &= ~( 1 << PINA0);
     628:	10 98       	cbi	0x02, 0	; 2
     62a:	83 e2       	ldi	r24, 0x23	; 35
     62c:	94 ef       	ldi	r25, 0xF4	; 244
     62e:	01 97       	sbiw	r24, 0x01	; 1
     630:	f1 f7       	brne	.-4      	; 0x62e <_Z14Test_On_PortA0v+0x16>
     632:	00 c0       	rjmp	.+0      	; 0x634 <_Z14Test_On_PortA0v+0x1c>
     634:	00 00       	nop
	_delay_ms(250);
	PORTA |= ( 1 << PINA0);
     636:	10 9a       	sbi	0x02, 0	; 2
     638:	08 95       	ret

0000063a <_Z9Start_RTCv>:
}


void Start_RTC(){
     63a:	cf 93       	push	r28
     63c:	df 93       	push	r29
     63e:	1f 92       	push	r1
     640:	cd b7       	in	r28, 0x3d	; 61
     642:	de b7       	in	r29, 0x3e	; 62
	
	uint8_t tc = 0;
     644:	19 82       	std	Y+1, r1	; 0x01


	ds1305_Init();
     646:	90 df       	rcall	.-224    	; 0x568 <_Z11ds1305_Initv>
	ds1305_WriteBlock(0x0F,&tc,1);	// Enable timer and unwrite protect memory
     648:	41 e0       	ldi	r20, 0x01	; 1
     64a:	50 e0       	ldi	r21, 0x00	; 0
     64c:	be 01       	movw	r22, r28
     64e:	6f 5f       	subi	r22, 0xFF	; 255
     650:	7f 4f       	sbci	r23, 0xFF	; 255
     652:	8f e0       	ldi	r24, 0x0F	; 15
     654:	c1 df       	rcall	.-126    	; 0x5d8 <_Z17ds1305_WriteBlockhPhj>
	
}
     656:	0f 90       	pop	r0
     658:	df 91       	pop	r29
     65a:	cf 91       	pop	r28
     65c:	08 95       	ret

0000065e <main>:


using namespace std;


int main(){
     65e:	cf 93       	push	r28
     660:	df 93       	push	r29
     662:	cd b7       	in	r28, 0x3d	; 61
     664:	de b7       	in	r29, 0x3e	; 62
     666:	6f 97       	sbiw	r28, 0x1f	; 31
     668:	0f b6       	in	r0, 0x3f	; 63
     66a:	f8 94       	cli
     66c:	de bf       	out	0x3e, r29	; 62
     66e:	0f be       	out	0x3f, r0	; 63
     670:	cd bf       	out	0x3d, r28	; 61
	
	ds1305_Time dstTime;
	ds1305_Time dstCurrentTime;
	lcd lcdNHD;
     672:	ce 01       	movw	r24, r28
     674:	4f 96       	adiw	r24, 0x1f	; 31
     676:	e4 de       	rcall	.-568    	; 0x440 <_ZN3lcdC1Ev>
	
	dstCurrentTime.ucSeconds = 0x00;
     678:	19 8a       	std	Y+17, r1	; 0x11
	dstCurrentTime.ucMinutes = 0x39;
     67a:	89 e3       	ldi	r24, 0x39	; 57
     67c:	8a 8b       	std	Y+18, r24	; 0x12
	dstCurrentTime.ucHours = 0x10;
     67e:	80 e1       	ldi	r24, 0x10	; 16
     680:	8b 8b       	std	Y+19, r24	; 0x13
	

	Test_On_PortA0();
     682:	ca df       	rcall	.-108    	; 0x618 <_Z14Test_On_PortA0v>
	lcdNHD.test_LCD_Screen();
     684:	ce 01       	movw	r24, r28
     686:	4f 96       	adiw	r24, 0x1f	; 31
     688:	0e df       	rcall	.-484    	; 0x4a6 <_ZN3lcd15test_LCD_ScreenEv>
	
	Start_RTC();
     68a:	d7 df       	rcall	.-82     	; 0x63a <_Z9Start_RTCv>
	
	SetCurrentTime(&dstCurrentTime);
     68c:	47 e0       	ldi	r20, 0x07	; 7
     68e:	50 e0       	ldi	r21, 0x00	; 0
     690:	be 01       	movw	r22, r28
     692:	6f 5e       	subi	r22, 0xEF	; 239
     694:	7f 4f       	sbci	r23, 0xFF	; 255
     696:	80 e0       	ldi	r24, 0x00	; 0
     698:	9f df       	rcall	.-194    	; 0x5d8 <_Z17ds1305_WriteBlockhPhj>
	
	unsigned char timo[16] = {0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20};
     69a:	80 e1       	ldi	r24, 0x10	; 16
     69c:	e0 e0       	ldi	r30, 0x00	; 0
     69e:	f1 e0       	ldi	r31, 0x01	; 1
     6a0:	de 01       	movw	r26, r28
     6a2:	11 96       	adiw	r26, 0x01	; 1
     6a4:	01 90       	ld	r0, Z+
     6a6:	0d 92       	st	X+, r0
     6a8:	8a 95       	dec	r24
     6aa:	e1 f7       	brne	.-8      	; 0x6a4 <main+0x46>
		houo &= 0x0000;
		houo |= (( dstTime.ucHours & 0xF0 ) + 0x0300 ) << 4;
		houo |= ( dstTime.ucHours & 0x0F) + 0x0030;
		timo[3] = houo >> 8;
		timo[4] = houo & 0x00FF;
		timo[5] = ':';
     6ac:	1a e3       	ldi	r17, 0x3A	; 58
	uint16_t seco = 0x2020;
	uint16_t mino = 0x20;
	uint16_t houo = 0x20;
	
	for(;;){
		GetCurrentTime(&dstTime);
     6ae:	47 e0       	ldi	r20, 0x07	; 7
     6b0:	50 e0       	ldi	r21, 0x00	; 0
     6b2:	be 01       	movw	r22, r28
     6b4:	68 5e       	subi	r22, 0xE8	; 232
     6b6:	7f 4f       	sbci	r23, 0xFF	; 255
     6b8:	80 e0       	ldi	r24, 0x00	; 0
     6ba:	6e df       	rcall	.-292    	; 0x598 <_Z16ds1305_ReadBlockhPhj>
		seco &= 0x0000;
		seco |= (( dstTime.ucSeconds & 0xF0 ) + 0x0300 ) << 4;
     6bc:	98 8d       	ldd	r25, Y+24	; 0x18
     6be:	29 2f       	mov	r18, r25
     6c0:	20 7f       	andi	r18, 0xF0	; 240
     6c2:	30 e0       	ldi	r19, 0x00	; 0
     6c4:	3d 5f       	subi	r19, 0xFD	; 253
     6c6:	22 95       	swap	r18
     6c8:	32 95       	swap	r19
     6ca:	30 7f       	andi	r19, 0xF0	; 240
     6cc:	32 27       	eor	r19, r18
     6ce:	20 7f       	andi	r18, 0xF0	; 240
     6d0:	32 27       	eor	r19, r18
		seco |= ( dstTime.ucSeconds & 0x0F) + 0x0030;
     6d2:	9f 70       	andi	r25, 0x0F	; 15
     6d4:	89 2f       	mov	r24, r25
     6d6:	90 e0       	ldi	r25, 0x00	; 0
     6d8:	c0 96       	adiw	r24, 0x30	; 48
     6da:	82 2b       	or	r24, r18
     6dc:	93 2b       	or	r25, r19
		mino &= 0x0000;
		mino |= (( dstTime.ucMinutes & 0xF0 ) + 0x0300 ) << 4;
     6de:	39 8d       	ldd	r19, Y+25	; 0x19
     6e0:	43 2f       	mov	r20, r19
     6e2:	40 7f       	andi	r20, 0xF0	; 240
     6e4:	50 e0       	ldi	r21, 0x00	; 0
     6e6:	5d 5f       	subi	r21, 0xFD	; 253
     6e8:	42 95       	swap	r20
     6ea:	52 95       	swap	r21
     6ec:	50 7f       	andi	r21, 0xF0	; 240
     6ee:	54 27       	eor	r21, r20
     6f0:	40 7f       	andi	r20, 0xF0	; 240
     6f2:	54 27       	eor	r21, r20
		mino |= ( dstTime.ucMinutes & 0x0F) + 0x0030;
     6f4:	3f 70       	andi	r19, 0x0F	; 15
     6f6:	23 2f       	mov	r18, r19
     6f8:	30 e0       	ldi	r19, 0x00	; 0
     6fa:	20 5d       	subi	r18, 0xD0	; 208
     6fc:	3f 4f       	sbci	r19, 0xFF	; 255
     6fe:	24 2b       	or	r18, r20
     700:	35 2b       	or	r19, r21
		houo &= 0x0000;
		houo |= (( dstTime.ucHours & 0xF0 ) + 0x0300 ) << 4;
     702:	5a 8d       	ldd	r21, Y+26	; 0x1a
     704:	65 2f       	mov	r22, r21
     706:	60 7f       	andi	r22, 0xF0	; 240
     708:	70 e0       	ldi	r23, 0x00	; 0
     70a:	7d 5f       	subi	r23, 0xFD	; 253
     70c:	62 95       	swap	r22
     70e:	72 95       	swap	r23
     710:	70 7f       	andi	r23, 0xF0	; 240
     712:	76 27       	eor	r23, r22
     714:	60 7f       	andi	r22, 0xF0	; 240
     716:	76 27       	eor	r23, r22
		houo |= ( dstTime.ucHours & 0x0F) + 0x0030;
     718:	5f 70       	andi	r21, 0x0F	; 15
     71a:	45 2f       	mov	r20, r21
     71c:	50 e0       	ldi	r21, 0x00	; 0
     71e:	40 5d       	subi	r20, 0xD0	; 208
     720:	5f 4f       	sbci	r21, 0xFF	; 255
     722:	46 2b       	or	r20, r22
     724:	57 2b       	or	r21, r23
		timo[3] = houo >> 8;
     726:	5c 83       	std	Y+4, r21	; 0x04
		timo[4] = houo & 0x00FF;
     728:	4d 83       	std	Y+5, r20	; 0x05
		timo[5] = ':';
     72a:	1e 83       	std	Y+6, r17	; 0x06
		timo[6] = mino >> 8;
     72c:	3f 83       	std	Y+7, r19	; 0x07
		timo[7] = mino & 0x00FF;
     72e:	28 87       	std	Y+8, r18	; 0x08
		timo[8] = ':';
     730:	19 87       	std	Y+9, r17	; 0x09
		timo[9] = seco >> 8;
     732:	9a 87       	std	Y+10, r25	; 0x0a
		timo[10] = seco & 0x00FF;
     734:	8b 87       	std	Y+11, r24	; 0x0b
		lcdNHD.print(timo, LINE_TOP);
     736:	40 e0       	ldi	r20, 0x00	; 0
     738:	be 01       	movw	r22, r28
     73a:	6f 5f       	subi	r22, 0xFF	; 255
     73c:	7f 4f       	sbci	r23, 0xFF	; 255
     73e:	ce 01       	movw	r24, r28
     740:	4f 96       	adiw	r24, 0x1f	; 31
     742:	8d de       	rcall	.-742    	; 0x45e <_ZN3lcd5printEPhh>
     744:	2f e3       	ldi	r18, 0x3F	; 63
     746:	8d e0       	ldi	r24, 0x0D	; 13
     748:	93 e0       	ldi	r25, 0x03	; 3
     74a:	21 50       	subi	r18, 0x01	; 1
     74c:	80 40       	sbci	r24, 0x00	; 0
     74e:	90 40       	sbci	r25, 0x00	; 0
     750:	e1 f7       	brne	.-8      	; 0x74a <main+0xec>
     752:	00 c0       	rjmp	.+0      	; 0x754 <main+0xf6>
     754:	00 00       	nop
     756:	ab cf       	rjmp	.-170    	; 0x6ae <main+0x50>

00000758 <vfprintf>:
     758:	2f 92       	push	r2
     75a:	3f 92       	push	r3
     75c:	4f 92       	push	r4
     75e:	5f 92       	push	r5
     760:	6f 92       	push	r6
     762:	7f 92       	push	r7
     764:	8f 92       	push	r8
     766:	9f 92       	push	r9
     768:	af 92       	push	r10
     76a:	bf 92       	push	r11
     76c:	cf 92       	push	r12
     76e:	df 92       	push	r13
     770:	ef 92       	push	r14
     772:	ff 92       	push	r15
     774:	0f 93       	push	r16
     776:	1f 93       	push	r17
     778:	cf 93       	push	r28
     77a:	df 93       	push	r29
     77c:	cd b7       	in	r28, 0x3d	; 61
     77e:	de b7       	in	r29, 0x3e	; 62
     780:	63 97       	sbiw	r28, 0x13	; 19
     782:	0f b6       	in	r0, 0x3f	; 63
     784:	f8 94       	cli
     786:	de bf       	out	0x3e, r29	; 62
     788:	0f be       	out	0x3f, r0	; 63
     78a:	cd bf       	out	0x3d, r28	; 61
     78c:	6c 01       	movw	r12, r24
     78e:	4b 01       	movw	r8, r22
     790:	2a 01       	movw	r4, r20
     792:	fc 01       	movw	r30, r24
     794:	17 82       	std	Z+7, r1	; 0x07
     796:	16 82       	std	Z+6, r1	; 0x06
     798:	83 81       	ldd	r24, Z+3	; 0x03
     79a:	81 ff       	sbrs	r24, 1
     79c:	29 c3       	rjmp	.+1618   	; 0xdf0 <vfprintf+0x698>
     79e:	ae 01       	movw	r20, r28
     7a0:	4f 5f       	subi	r20, 0xFF	; 255
     7a2:	5f 4f       	sbci	r21, 0xFF	; 255
     7a4:	3a 01       	movw	r6, r20
     7a6:	f6 01       	movw	r30, r12
     7a8:	93 81       	ldd	r25, Z+3	; 0x03
     7aa:	f4 01       	movw	r30, r8
     7ac:	93 fd       	sbrc	r25, 3
     7ae:	85 91       	lpm	r24, Z+
     7b0:	93 ff       	sbrs	r25, 3
     7b2:	81 91       	ld	r24, Z+
     7b4:	4f 01       	movw	r8, r30
     7b6:	88 23       	and	r24, r24
     7b8:	09 f4       	brne	.+2      	; 0x7bc <vfprintf+0x64>
     7ba:	16 c3       	rjmp	.+1580   	; 0xde8 <vfprintf+0x690>
     7bc:	85 32       	cpi	r24, 0x25	; 37
     7be:	39 f4       	brne	.+14     	; 0x7ce <vfprintf+0x76>
     7c0:	93 fd       	sbrc	r25, 3
     7c2:	85 91       	lpm	r24, Z+
     7c4:	93 ff       	sbrs	r25, 3
     7c6:	81 91       	ld	r24, Z+
     7c8:	4f 01       	movw	r8, r30
     7ca:	85 32       	cpi	r24, 0x25	; 37
     7cc:	31 f4       	brne	.+12     	; 0x7da <vfprintf+0x82>
     7ce:	b6 01       	movw	r22, r12
     7d0:	90 e0       	ldi	r25, 0x00	; 0
     7d2:	38 d4       	rcall	.+2160   	; 0x1044 <fputc>
     7d4:	52 01       	movw	r10, r4
     7d6:	25 01       	movw	r4, r10
     7d8:	e6 cf       	rjmp	.-52     	; 0x7a6 <vfprintf+0x4e>
     7da:	10 e0       	ldi	r17, 0x00	; 0
     7dc:	f1 2c       	mov	r15, r1
     7de:	20 e0       	ldi	r18, 0x00	; 0
     7e0:	20 32       	cpi	r18, 0x20	; 32
     7e2:	a0 f4       	brcc	.+40     	; 0x80c <vfprintf+0xb4>
     7e4:	8b 32       	cpi	r24, 0x2B	; 43
     7e6:	69 f0       	breq	.+26     	; 0x802 <vfprintf+0xaa>
     7e8:	30 f4       	brcc	.+12     	; 0x7f6 <vfprintf+0x9e>
     7ea:	80 32       	cpi	r24, 0x20	; 32
     7ec:	59 f0       	breq	.+22     	; 0x804 <vfprintf+0xac>
     7ee:	83 32       	cpi	r24, 0x23	; 35
     7f0:	69 f4       	brne	.+26     	; 0x80c <vfprintf+0xb4>
     7f2:	20 61       	ori	r18, 0x10	; 16
     7f4:	2c c0       	rjmp	.+88     	; 0x84e <vfprintf+0xf6>
     7f6:	8d 32       	cpi	r24, 0x2D	; 45
     7f8:	39 f0       	breq	.+14     	; 0x808 <vfprintf+0xb0>
     7fa:	80 33       	cpi	r24, 0x30	; 48
     7fc:	39 f4       	brne	.+14     	; 0x80c <vfprintf+0xb4>
     7fe:	21 60       	ori	r18, 0x01	; 1
     800:	26 c0       	rjmp	.+76     	; 0x84e <vfprintf+0xf6>
     802:	22 60       	ori	r18, 0x02	; 2
     804:	24 60       	ori	r18, 0x04	; 4
     806:	23 c0       	rjmp	.+70     	; 0x84e <vfprintf+0xf6>
     808:	28 60       	ori	r18, 0x08	; 8
     80a:	21 c0       	rjmp	.+66     	; 0x84e <vfprintf+0xf6>
     80c:	27 fd       	sbrc	r18, 7
     80e:	27 c0       	rjmp	.+78     	; 0x85e <vfprintf+0x106>
     810:	30 ed       	ldi	r19, 0xD0	; 208
     812:	38 0f       	add	r19, r24
     814:	3a 30       	cpi	r19, 0x0A	; 10
     816:	78 f4       	brcc	.+30     	; 0x836 <vfprintf+0xde>
     818:	26 ff       	sbrs	r18, 6
     81a:	06 c0       	rjmp	.+12     	; 0x828 <vfprintf+0xd0>
     81c:	fa e0       	ldi	r31, 0x0A	; 10
     81e:	1f 9f       	mul	r17, r31
     820:	30 0d       	add	r19, r0
     822:	11 24       	eor	r1, r1
     824:	13 2f       	mov	r17, r19
     826:	13 c0       	rjmp	.+38     	; 0x84e <vfprintf+0xf6>
     828:	4a e0       	ldi	r20, 0x0A	; 10
     82a:	f4 9e       	mul	r15, r20
     82c:	30 0d       	add	r19, r0
     82e:	11 24       	eor	r1, r1
     830:	f3 2e       	mov	r15, r19
     832:	20 62       	ori	r18, 0x20	; 32
     834:	0c c0       	rjmp	.+24     	; 0x84e <vfprintf+0xf6>
     836:	8e 32       	cpi	r24, 0x2E	; 46
     838:	21 f4       	brne	.+8      	; 0x842 <vfprintf+0xea>
     83a:	26 fd       	sbrc	r18, 6
     83c:	d5 c2       	rjmp	.+1450   	; 0xde8 <vfprintf+0x690>
     83e:	20 64       	ori	r18, 0x40	; 64
     840:	06 c0       	rjmp	.+12     	; 0x84e <vfprintf+0xf6>
     842:	8c 36       	cpi	r24, 0x6C	; 108
     844:	11 f4       	brne	.+4      	; 0x84a <vfprintf+0xf2>
     846:	20 68       	ori	r18, 0x80	; 128
     848:	02 c0       	rjmp	.+4      	; 0x84e <vfprintf+0xf6>
     84a:	88 36       	cpi	r24, 0x68	; 104
     84c:	41 f4       	brne	.+16     	; 0x85e <vfprintf+0x106>
     84e:	f4 01       	movw	r30, r8
     850:	93 fd       	sbrc	r25, 3
     852:	85 91       	lpm	r24, Z+
     854:	93 ff       	sbrs	r25, 3
     856:	81 91       	ld	r24, Z+
     858:	4f 01       	movw	r8, r30
     85a:	81 11       	cpse	r24, r1
     85c:	c1 cf       	rjmp	.-126    	; 0x7e0 <vfprintf+0x88>
     85e:	9b eb       	ldi	r25, 0xBB	; 187
     860:	98 0f       	add	r25, r24
     862:	93 30       	cpi	r25, 0x03	; 3
     864:	18 f4       	brcc	.+6      	; 0x86c <vfprintf+0x114>
     866:	20 61       	ori	r18, 0x10	; 16
     868:	80 5e       	subi	r24, 0xE0	; 224
     86a:	06 c0       	rjmp	.+12     	; 0x878 <vfprintf+0x120>
     86c:	9b e9       	ldi	r25, 0x9B	; 155
     86e:	98 0f       	add	r25, r24
     870:	93 30       	cpi	r25, 0x03	; 3
     872:	08 f0       	brcs	.+2      	; 0x876 <vfprintf+0x11e>
     874:	64 c1       	rjmp	.+712    	; 0xb3e <vfprintf+0x3e6>
     876:	2f 7e       	andi	r18, 0xEF	; 239
     878:	26 ff       	sbrs	r18, 6
     87a:	16 e0       	ldi	r17, 0x06	; 6
     87c:	2f 73       	andi	r18, 0x3F	; 63
     87e:	32 2e       	mov	r3, r18
     880:	85 36       	cpi	r24, 0x65	; 101
     882:	19 f4       	brne	.+6      	; 0x88a <vfprintf+0x132>
     884:	20 64       	ori	r18, 0x40	; 64
     886:	32 2e       	mov	r3, r18
     888:	08 c0       	rjmp	.+16     	; 0x89a <vfprintf+0x142>
     88a:	86 36       	cpi	r24, 0x66	; 102
     88c:	21 f4       	brne	.+8      	; 0x896 <vfprintf+0x13e>
     88e:	f2 2f       	mov	r31, r18
     890:	f0 68       	ori	r31, 0x80	; 128
     892:	3f 2e       	mov	r3, r31
     894:	02 c0       	rjmp	.+4      	; 0x89a <vfprintf+0x142>
     896:	11 11       	cpse	r17, r1
     898:	11 50       	subi	r17, 0x01	; 1
     89a:	37 fe       	sbrs	r3, 7
     89c:	07 c0       	rjmp	.+14     	; 0x8ac <vfprintf+0x154>
     89e:	1c 33       	cpi	r17, 0x3C	; 60
     8a0:	50 f4       	brcc	.+20     	; 0x8b6 <vfprintf+0x15e>
     8a2:	ee 24       	eor	r14, r14
     8a4:	e3 94       	inc	r14
     8a6:	e1 0e       	add	r14, r17
     8a8:	27 e0       	ldi	r18, 0x07	; 7
     8aa:	0b c0       	rjmp	.+22     	; 0x8c2 <vfprintf+0x16a>
     8ac:	18 30       	cpi	r17, 0x08	; 8
     8ae:	38 f0       	brcs	.+14     	; 0x8be <vfprintf+0x166>
     8b0:	27 e0       	ldi	r18, 0x07	; 7
     8b2:	17 e0       	ldi	r17, 0x07	; 7
     8b4:	05 c0       	rjmp	.+10     	; 0x8c0 <vfprintf+0x168>
     8b6:	27 e0       	ldi	r18, 0x07	; 7
     8b8:	4c e3       	ldi	r20, 0x3C	; 60
     8ba:	e4 2e       	mov	r14, r20
     8bc:	02 c0       	rjmp	.+4      	; 0x8c2 <vfprintf+0x16a>
     8be:	21 2f       	mov	r18, r17
     8c0:	e1 2c       	mov	r14, r1
     8c2:	52 01       	movw	r10, r4
     8c4:	44 e0       	ldi	r20, 0x04	; 4
     8c6:	a4 0e       	add	r10, r20
     8c8:	b1 1c       	adc	r11, r1
     8ca:	f2 01       	movw	r30, r4
     8cc:	60 81       	ld	r22, Z
     8ce:	71 81       	ldd	r23, Z+1	; 0x01
     8d0:	82 81       	ldd	r24, Z+2	; 0x02
     8d2:	93 81       	ldd	r25, Z+3	; 0x03
     8d4:	0e 2d       	mov	r16, r14
     8d6:	a3 01       	movw	r20, r6
     8d8:	c7 d2       	rcall	.+1422   	; 0xe68 <__ftoa_engine>
     8da:	2c 01       	movw	r4, r24
     8dc:	09 81       	ldd	r16, Y+1	; 0x01
     8de:	00 ff       	sbrs	r16, 0
     8e0:	02 c0       	rjmp	.+4      	; 0x8e6 <vfprintf+0x18e>
     8e2:	03 ff       	sbrs	r16, 3
     8e4:	07 c0       	rjmp	.+14     	; 0x8f4 <vfprintf+0x19c>
     8e6:	31 fc       	sbrc	r3, 1
     8e8:	08 c0       	rjmp	.+16     	; 0x8fa <vfprintf+0x1a2>
     8ea:	32 fe       	sbrs	r3, 2
     8ec:	09 c0       	rjmp	.+18     	; 0x900 <vfprintf+0x1a8>
     8ee:	30 e2       	ldi	r19, 0x20	; 32
     8f0:	23 2e       	mov	r2, r19
     8f2:	07 c0       	rjmp	.+14     	; 0x902 <vfprintf+0x1aa>
     8f4:	2d e2       	ldi	r18, 0x2D	; 45
     8f6:	22 2e       	mov	r2, r18
     8f8:	04 c0       	rjmp	.+8      	; 0x902 <vfprintf+0x1aa>
     8fa:	9b e2       	ldi	r25, 0x2B	; 43
     8fc:	29 2e       	mov	r2, r25
     8fe:	01 c0       	rjmp	.+2      	; 0x902 <vfprintf+0x1aa>
     900:	21 2c       	mov	r2, r1
     902:	80 2f       	mov	r24, r16
     904:	8c 70       	andi	r24, 0x0C	; 12
     906:	19 f0       	breq	.+6      	; 0x90e <vfprintf+0x1b6>
     908:	21 10       	cpse	r2, r1
     90a:	51 c2       	rjmp	.+1186   	; 0xdae <vfprintf+0x656>
     90c:	8d c2       	rjmp	.+1306   	; 0xe28 <vfprintf+0x6d0>
     90e:	37 fe       	sbrs	r3, 7
     910:	0f c0       	rjmp	.+30     	; 0x930 <vfprintf+0x1d8>
     912:	e4 0c       	add	r14, r4
     914:	04 ff       	sbrs	r16, 4
     916:	04 c0       	rjmp	.+8      	; 0x920 <vfprintf+0x1c8>
     918:	8a 81       	ldd	r24, Y+2	; 0x02
     91a:	81 33       	cpi	r24, 0x31	; 49
     91c:	09 f4       	brne	.+2      	; 0x920 <vfprintf+0x1c8>
     91e:	ea 94       	dec	r14
     920:	1e 14       	cp	r1, r14
     922:	74 f5       	brge	.+92     	; 0x980 <vfprintf+0x228>
     924:	f8 e0       	ldi	r31, 0x08	; 8
     926:	fe 15       	cp	r31, r14
     928:	78 f5       	brcc	.+94     	; 0x988 <vfprintf+0x230>
     92a:	88 e0       	ldi	r24, 0x08	; 8
     92c:	e8 2e       	mov	r14, r24
     92e:	2c c0       	rjmp	.+88     	; 0x988 <vfprintf+0x230>
     930:	36 fc       	sbrc	r3, 6
     932:	2a c0       	rjmp	.+84     	; 0x988 <vfprintf+0x230>
     934:	81 2f       	mov	r24, r17
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	84 15       	cp	r24, r4
     93a:	95 05       	cpc	r25, r5
     93c:	9c f0       	brlt	.+38     	; 0x964 <vfprintf+0x20c>
     93e:	2c ef       	ldi	r18, 0xFC	; 252
     940:	42 16       	cp	r4, r18
     942:	2f ef       	ldi	r18, 0xFF	; 255
     944:	52 06       	cpc	r5, r18
     946:	74 f0       	brlt	.+28     	; 0x964 <vfprintf+0x20c>
     948:	43 2d       	mov	r20, r3
     94a:	40 68       	ori	r20, 0x80	; 128
     94c:	34 2e       	mov	r3, r20
     94e:	0a c0       	rjmp	.+20     	; 0x964 <vfprintf+0x20c>
     950:	e2 e0       	ldi	r30, 0x02	; 2
     952:	f0 e0       	ldi	r31, 0x00	; 0
     954:	ec 0f       	add	r30, r28
     956:	fd 1f       	adc	r31, r29
     958:	e1 0f       	add	r30, r17
     95a:	f1 1d       	adc	r31, r1
     95c:	80 81       	ld	r24, Z
     95e:	80 33       	cpi	r24, 0x30	; 48
     960:	19 f4       	brne	.+6      	; 0x968 <vfprintf+0x210>
     962:	11 50       	subi	r17, 0x01	; 1
     964:	11 11       	cpse	r17, r1
     966:	f4 cf       	rjmp	.-24     	; 0x950 <vfprintf+0x1f8>
     968:	37 fe       	sbrs	r3, 7
     96a:	0e c0       	rjmp	.+28     	; 0x988 <vfprintf+0x230>
     96c:	ee 24       	eor	r14, r14
     96e:	e3 94       	inc	r14
     970:	e1 0e       	add	r14, r17
     972:	81 2f       	mov	r24, r17
     974:	90 e0       	ldi	r25, 0x00	; 0
     976:	48 16       	cp	r4, r24
     978:	59 06       	cpc	r5, r25
     97a:	2c f4       	brge	.+10     	; 0x986 <vfprintf+0x22e>
     97c:	14 19       	sub	r17, r4
     97e:	04 c0       	rjmp	.+8      	; 0x988 <vfprintf+0x230>
     980:	ee 24       	eor	r14, r14
     982:	e3 94       	inc	r14
     984:	01 c0       	rjmp	.+2      	; 0x988 <vfprintf+0x230>
     986:	10 e0       	ldi	r17, 0x00	; 0
     988:	37 fe       	sbrs	r3, 7
     98a:	06 c0       	rjmp	.+12     	; 0x998 <vfprintf+0x240>
     98c:	14 14       	cp	r1, r4
     98e:	15 04       	cpc	r1, r5
     990:	34 f4       	brge	.+12     	; 0x99e <vfprintf+0x246>
     992:	c2 01       	movw	r24, r4
     994:	01 96       	adiw	r24, 0x01	; 1
     996:	05 c0       	rjmp	.+10     	; 0x9a2 <vfprintf+0x24a>
     998:	85 e0       	ldi	r24, 0x05	; 5
     99a:	90 e0       	ldi	r25, 0x00	; 0
     99c:	02 c0       	rjmp	.+4      	; 0x9a2 <vfprintf+0x24a>
     99e:	81 e0       	ldi	r24, 0x01	; 1
     9a0:	90 e0       	ldi	r25, 0x00	; 0
     9a2:	21 10       	cpse	r2, r1
     9a4:	01 96       	adiw	r24, 0x01	; 1
     9a6:	11 23       	and	r17, r17
     9a8:	31 f0       	breq	.+12     	; 0x9b6 <vfprintf+0x25e>
     9aa:	21 2f       	mov	r18, r17
     9ac:	30 e0       	ldi	r19, 0x00	; 0
     9ae:	2f 5f       	subi	r18, 0xFF	; 255
     9b0:	3f 4f       	sbci	r19, 0xFF	; 255
     9b2:	82 0f       	add	r24, r18
     9b4:	93 1f       	adc	r25, r19
     9b6:	2f 2d       	mov	r18, r15
     9b8:	30 e0       	ldi	r19, 0x00	; 0
     9ba:	82 17       	cp	r24, r18
     9bc:	93 07       	cpc	r25, r19
     9be:	14 f4       	brge	.+4      	; 0x9c4 <vfprintf+0x26c>
     9c0:	f8 1a       	sub	r15, r24
     9c2:	01 c0       	rjmp	.+2      	; 0x9c6 <vfprintf+0x26e>
     9c4:	f1 2c       	mov	r15, r1
     9c6:	83 2d       	mov	r24, r3
     9c8:	89 70       	andi	r24, 0x09	; 9
     9ca:	41 f4       	brne	.+16     	; 0x9dc <vfprintf+0x284>
     9cc:	ff 20       	and	r15, r15
     9ce:	31 f0       	breq	.+12     	; 0x9dc <vfprintf+0x284>
     9d0:	b6 01       	movw	r22, r12
     9d2:	80 e2       	ldi	r24, 0x20	; 32
     9d4:	90 e0       	ldi	r25, 0x00	; 0
     9d6:	36 d3       	rcall	.+1644   	; 0x1044 <fputc>
     9d8:	fa 94       	dec	r15
     9da:	f8 cf       	rjmp	.-16     	; 0x9cc <vfprintf+0x274>
     9dc:	22 20       	and	r2, r2
     9de:	21 f0       	breq	.+8      	; 0x9e8 <vfprintf+0x290>
     9e0:	b6 01       	movw	r22, r12
     9e2:	82 2d       	mov	r24, r2
     9e4:	90 e0       	ldi	r25, 0x00	; 0
     9e6:	2e d3       	rcall	.+1628   	; 0x1044 <fputc>
     9e8:	33 fc       	sbrc	r3, 3
     9ea:	08 c0       	rjmp	.+16     	; 0x9fc <vfprintf+0x2a4>
     9ec:	ff 20       	and	r15, r15
     9ee:	31 f0       	breq	.+12     	; 0x9fc <vfprintf+0x2a4>
     9f0:	b6 01       	movw	r22, r12
     9f2:	80 e3       	ldi	r24, 0x30	; 48
     9f4:	90 e0       	ldi	r25, 0x00	; 0
     9f6:	26 d3       	rcall	.+1612   	; 0x1044 <fputc>
     9f8:	fa 94       	dec	r15
     9fa:	f8 cf       	rjmp	.-16     	; 0x9ec <vfprintf+0x294>
     9fc:	37 fe       	sbrs	r3, 7
     9fe:	58 c0       	rjmp	.+176    	; 0xab0 <vfprintf+0x358>
     a00:	94 2d       	mov	r25, r4
     a02:	85 2d       	mov	r24, r5
     a04:	57 fe       	sbrs	r5, 7
     a06:	02 c0       	rjmp	.+4      	; 0xa0c <vfprintf+0x2b4>
     a08:	90 e0       	ldi	r25, 0x00	; 0
     a0a:	80 e0       	ldi	r24, 0x00	; 0
     a0c:	29 2e       	mov	r2, r25
     a0e:	38 2e       	mov	r3, r24
     a10:	20 e0       	ldi	r18, 0x00	; 0
     a12:	30 e0       	ldi	r19, 0x00	; 0
     a14:	a2 01       	movw	r20, r4
     a16:	4e 19       	sub	r20, r14
     a18:	51 09       	sbc	r21, r1
     a1a:	5d 87       	std	Y+13, r21	; 0x0d
     a1c:	4c 87       	std	Y+12, r20	; 0x0c
     a1e:	a2 01       	movw	r20, r4
     a20:	42 19       	sub	r20, r2
     a22:	53 09       	sbc	r21, r3
     a24:	5f 87       	std	Y+15, r21	; 0x0f
     a26:	4e 87       	std	Y+14, r20	; 0x0e
     a28:	61 2f       	mov	r22, r17
     a2a:	70 e0       	ldi	r23, 0x00	; 0
     a2c:	44 27       	eor	r20, r20
     a2e:	55 27       	eor	r21, r21
     a30:	46 1b       	sub	r20, r22
     a32:	57 0b       	sbc	r21, r23
     a34:	59 8b       	std	Y+17, r21	; 0x11
     a36:	48 8b       	std	Y+16, r20	; 0x10
     a38:	5f ef       	ldi	r21, 0xFF	; 255
     a3a:	25 16       	cp	r2, r21
     a3c:	35 06       	cpc	r3, r21
     a3e:	41 f4       	brne	.+16     	; 0xa50 <vfprintf+0x2f8>
     a40:	b6 01       	movw	r22, r12
     a42:	8e e2       	ldi	r24, 0x2E	; 46
     a44:	90 e0       	ldi	r25, 0x00	; 0
     a46:	2a 8b       	std	Y+18, r18	; 0x12
     a48:	3b 8b       	std	Y+19, r19	; 0x13
     a4a:	fc d2       	rcall	.+1528   	; 0x1044 <fputc>
     a4c:	3b 89       	ldd	r19, Y+19	; 0x13
     a4e:	2a 89       	ldd	r18, Y+18	; 0x12
     a50:	42 14       	cp	r4, r2
     a52:	53 04       	cpc	r5, r3
     a54:	6c f0       	brlt	.+26     	; 0xa70 <vfprintf+0x318>
     a56:	4c 85       	ldd	r20, Y+12	; 0x0c
     a58:	5d 85       	ldd	r21, Y+13	; 0x0d
     a5a:	42 15       	cp	r20, r2
     a5c:	53 05       	cpc	r21, r3
     a5e:	44 f4       	brge	.+16     	; 0xa70 <vfprintf+0x318>
     a60:	ee 85       	ldd	r30, Y+14	; 0x0e
     a62:	ff 85       	ldd	r31, Y+15	; 0x0f
     a64:	e2 0f       	add	r30, r18
     a66:	f3 1f       	adc	r31, r19
     a68:	e6 0d       	add	r30, r6
     a6a:	f7 1d       	adc	r31, r7
     a6c:	81 81       	ldd	r24, Z+1	; 0x01
     a6e:	01 c0       	rjmp	.+2      	; 0xa72 <vfprintf+0x31a>
     a70:	80 e3       	ldi	r24, 0x30	; 48
     a72:	51 e0       	ldi	r21, 0x01	; 1
     a74:	25 1a       	sub	r2, r21
     a76:	31 08       	sbc	r3, r1
     a78:	2f 5f       	subi	r18, 0xFF	; 255
     a7a:	3f 4f       	sbci	r19, 0xFF	; 255
     a7c:	48 89       	ldd	r20, Y+16	; 0x10
     a7e:	59 89       	ldd	r21, Y+17	; 0x11
     a80:	24 16       	cp	r2, r20
     a82:	35 06       	cpc	r3, r21
     a84:	44 f0       	brlt	.+16     	; 0xa96 <vfprintf+0x33e>
     a86:	b6 01       	movw	r22, r12
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	2a 8b       	std	Y+18, r18	; 0x12
     a8c:	3b 8b       	std	Y+19, r19	; 0x13
     a8e:	da d2       	rcall	.+1460   	; 0x1044 <fputc>
     a90:	2a 89       	ldd	r18, Y+18	; 0x12
     a92:	3b 89       	ldd	r19, Y+19	; 0x13
     a94:	d1 cf       	rjmp	.-94     	; 0xa38 <vfprintf+0x2e0>
     a96:	24 14       	cp	r2, r4
     a98:	35 04       	cpc	r3, r5
     a9a:	39 f4       	brne	.+14     	; 0xaaa <vfprintf+0x352>
     a9c:	9a 81       	ldd	r25, Y+2	; 0x02
     a9e:	96 33       	cpi	r25, 0x36	; 54
     aa0:	18 f4       	brcc	.+6      	; 0xaa8 <vfprintf+0x350>
     aa2:	95 33       	cpi	r25, 0x35	; 53
     aa4:	11 f4       	brne	.+4      	; 0xaaa <vfprintf+0x352>
     aa6:	04 ff       	sbrs	r16, 4
     aa8:	81 e3       	ldi	r24, 0x31	; 49
     aaa:	b6 01       	movw	r22, r12
     aac:	90 e0       	ldi	r25, 0x00	; 0
     aae:	45 c0       	rjmp	.+138    	; 0xb3a <vfprintf+0x3e2>
     ab0:	8a 81       	ldd	r24, Y+2	; 0x02
     ab2:	81 33       	cpi	r24, 0x31	; 49
     ab4:	09 f0       	breq	.+2      	; 0xab8 <vfprintf+0x360>
     ab6:	0f 7e       	andi	r16, 0xEF	; 239
     ab8:	b6 01       	movw	r22, r12
     aba:	90 e0       	ldi	r25, 0x00	; 0
     abc:	c3 d2       	rcall	.+1414   	; 0x1044 <fputc>
     abe:	11 11       	cpse	r17, r1
     ac0:	05 c0       	rjmp	.+10     	; 0xacc <vfprintf+0x374>
     ac2:	34 fc       	sbrc	r3, 4
     ac4:	16 c0       	rjmp	.+44     	; 0xaf2 <vfprintf+0x39a>
     ac6:	85 e6       	ldi	r24, 0x65	; 101
     ac8:	90 e0       	ldi	r25, 0x00	; 0
     aca:	15 c0       	rjmp	.+42     	; 0xaf6 <vfprintf+0x39e>
     acc:	b6 01       	movw	r22, r12
     ace:	8e e2       	ldi	r24, 0x2E	; 46
     ad0:	90 e0       	ldi	r25, 0x00	; 0
     ad2:	b8 d2       	rcall	.+1392   	; 0x1044 <fputc>
     ad4:	82 e0       	ldi	r24, 0x02	; 2
     ad6:	ee 24       	eor	r14, r14
     ad8:	e3 94       	inc	r14
     ada:	e8 0e       	add	r14, r24
     adc:	f3 01       	movw	r30, r6
     ade:	e8 0f       	add	r30, r24
     ae0:	f1 1d       	adc	r31, r1
     ae2:	80 81       	ld	r24, Z
     ae4:	b6 01       	movw	r22, r12
     ae6:	90 e0       	ldi	r25, 0x00	; 0
     ae8:	ad d2       	rcall	.+1370   	; 0x1044 <fputc>
     aea:	11 50       	subi	r17, 0x01	; 1
     aec:	8e 2d       	mov	r24, r14
     aee:	99 f7       	brne	.-26     	; 0xad6 <vfprintf+0x37e>
     af0:	e8 cf       	rjmp	.-48     	; 0xac2 <vfprintf+0x36a>
     af2:	85 e4       	ldi	r24, 0x45	; 69
     af4:	90 e0       	ldi	r25, 0x00	; 0
     af6:	b6 01       	movw	r22, r12
     af8:	a5 d2       	rcall	.+1354   	; 0x1044 <fputc>
     afa:	57 fc       	sbrc	r5, 7
     afc:	05 c0       	rjmp	.+10     	; 0xb08 <vfprintf+0x3b0>
     afe:	41 14       	cp	r4, r1
     b00:	51 04       	cpc	r5, r1
     b02:	39 f4       	brne	.+14     	; 0xb12 <vfprintf+0x3ba>
     b04:	04 ff       	sbrs	r16, 4
     b06:	05 c0       	rjmp	.+10     	; 0xb12 <vfprintf+0x3ba>
     b08:	51 94       	neg	r5
     b0a:	41 94       	neg	r4
     b0c:	51 08       	sbc	r5, r1
     b0e:	8d e2       	ldi	r24, 0x2D	; 45
     b10:	01 c0       	rjmp	.+2      	; 0xb14 <vfprintf+0x3bc>
     b12:	8b e2       	ldi	r24, 0x2B	; 43
     b14:	b6 01       	movw	r22, r12
     b16:	90 e0       	ldi	r25, 0x00	; 0
     b18:	95 d2       	rcall	.+1322   	; 0x1044 <fputc>
     b1a:	80 e3       	ldi	r24, 0x30	; 48
     b1c:	9a e0       	ldi	r25, 0x0A	; 10
     b1e:	49 16       	cp	r4, r25
     b20:	51 04       	cpc	r5, r1
     b22:	2c f0       	brlt	.+10     	; 0xb2e <vfprintf+0x3d6>
     b24:	8f 5f       	subi	r24, 0xFF	; 255
     b26:	5a e0       	ldi	r21, 0x0A	; 10
     b28:	45 1a       	sub	r4, r21
     b2a:	51 08       	sbc	r5, r1
     b2c:	f7 cf       	rjmp	.-18     	; 0xb1c <vfprintf+0x3c4>
     b2e:	b6 01       	movw	r22, r12
     b30:	90 e0       	ldi	r25, 0x00	; 0
     b32:	88 d2       	rcall	.+1296   	; 0x1044 <fputc>
     b34:	b6 01       	movw	r22, r12
     b36:	c2 01       	movw	r24, r4
     b38:	c0 96       	adiw	r24, 0x30	; 48
     b3a:	84 d2       	rcall	.+1288   	; 0x1044 <fputc>
     b3c:	4c c1       	rjmp	.+664    	; 0xdd6 <vfprintf+0x67e>
     b3e:	83 36       	cpi	r24, 0x63	; 99
     b40:	31 f0       	breq	.+12     	; 0xb4e <vfprintf+0x3f6>
     b42:	83 37       	cpi	r24, 0x73	; 115
     b44:	79 f0       	breq	.+30     	; 0xb64 <vfprintf+0x40c>
     b46:	83 35       	cpi	r24, 0x53	; 83
     b48:	09 f0       	breq	.+2      	; 0xb4c <vfprintf+0x3f4>
     b4a:	54 c0       	rjmp	.+168    	; 0xbf4 <vfprintf+0x49c>
     b4c:	20 c0       	rjmp	.+64     	; 0xb8e <vfprintf+0x436>
     b4e:	52 01       	movw	r10, r4
     b50:	e2 e0       	ldi	r30, 0x02	; 2
     b52:	ae 0e       	add	r10, r30
     b54:	b1 1c       	adc	r11, r1
     b56:	f2 01       	movw	r30, r4
     b58:	80 81       	ld	r24, Z
     b5a:	89 83       	std	Y+1, r24	; 0x01
     b5c:	01 e0       	ldi	r16, 0x01	; 1
     b5e:	10 e0       	ldi	r17, 0x00	; 0
     b60:	23 01       	movw	r4, r6
     b62:	13 c0       	rjmp	.+38     	; 0xb8a <vfprintf+0x432>
     b64:	52 01       	movw	r10, r4
     b66:	f2 e0       	ldi	r31, 0x02	; 2
     b68:	af 0e       	add	r10, r31
     b6a:	b1 1c       	adc	r11, r1
     b6c:	f2 01       	movw	r30, r4
     b6e:	40 80       	ld	r4, Z
     b70:	51 80       	ldd	r5, Z+1	; 0x01
     b72:	26 ff       	sbrs	r18, 6
     b74:	03 c0       	rjmp	.+6      	; 0xb7c <vfprintf+0x424>
     b76:	61 2f       	mov	r22, r17
     b78:	70 e0       	ldi	r23, 0x00	; 0
     b7a:	02 c0       	rjmp	.+4      	; 0xb80 <vfprintf+0x428>
     b7c:	6f ef       	ldi	r22, 0xFF	; 255
     b7e:	7f ef       	ldi	r23, 0xFF	; 255
     b80:	c2 01       	movw	r24, r4
     b82:	2a 8b       	std	Y+18, r18	; 0x12
     b84:	54 d2       	rcall	.+1192   	; 0x102e <strnlen>
     b86:	8c 01       	movw	r16, r24
     b88:	2a 89       	ldd	r18, Y+18	; 0x12
     b8a:	2f 77       	andi	r18, 0x7F	; 127
     b8c:	14 c0       	rjmp	.+40     	; 0xbb6 <vfprintf+0x45e>
     b8e:	52 01       	movw	r10, r4
     b90:	f2 e0       	ldi	r31, 0x02	; 2
     b92:	af 0e       	add	r10, r31
     b94:	b1 1c       	adc	r11, r1
     b96:	f2 01       	movw	r30, r4
     b98:	40 80       	ld	r4, Z
     b9a:	51 80       	ldd	r5, Z+1	; 0x01
     b9c:	26 ff       	sbrs	r18, 6
     b9e:	03 c0       	rjmp	.+6      	; 0xba6 <vfprintf+0x44e>
     ba0:	61 2f       	mov	r22, r17
     ba2:	70 e0       	ldi	r23, 0x00	; 0
     ba4:	02 c0       	rjmp	.+4      	; 0xbaa <vfprintf+0x452>
     ba6:	6f ef       	ldi	r22, 0xFF	; 255
     ba8:	7f ef       	ldi	r23, 0xFF	; 255
     baa:	c2 01       	movw	r24, r4
     bac:	2a 8b       	std	Y+18, r18	; 0x12
     bae:	34 d2       	rcall	.+1128   	; 0x1018 <strnlen_P>
     bb0:	8c 01       	movw	r16, r24
     bb2:	2a 89       	ldd	r18, Y+18	; 0x12
     bb4:	20 68       	ori	r18, 0x80	; 128
     bb6:	32 2e       	mov	r3, r18
     bb8:	23 fd       	sbrc	r18, 3
     bba:	18 c0       	rjmp	.+48     	; 0xbec <vfprintf+0x494>
     bbc:	8f 2d       	mov	r24, r15
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	08 17       	cp	r16, r24
     bc2:	19 07       	cpc	r17, r25
     bc4:	98 f4       	brcc	.+38     	; 0xbec <vfprintf+0x494>
     bc6:	b6 01       	movw	r22, r12
     bc8:	80 e2       	ldi	r24, 0x20	; 32
     bca:	90 e0       	ldi	r25, 0x00	; 0
     bcc:	3b d2       	rcall	.+1142   	; 0x1044 <fputc>
     bce:	fa 94       	dec	r15
     bd0:	f5 cf       	rjmp	.-22     	; 0xbbc <vfprintf+0x464>
     bd2:	f2 01       	movw	r30, r4
     bd4:	37 fc       	sbrc	r3, 7
     bd6:	85 91       	lpm	r24, Z+
     bd8:	37 fe       	sbrs	r3, 7
     bda:	81 91       	ld	r24, Z+
     bdc:	2f 01       	movw	r4, r30
     bde:	b6 01       	movw	r22, r12
     be0:	90 e0       	ldi	r25, 0x00	; 0
     be2:	30 d2       	rcall	.+1120   	; 0x1044 <fputc>
     be4:	f1 10       	cpse	r15, r1
     be6:	fa 94       	dec	r15
     be8:	01 50       	subi	r16, 0x01	; 1
     bea:	11 09       	sbc	r17, r1
     bec:	01 15       	cp	r16, r1
     bee:	11 05       	cpc	r17, r1
     bf0:	81 f7       	brne	.-32     	; 0xbd2 <vfprintf+0x47a>
     bf2:	f1 c0       	rjmp	.+482    	; 0xdd6 <vfprintf+0x67e>
     bf4:	84 36       	cpi	r24, 0x64	; 100
     bf6:	11 f0       	breq	.+4      	; 0xbfc <vfprintf+0x4a4>
     bf8:	89 36       	cpi	r24, 0x69	; 105
     bfa:	51 f5       	brne	.+84     	; 0xc50 <vfprintf+0x4f8>
     bfc:	52 01       	movw	r10, r4
     bfe:	27 ff       	sbrs	r18, 7
     c00:	09 c0       	rjmp	.+18     	; 0xc14 <vfprintf+0x4bc>
     c02:	f4 e0       	ldi	r31, 0x04	; 4
     c04:	af 0e       	add	r10, r31
     c06:	b1 1c       	adc	r11, r1
     c08:	f2 01       	movw	r30, r4
     c0a:	60 81       	ld	r22, Z
     c0c:	71 81       	ldd	r23, Z+1	; 0x01
     c0e:	82 81       	ldd	r24, Z+2	; 0x02
     c10:	93 81       	ldd	r25, Z+3	; 0x03
     c12:	0a c0       	rjmp	.+20     	; 0xc28 <vfprintf+0x4d0>
     c14:	f2 e0       	ldi	r31, 0x02	; 2
     c16:	af 0e       	add	r10, r31
     c18:	b1 1c       	adc	r11, r1
     c1a:	f2 01       	movw	r30, r4
     c1c:	60 81       	ld	r22, Z
     c1e:	71 81       	ldd	r23, Z+1	; 0x01
     c20:	07 2e       	mov	r0, r23
     c22:	00 0c       	add	r0, r0
     c24:	88 0b       	sbc	r24, r24
     c26:	99 0b       	sbc	r25, r25
     c28:	2f 76       	andi	r18, 0x6F	; 111
     c2a:	32 2e       	mov	r3, r18
     c2c:	97 ff       	sbrs	r25, 7
     c2e:	09 c0       	rjmp	.+18     	; 0xc42 <vfprintf+0x4ea>
     c30:	90 95       	com	r25
     c32:	80 95       	com	r24
     c34:	70 95       	com	r23
     c36:	61 95       	neg	r22
     c38:	7f 4f       	sbci	r23, 0xFF	; 255
     c3a:	8f 4f       	sbci	r24, 0xFF	; 255
     c3c:	9f 4f       	sbci	r25, 0xFF	; 255
     c3e:	20 68       	ori	r18, 0x80	; 128
     c40:	32 2e       	mov	r3, r18
     c42:	2a e0       	ldi	r18, 0x0A	; 10
     c44:	30 e0       	ldi	r19, 0x00	; 0
     c46:	a3 01       	movw	r20, r6
     c48:	35 d2       	rcall	.+1130   	; 0x10b4 <__ultoa_invert>
     c4a:	e8 2e       	mov	r14, r24
     c4c:	e6 18       	sub	r14, r6
     c4e:	3e c0       	rjmp	.+124    	; 0xccc <vfprintf+0x574>
     c50:	02 2f       	mov	r16, r18
     c52:	85 37       	cpi	r24, 0x75	; 117
     c54:	21 f4       	brne	.+8      	; 0xc5e <vfprintf+0x506>
     c56:	0f 7e       	andi	r16, 0xEF	; 239
     c58:	2a e0       	ldi	r18, 0x0A	; 10
     c5a:	30 e0       	ldi	r19, 0x00	; 0
     c5c:	1d c0       	rjmp	.+58     	; 0xc98 <vfprintf+0x540>
     c5e:	09 7f       	andi	r16, 0xF9	; 249
     c60:	8f 36       	cpi	r24, 0x6F	; 111
     c62:	91 f0       	breq	.+36     	; 0xc88 <vfprintf+0x530>
     c64:	18 f4       	brcc	.+6      	; 0xc6c <vfprintf+0x514>
     c66:	88 35       	cpi	r24, 0x58	; 88
     c68:	59 f0       	breq	.+22     	; 0xc80 <vfprintf+0x528>
     c6a:	be c0       	rjmp	.+380    	; 0xde8 <vfprintf+0x690>
     c6c:	80 37       	cpi	r24, 0x70	; 112
     c6e:	19 f0       	breq	.+6      	; 0xc76 <vfprintf+0x51e>
     c70:	88 37       	cpi	r24, 0x78	; 120
     c72:	11 f0       	breq	.+4      	; 0xc78 <vfprintf+0x520>
     c74:	b9 c0       	rjmp	.+370    	; 0xde8 <vfprintf+0x690>
     c76:	00 61       	ori	r16, 0x10	; 16
     c78:	04 ff       	sbrs	r16, 4
     c7a:	09 c0       	rjmp	.+18     	; 0xc8e <vfprintf+0x536>
     c7c:	04 60       	ori	r16, 0x04	; 4
     c7e:	07 c0       	rjmp	.+14     	; 0xc8e <vfprintf+0x536>
     c80:	24 ff       	sbrs	r18, 4
     c82:	08 c0       	rjmp	.+16     	; 0xc94 <vfprintf+0x53c>
     c84:	06 60       	ori	r16, 0x06	; 6
     c86:	06 c0       	rjmp	.+12     	; 0xc94 <vfprintf+0x53c>
     c88:	28 e0       	ldi	r18, 0x08	; 8
     c8a:	30 e0       	ldi	r19, 0x00	; 0
     c8c:	05 c0       	rjmp	.+10     	; 0xc98 <vfprintf+0x540>
     c8e:	20 e1       	ldi	r18, 0x10	; 16
     c90:	30 e0       	ldi	r19, 0x00	; 0
     c92:	02 c0       	rjmp	.+4      	; 0xc98 <vfprintf+0x540>
     c94:	20 e1       	ldi	r18, 0x10	; 16
     c96:	32 e0       	ldi	r19, 0x02	; 2
     c98:	52 01       	movw	r10, r4
     c9a:	07 ff       	sbrs	r16, 7
     c9c:	09 c0       	rjmp	.+18     	; 0xcb0 <vfprintf+0x558>
     c9e:	f4 e0       	ldi	r31, 0x04	; 4
     ca0:	af 0e       	add	r10, r31
     ca2:	b1 1c       	adc	r11, r1
     ca4:	f2 01       	movw	r30, r4
     ca6:	60 81       	ld	r22, Z
     ca8:	71 81       	ldd	r23, Z+1	; 0x01
     caa:	82 81       	ldd	r24, Z+2	; 0x02
     cac:	93 81       	ldd	r25, Z+3	; 0x03
     cae:	08 c0       	rjmp	.+16     	; 0xcc0 <vfprintf+0x568>
     cb0:	f2 e0       	ldi	r31, 0x02	; 2
     cb2:	af 0e       	add	r10, r31
     cb4:	b1 1c       	adc	r11, r1
     cb6:	f2 01       	movw	r30, r4
     cb8:	60 81       	ld	r22, Z
     cba:	71 81       	ldd	r23, Z+1	; 0x01
     cbc:	80 e0       	ldi	r24, 0x00	; 0
     cbe:	90 e0       	ldi	r25, 0x00	; 0
     cc0:	a3 01       	movw	r20, r6
     cc2:	f8 d1       	rcall	.+1008   	; 0x10b4 <__ultoa_invert>
     cc4:	e8 2e       	mov	r14, r24
     cc6:	e6 18       	sub	r14, r6
     cc8:	0f 77       	andi	r16, 0x7F	; 127
     cca:	30 2e       	mov	r3, r16
     ccc:	36 fe       	sbrs	r3, 6
     cce:	0b c0       	rjmp	.+22     	; 0xce6 <vfprintf+0x58e>
     cd0:	33 2d       	mov	r19, r3
     cd2:	3e 7f       	andi	r19, 0xFE	; 254
     cd4:	e1 16       	cp	r14, r17
     cd6:	50 f4       	brcc	.+20     	; 0xcec <vfprintf+0x594>
     cd8:	34 fe       	sbrs	r3, 4
     cda:	0a c0       	rjmp	.+20     	; 0xcf0 <vfprintf+0x598>
     cdc:	32 fc       	sbrc	r3, 2
     cde:	08 c0       	rjmp	.+16     	; 0xcf0 <vfprintf+0x598>
     ce0:	33 2d       	mov	r19, r3
     ce2:	3e 7e       	andi	r19, 0xEE	; 238
     ce4:	05 c0       	rjmp	.+10     	; 0xcf0 <vfprintf+0x598>
     ce6:	0e 2d       	mov	r16, r14
     ce8:	33 2d       	mov	r19, r3
     cea:	03 c0       	rjmp	.+6      	; 0xcf2 <vfprintf+0x59a>
     cec:	0e 2d       	mov	r16, r14
     cee:	01 c0       	rjmp	.+2      	; 0xcf2 <vfprintf+0x59a>
     cf0:	01 2f       	mov	r16, r17
     cf2:	34 ff       	sbrs	r19, 4
     cf4:	0c c0       	rjmp	.+24     	; 0xd0e <vfprintf+0x5b6>
     cf6:	fe 01       	movw	r30, r28
     cf8:	ee 0d       	add	r30, r14
     cfa:	f1 1d       	adc	r31, r1
     cfc:	80 81       	ld	r24, Z
     cfe:	80 33       	cpi	r24, 0x30	; 48
     d00:	11 f4       	brne	.+4      	; 0xd06 <vfprintf+0x5ae>
     d02:	39 7e       	andi	r19, 0xE9	; 233
     d04:	08 c0       	rjmp	.+16     	; 0xd16 <vfprintf+0x5be>
     d06:	32 ff       	sbrs	r19, 2
     d08:	05 c0       	rjmp	.+10     	; 0xd14 <vfprintf+0x5bc>
     d0a:	0e 5f       	subi	r16, 0xFE	; 254
     d0c:	04 c0       	rjmp	.+8      	; 0xd16 <vfprintf+0x5be>
     d0e:	83 2f       	mov	r24, r19
     d10:	86 78       	andi	r24, 0x86	; 134
     d12:	09 f0       	breq	.+2      	; 0xd16 <vfprintf+0x5be>
     d14:	0f 5f       	subi	r16, 0xFF	; 255
     d16:	33 fd       	sbrc	r19, 3
     d18:	12 c0       	rjmp	.+36     	; 0xd3e <vfprintf+0x5e6>
     d1a:	30 ff       	sbrs	r19, 0
     d1c:	06 c0       	rjmp	.+12     	; 0xd2a <vfprintf+0x5d2>
     d1e:	1e 2d       	mov	r17, r14
     d20:	0f 15       	cp	r16, r15
     d22:	18 f4       	brcc	.+6      	; 0xd2a <vfprintf+0x5d2>
     d24:	1f 0d       	add	r17, r15
     d26:	10 1b       	sub	r17, r16
     d28:	0f 2d       	mov	r16, r15
     d2a:	0f 15       	cp	r16, r15
     d2c:	60 f4       	brcc	.+24     	; 0xd46 <vfprintf+0x5ee>
     d2e:	b6 01       	movw	r22, r12
     d30:	80 e2       	ldi	r24, 0x20	; 32
     d32:	90 e0       	ldi	r25, 0x00	; 0
     d34:	3b 8b       	std	Y+19, r19	; 0x13
     d36:	86 d1       	rcall	.+780    	; 0x1044 <fputc>
     d38:	0f 5f       	subi	r16, 0xFF	; 255
     d3a:	3b 89       	ldd	r19, Y+19	; 0x13
     d3c:	f6 cf       	rjmp	.-20     	; 0xd2a <vfprintf+0x5d2>
     d3e:	0f 15       	cp	r16, r15
     d40:	10 f4       	brcc	.+4      	; 0xd46 <vfprintf+0x5ee>
     d42:	f0 1a       	sub	r15, r16
     d44:	01 c0       	rjmp	.+2      	; 0xd48 <vfprintf+0x5f0>
     d46:	f1 2c       	mov	r15, r1
     d48:	34 ff       	sbrs	r19, 4
     d4a:	11 c0       	rjmp	.+34     	; 0xd6e <vfprintf+0x616>
     d4c:	b6 01       	movw	r22, r12
     d4e:	80 e3       	ldi	r24, 0x30	; 48
     d50:	90 e0       	ldi	r25, 0x00	; 0
     d52:	3b 8b       	std	Y+19, r19	; 0x13
     d54:	77 d1       	rcall	.+750    	; 0x1044 <fputc>
     d56:	3b 89       	ldd	r19, Y+19	; 0x13
     d58:	32 ff       	sbrs	r19, 2
     d5a:	16 c0       	rjmp	.+44     	; 0xd88 <vfprintf+0x630>
     d5c:	31 fd       	sbrc	r19, 1
     d5e:	03 c0       	rjmp	.+6      	; 0xd66 <vfprintf+0x60e>
     d60:	88 e7       	ldi	r24, 0x78	; 120
     d62:	90 e0       	ldi	r25, 0x00	; 0
     d64:	02 c0       	rjmp	.+4      	; 0xd6a <vfprintf+0x612>
     d66:	88 e5       	ldi	r24, 0x58	; 88
     d68:	90 e0       	ldi	r25, 0x00	; 0
     d6a:	b6 01       	movw	r22, r12
     d6c:	0c c0       	rjmp	.+24     	; 0xd86 <vfprintf+0x62e>
     d6e:	83 2f       	mov	r24, r19
     d70:	86 78       	andi	r24, 0x86	; 134
     d72:	51 f0       	breq	.+20     	; 0xd88 <vfprintf+0x630>
     d74:	31 ff       	sbrs	r19, 1
     d76:	02 c0       	rjmp	.+4      	; 0xd7c <vfprintf+0x624>
     d78:	8b e2       	ldi	r24, 0x2B	; 43
     d7a:	01 c0       	rjmp	.+2      	; 0xd7e <vfprintf+0x626>
     d7c:	80 e2       	ldi	r24, 0x20	; 32
     d7e:	37 fd       	sbrc	r19, 7
     d80:	8d e2       	ldi	r24, 0x2D	; 45
     d82:	b6 01       	movw	r22, r12
     d84:	90 e0       	ldi	r25, 0x00	; 0
     d86:	5e d1       	rcall	.+700    	; 0x1044 <fputc>
     d88:	e1 16       	cp	r14, r17
     d8a:	30 f4       	brcc	.+12     	; 0xd98 <vfprintf+0x640>
     d8c:	b6 01       	movw	r22, r12
     d8e:	80 e3       	ldi	r24, 0x30	; 48
     d90:	90 e0       	ldi	r25, 0x00	; 0
     d92:	58 d1       	rcall	.+688    	; 0x1044 <fputc>
     d94:	11 50       	subi	r17, 0x01	; 1
     d96:	f8 cf       	rjmp	.-16     	; 0xd88 <vfprintf+0x630>
     d98:	ea 94       	dec	r14
     d9a:	f3 01       	movw	r30, r6
     d9c:	ee 0d       	add	r30, r14
     d9e:	f1 1d       	adc	r31, r1
     da0:	80 81       	ld	r24, Z
     da2:	b6 01       	movw	r22, r12
     da4:	90 e0       	ldi	r25, 0x00	; 0
     da6:	4e d1       	rcall	.+668    	; 0x1044 <fputc>
     da8:	e1 10       	cpse	r14, r1
     daa:	f6 cf       	rjmp	.-20     	; 0xd98 <vfprintf+0x640>
     dac:	14 c0       	rjmp	.+40     	; 0xdd6 <vfprintf+0x67e>
     dae:	f4 e0       	ldi	r31, 0x04	; 4
     db0:	ff 15       	cp	r31, r15
     db2:	48 f5       	brcc	.+82     	; 0xe06 <vfprintf+0x6ae>
     db4:	84 e0       	ldi	r24, 0x04	; 4
     db6:	f8 1a       	sub	r15, r24
     db8:	33 fe       	sbrs	r3, 3
     dba:	1d c0       	rjmp	.+58     	; 0xdf6 <vfprintf+0x69e>
     dbc:	21 10       	cpse	r2, r1
     dbe:	24 c0       	rjmp	.+72     	; 0xe08 <vfprintf+0x6b0>
     dc0:	03 ff       	sbrs	r16, 3
     dc2:	27 c0       	rjmp	.+78     	; 0xe12 <vfprintf+0x6ba>
     dc4:	0c e8       	ldi	r16, 0x8C	; 140
     dc6:	10 e0       	ldi	r17, 0x00	; 0
     dc8:	f3 2d       	mov	r31, r3
     dca:	f0 71       	andi	r31, 0x10	; 16
     dcc:	3f 2e       	mov	r3, r31
     dce:	f8 01       	movw	r30, r16
     dd0:	84 91       	lpm	r24, Z
     dd2:	81 11       	cpse	r24, r1
     dd4:	21 c0       	rjmp	.+66     	; 0xe18 <vfprintf+0x6c0>
     dd6:	ff 20       	and	r15, r15
     dd8:	09 f4       	brne	.+2      	; 0xddc <vfprintf+0x684>
     dda:	fd cc       	rjmp	.-1542   	; 0x7d6 <vfprintf+0x7e>
     ddc:	b6 01       	movw	r22, r12
     dde:	80 e2       	ldi	r24, 0x20	; 32
     de0:	90 e0       	ldi	r25, 0x00	; 0
     de2:	30 d1       	rcall	.+608    	; 0x1044 <fputc>
     de4:	fa 94       	dec	r15
     de6:	f7 cf       	rjmp	.-18     	; 0xdd6 <vfprintf+0x67e>
     de8:	f6 01       	movw	r30, r12
     dea:	86 81       	ldd	r24, Z+6	; 0x06
     dec:	97 81       	ldd	r25, Z+7	; 0x07
     dee:	23 c0       	rjmp	.+70     	; 0xe36 <vfprintf+0x6de>
     df0:	8f ef       	ldi	r24, 0xFF	; 255
     df2:	9f ef       	ldi	r25, 0xFF	; 255
     df4:	20 c0       	rjmp	.+64     	; 0xe36 <vfprintf+0x6de>
     df6:	b6 01       	movw	r22, r12
     df8:	80 e2       	ldi	r24, 0x20	; 32
     dfa:	90 e0       	ldi	r25, 0x00	; 0
     dfc:	23 d1       	rcall	.+582    	; 0x1044 <fputc>
     dfe:	fa 94       	dec	r15
     e00:	f1 10       	cpse	r15, r1
     e02:	f9 cf       	rjmp	.-14     	; 0xdf6 <vfprintf+0x69e>
     e04:	db cf       	rjmp	.-74     	; 0xdbc <vfprintf+0x664>
     e06:	f1 2c       	mov	r15, r1
     e08:	b6 01       	movw	r22, r12
     e0a:	82 2d       	mov	r24, r2
     e0c:	90 e0       	ldi	r25, 0x00	; 0
     e0e:	1a d1       	rcall	.+564    	; 0x1044 <fputc>
     e10:	d7 cf       	rjmp	.-82     	; 0xdc0 <vfprintf+0x668>
     e12:	00 e9       	ldi	r16, 0x90	; 144
     e14:	10 e0       	ldi	r17, 0x00	; 0
     e16:	d8 cf       	rjmp	.-80     	; 0xdc8 <vfprintf+0x670>
     e18:	31 10       	cpse	r3, r1
     e1a:	80 52       	subi	r24, 0x20	; 32
     e1c:	b6 01       	movw	r22, r12
     e1e:	90 e0       	ldi	r25, 0x00	; 0
     e20:	11 d1       	rcall	.+546    	; 0x1044 <fputc>
     e22:	0f 5f       	subi	r16, 0xFF	; 255
     e24:	1f 4f       	sbci	r17, 0xFF	; 255
     e26:	d3 cf       	rjmp	.-90     	; 0xdce <vfprintf+0x676>
     e28:	23 e0       	ldi	r18, 0x03	; 3
     e2a:	2f 15       	cp	r18, r15
     e2c:	10 f4       	brcc	.+4      	; 0xe32 <vfprintf+0x6da>
     e2e:	83 e0       	ldi	r24, 0x03	; 3
     e30:	c2 cf       	rjmp	.-124    	; 0xdb6 <vfprintf+0x65e>
     e32:	f1 2c       	mov	r15, r1
     e34:	c5 cf       	rjmp	.-118    	; 0xdc0 <vfprintf+0x668>
     e36:	63 96       	adiw	r28, 0x13	; 19
     e38:	0f b6       	in	r0, 0x3f	; 63
     e3a:	f8 94       	cli
     e3c:	de bf       	out	0x3e, r29	; 62
     e3e:	0f be       	out	0x3f, r0	; 63
     e40:	cd bf       	out	0x3d, r28	; 61
     e42:	df 91       	pop	r29
     e44:	cf 91       	pop	r28
     e46:	1f 91       	pop	r17
     e48:	0f 91       	pop	r16
     e4a:	ff 90       	pop	r15
     e4c:	ef 90       	pop	r14
     e4e:	df 90       	pop	r13
     e50:	cf 90       	pop	r12
     e52:	bf 90       	pop	r11
     e54:	af 90       	pop	r10
     e56:	9f 90       	pop	r9
     e58:	8f 90       	pop	r8
     e5a:	7f 90       	pop	r7
     e5c:	6f 90       	pop	r6
     e5e:	5f 90       	pop	r5
     e60:	4f 90       	pop	r4
     e62:	3f 90       	pop	r3
     e64:	2f 90       	pop	r2
     e66:	08 95       	ret

00000e68 <__ftoa_engine>:
     e68:	28 30       	cpi	r18, 0x08	; 8
     e6a:	08 f0       	brcs	.+2      	; 0xe6e <__ftoa_engine+0x6>
     e6c:	27 e0       	ldi	r18, 0x07	; 7
     e6e:	33 27       	eor	r19, r19
     e70:	da 01       	movw	r26, r20
     e72:	99 0f       	add	r25, r25
     e74:	31 1d       	adc	r19, r1
     e76:	87 fd       	sbrc	r24, 7
     e78:	91 60       	ori	r25, 0x01	; 1
     e7a:	00 96       	adiw	r24, 0x00	; 0
     e7c:	61 05       	cpc	r22, r1
     e7e:	71 05       	cpc	r23, r1
     e80:	39 f4       	brne	.+14     	; 0xe90 <__ftoa_engine+0x28>
     e82:	32 60       	ori	r19, 0x02	; 2
     e84:	2e 5f       	subi	r18, 0xFE	; 254
     e86:	3d 93       	st	X+, r19
     e88:	30 e3       	ldi	r19, 0x30	; 48
     e8a:	2a 95       	dec	r18
     e8c:	e1 f7       	brne	.-8      	; 0xe86 <__ftoa_engine+0x1e>
     e8e:	08 95       	ret
     e90:	9f 3f       	cpi	r25, 0xFF	; 255
     e92:	30 f0       	brcs	.+12     	; 0xea0 <__ftoa_engine+0x38>
     e94:	80 38       	cpi	r24, 0x80	; 128
     e96:	71 05       	cpc	r23, r1
     e98:	61 05       	cpc	r22, r1
     e9a:	09 f0       	breq	.+2      	; 0xe9e <__ftoa_engine+0x36>
     e9c:	3c 5f       	subi	r19, 0xFC	; 252
     e9e:	3c 5f       	subi	r19, 0xFC	; 252
     ea0:	3d 93       	st	X+, r19
     ea2:	91 30       	cpi	r25, 0x01	; 1
     ea4:	08 f0       	brcs	.+2      	; 0xea8 <__ftoa_engine+0x40>
     ea6:	80 68       	ori	r24, 0x80	; 128
     ea8:	91 1d       	adc	r25, r1
     eaa:	df 93       	push	r29
     eac:	cf 93       	push	r28
     eae:	1f 93       	push	r17
     eb0:	0f 93       	push	r16
     eb2:	ff 92       	push	r15
     eb4:	ef 92       	push	r14
     eb6:	19 2f       	mov	r17, r25
     eb8:	98 7f       	andi	r25, 0xF8	; 248
     eba:	96 95       	lsr	r25
     ebc:	e9 2f       	mov	r30, r25
     ebe:	96 95       	lsr	r25
     ec0:	96 95       	lsr	r25
     ec2:	e9 0f       	add	r30, r25
     ec4:	ff 27       	eor	r31, r31
     ec6:	e2 51       	subi	r30, 0x12	; 18
     ec8:	ff 4f       	sbci	r31, 0xFF	; 255
     eca:	99 27       	eor	r25, r25
     ecc:	33 27       	eor	r19, r19
     ece:	ee 24       	eor	r14, r14
     ed0:	ff 24       	eor	r15, r15
     ed2:	a7 01       	movw	r20, r14
     ed4:	e7 01       	movw	r28, r14
     ed6:	05 90       	lpm	r0, Z+
     ed8:	08 94       	sec
     eda:	07 94       	ror	r0
     edc:	28 f4       	brcc	.+10     	; 0xee8 <__ftoa_engine+0x80>
     ede:	36 0f       	add	r19, r22
     ee0:	e7 1e       	adc	r14, r23
     ee2:	f8 1e       	adc	r15, r24
     ee4:	49 1f       	adc	r20, r25
     ee6:	51 1d       	adc	r21, r1
     ee8:	66 0f       	add	r22, r22
     eea:	77 1f       	adc	r23, r23
     eec:	88 1f       	adc	r24, r24
     eee:	99 1f       	adc	r25, r25
     ef0:	06 94       	lsr	r0
     ef2:	a1 f7       	brne	.-24     	; 0xedc <__ftoa_engine+0x74>
     ef4:	05 90       	lpm	r0, Z+
     ef6:	07 94       	ror	r0
     ef8:	28 f4       	brcc	.+10     	; 0xf04 <__ftoa_engine+0x9c>
     efa:	e7 0e       	add	r14, r23
     efc:	f8 1e       	adc	r15, r24
     efe:	49 1f       	adc	r20, r25
     f00:	56 1f       	adc	r21, r22
     f02:	c1 1d       	adc	r28, r1
     f04:	77 0f       	add	r23, r23
     f06:	88 1f       	adc	r24, r24
     f08:	99 1f       	adc	r25, r25
     f0a:	66 1f       	adc	r22, r22
     f0c:	06 94       	lsr	r0
     f0e:	a1 f7       	brne	.-24     	; 0xef8 <__ftoa_engine+0x90>
     f10:	05 90       	lpm	r0, Z+
     f12:	07 94       	ror	r0
     f14:	28 f4       	brcc	.+10     	; 0xf20 <__ftoa_engine+0xb8>
     f16:	f8 0e       	add	r15, r24
     f18:	49 1f       	adc	r20, r25
     f1a:	56 1f       	adc	r21, r22
     f1c:	c7 1f       	adc	r28, r23
     f1e:	d1 1d       	adc	r29, r1
     f20:	88 0f       	add	r24, r24
     f22:	99 1f       	adc	r25, r25
     f24:	66 1f       	adc	r22, r22
     f26:	77 1f       	adc	r23, r23
     f28:	06 94       	lsr	r0
     f2a:	a1 f7       	brne	.-24     	; 0xf14 <__ftoa_engine+0xac>
     f2c:	05 90       	lpm	r0, Z+
     f2e:	07 94       	ror	r0
     f30:	20 f4       	brcc	.+8      	; 0xf3a <__ftoa_engine+0xd2>
     f32:	49 0f       	add	r20, r25
     f34:	56 1f       	adc	r21, r22
     f36:	c7 1f       	adc	r28, r23
     f38:	d8 1f       	adc	r29, r24
     f3a:	99 0f       	add	r25, r25
     f3c:	66 1f       	adc	r22, r22
     f3e:	77 1f       	adc	r23, r23
     f40:	88 1f       	adc	r24, r24
     f42:	06 94       	lsr	r0
     f44:	a9 f7       	brne	.-22     	; 0xf30 <__ftoa_engine+0xc8>
     f46:	84 91       	lpm	r24, Z
     f48:	10 95       	com	r17
     f4a:	17 70       	andi	r17, 0x07	; 7
     f4c:	41 f0       	breq	.+16     	; 0xf5e <__ftoa_engine+0xf6>
     f4e:	d6 95       	lsr	r29
     f50:	c7 95       	ror	r28
     f52:	57 95       	ror	r21
     f54:	47 95       	ror	r20
     f56:	f7 94       	ror	r15
     f58:	e7 94       	ror	r14
     f5a:	1a 95       	dec	r17
     f5c:	c1 f7       	brne	.-16     	; 0xf4e <__ftoa_engine+0xe6>
     f5e:	e4 e9       	ldi	r30, 0x94	; 148
     f60:	f0 e0       	ldi	r31, 0x00	; 0
     f62:	68 94       	set
     f64:	15 90       	lpm	r1, Z+
     f66:	15 91       	lpm	r17, Z+
     f68:	35 91       	lpm	r19, Z+
     f6a:	65 91       	lpm	r22, Z+
     f6c:	95 91       	lpm	r25, Z+
     f6e:	05 90       	lpm	r0, Z+
     f70:	7f e2       	ldi	r23, 0x2F	; 47
     f72:	73 95       	inc	r23
     f74:	e1 18       	sub	r14, r1
     f76:	f1 0a       	sbc	r15, r17
     f78:	43 0b       	sbc	r20, r19
     f7a:	56 0b       	sbc	r21, r22
     f7c:	c9 0b       	sbc	r28, r25
     f7e:	d0 09       	sbc	r29, r0
     f80:	c0 f7       	brcc	.-16     	; 0xf72 <__ftoa_engine+0x10a>
     f82:	e1 0c       	add	r14, r1
     f84:	f1 1e       	adc	r15, r17
     f86:	43 1f       	adc	r20, r19
     f88:	56 1f       	adc	r21, r22
     f8a:	c9 1f       	adc	r28, r25
     f8c:	d0 1d       	adc	r29, r0
     f8e:	7e f4       	brtc	.+30     	; 0xfae <__ftoa_engine+0x146>
     f90:	70 33       	cpi	r23, 0x30	; 48
     f92:	11 f4       	brne	.+4      	; 0xf98 <__ftoa_engine+0x130>
     f94:	8a 95       	dec	r24
     f96:	e6 cf       	rjmp	.-52     	; 0xf64 <__ftoa_engine+0xfc>
     f98:	e8 94       	clt
     f9a:	01 50       	subi	r16, 0x01	; 1
     f9c:	30 f0       	brcs	.+12     	; 0xfaa <__ftoa_engine+0x142>
     f9e:	08 0f       	add	r16, r24
     fa0:	0a f4       	brpl	.+2      	; 0xfa4 <__ftoa_engine+0x13c>
     fa2:	00 27       	eor	r16, r16
     fa4:	02 17       	cp	r16, r18
     fa6:	08 f4       	brcc	.+2      	; 0xfaa <__ftoa_engine+0x142>
     fa8:	20 2f       	mov	r18, r16
     faa:	23 95       	inc	r18
     fac:	02 2f       	mov	r16, r18
     fae:	7a 33       	cpi	r23, 0x3A	; 58
     fb0:	28 f0       	brcs	.+10     	; 0xfbc <__ftoa_engine+0x154>
     fb2:	79 e3       	ldi	r23, 0x39	; 57
     fb4:	7d 93       	st	X+, r23
     fb6:	2a 95       	dec	r18
     fb8:	e9 f7       	brne	.-6      	; 0xfb4 <__ftoa_engine+0x14c>
     fba:	10 c0       	rjmp	.+32     	; 0xfdc <__ftoa_engine+0x174>
     fbc:	7d 93       	st	X+, r23
     fbe:	2a 95       	dec	r18
     fc0:	89 f6       	brne	.-94     	; 0xf64 <__ftoa_engine+0xfc>
     fc2:	06 94       	lsr	r0
     fc4:	97 95       	ror	r25
     fc6:	67 95       	ror	r22
     fc8:	37 95       	ror	r19
     fca:	17 95       	ror	r17
     fcc:	17 94       	ror	r1
     fce:	e1 18       	sub	r14, r1
     fd0:	f1 0a       	sbc	r15, r17
     fd2:	43 0b       	sbc	r20, r19
     fd4:	56 0b       	sbc	r21, r22
     fd6:	c9 0b       	sbc	r28, r25
     fd8:	d0 09       	sbc	r29, r0
     fda:	98 f0       	brcs	.+38     	; 0x1002 <__ftoa_engine+0x19a>
     fdc:	23 95       	inc	r18
     fde:	7e 91       	ld	r23, -X
     fe0:	73 95       	inc	r23
     fe2:	7a 33       	cpi	r23, 0x3A	; 58
     fe4:	08 f0       	brcs	.+2      	; 0xfe8 <__ftoa_engine+0x180>
     fe6:	70 e3       	ldi	r23, 0x30	; 48
     fe8:	7c 93       	st	X, r23
     fea:	20 13       	cpse	r18, r16
     fec:	b8 f7       	brcc	.-18     	; 0xfdc <__ftoa_engine+0x174>
     fee:	7e 91       	ld	r23, -X
     ff0:	70 61       	ori	r23, 0x10	; 16
     ff2:	7d 93       	st	X+, r23
     ff4:	30 f0       	brcs	.+12     	; 0x1002 <__ftoa_engine+0x19a>
     ff6:	83 95       	inc	r24
     ff8:	71 e3       	ldi	r23, 0x31	; 49
     ffa:	7d 93       	st	X+, r23
     ffc:	70 e3       	ldi	r23, 0x30	; 48
     ffe:	2a 95       	dec	r18
    1000:	e1 f7       	brne	.-8      	; 0xffa <__ftoa_engine+0x192>
    1002:	11 24       	eor	r1, r1
    1004:	ef 90       	pop	r14
    1006:	ff 90       	pop	r15
    1008:	0f 91       	pop	r16
    100a:	1f 91       	pop	r17
    100c:	cf 91       	pop	r28
    100e:	df 91       	pop	r29
    1010:	99 27       	eor	r25, r25
    1012:	87 fd       	sbrc	r24, 7
    1014:	90 95       	com	r25
    1016:	08 95       	ret

00001018 <strnlen_P>:
    1018:	fc 01       	movw	r30, r24
    101a:	05 90       	lpm	r0, Z+
    101c:	61 50       	subi	r22, 0x01	; 1
    101e:	70 40       	sbci	r23, 0x00	; 0
    1020:	01 10       	cpse	r0, r1
    1022:	d8 f7       	brcc	.-10     	; 0x101a <strnlen_P+0x2>
    1024:	80 95       	com	r24
    1026:	90 95       	com	r25
    1028:	8e 0f       	add	r24, r30
    102a:	9f 1f       	adc	r25, r31
    102c:	08 95       	ret

0000102e <strnlen>:
    102e:	fc 01       	movw	r30, r24
    1030:	61 50       	subi	r22, 0x01	; 1
    1032:	70 40       	sbci	r23, 0x00	; 0
    1034:	01 90       	ld	r0, Z+
    1036:	01 10       	cpse	r0, r1
    1038:	d8 f7       	brcc	.-10     	; 0x1030 <strnlen+0x2>
    103a:	80 95       	com	r24
    103c:	90 95       	com	r25
    103e:	8e 0f       	add	r24, r30
    1040:	9f 1f       	adc	r25, r31
    1042:	08 95       	ret

00001044 <fputc>:
    1044:	0f 93       	push	r16
    1046:	1f 93       	push	r17
    1048:	cf 93       	push	r28
    104a:	df 93       	push	r29
    104c:	fb 01       	movw	r30, r22
    104e:	23 81       	ldd	r18, Z+3	; 0x03
    1050:	21 fd       	sbrc	r18, 1
    1052:	03 c0       	rjmp	.+6      	; 0x105a <fputc+0x16>
    1054:	8f ef       	ldi	r24, 0xFF	; 255
    1056:	9f ef       	ldi	r25, 0xFF	; 255
    1058:	28 c0       	rjmp	.+80     	; 0x10aa <fputc+0x66>
    105a:	22 ff       	sbrs	r18, 2
    105c:	16 c0       	rjmp	.+44     	; 0x108a <fputc+0x46>
    105e:	46 81       	ldd	r20, Z+6	; 0x06
    1060:	57 81       	ldd	r21, Z+7	; 0x07
    1062:	24 81       	ldd	r18, Z+4	; 0x04
    1064:	35 81       	ldd	r19, Z+5	; 0x05
    1066:	42 17       	cp	r20, r18
    1068:	53 07       	cpc	r21, r19
    106a:	44 f4       	brge	.+16     	; 0x107c <fputc+0x38>
    106c:	a0 81       	ld	r26, Z
    106e:	b1 81       	ldd	r27, Z+1	; 0x01
    1070:	9d 01       	movw	r18, r26
    1072:	2f 5f       	subi	r18, 0xFF	; 255
    1074:	3f 4f       	sbci	r19, 0xFF	; 255
    1076:	31 83       	std	Z+1, r19	; 0x01
    1078:	20 83       	st	Z, r18
    107a:	8c 93       	st	X, r24
    107c:	26 81       	ldd	r18, Z+6	; 0x06
    107e:	37 81       	ldd	r19, Z+7	; 0x07
    1080:	2f 5f       	subi	r18, 0xFF	; 255
    1082:	3f 4f       	sbci	r19, 0xFF	; 255
    1084:	37 83       	std	Z+7, r19	; 0x07
    1086:	26 83       	std	Z+6, r18	; 0x06
    1088:	10 c0       	rjmp	.+32     	; 0x10aa <fputc+0x66>
    108a:	eb 01       	movw	r28, r22
    108c:	09 2f       	mov	r16, r25
    108e:	18 2f       	mov	r17, r24
    1090:	00 84       	ldd	r0, Z+8	; 0x08
    1092:	f1 85       	ldd	r31, Z+9	; 0x09
    1094:	e0 2d       	mov	r30, r0
    1096:	09 95       	icall
    1098:	89 2b       	or	r24, r25
    109a:	e1 f6       	brne	.-72     	; 0x1054 <fputc+0x10>
    109c:	8e 81       	ldd	r24, Y+6	; 0x06
    109e:	9f 81       	ldd	r25, Y+7	; 0x07
    10a0:	01 96       	adiw	r24, 0x01	; 1
    10a2:	9f 83       	std	Y+7, r25	; 0x07
    10a4:	8e 83       	std	Y+6, r24	; 0x06
    10a6:	81 2f       	mov	r24, r17
    10a8:	90 2f       	mov	r25, r16
    10aa:	df 91       	pop	r29
    10ac:	cf 91       	pop	r28
    10ae:	1f 91       	pop	r17
    10b0:	0f 91       	pop	r16
    10b2:	08 95       	ret

000010b4 <__ultoa_invert>:
    10b4:	fa 01       	movw	r30, r20
    10b6:	aa 27       	eor	r26, r26
    10b8:	28 30       	cpi	r18, 0x08	; 8
    10ba:	51 f1       	breq	.+84     	; 0x1110 <__ultoa_invert+0x5c>
    10bc:	20 31       	cpi	r18, 0x10	; 16
    10be:	81 f1       	breq	.+96     	; 0x1120 <__ultoa_invert+0x6c>
    10c0:	e8 94       	clt
    10c2:	6f 93       	push	r22
    10c4:	6e 7f       	andi	r22, 0xFE	; 254
    10c6:	6e 5f       	subi	r22, 0xFE	; 254
    10c8:	7f 4f       	sbci	r23, 0xFF	; 255
    10ca:	8f 4f       	sbci	r24, 0xFF	; 255
    10cc:	9f 4f       	sbci	r25, 0xFF	; 255
    10ce:	af 4f       	sbci	r26, 0xFF	; 255
    10d0:	b1 e0       	ldi	r27, 0x01	; 1
    10d2:	3e d0       	rcall	.+124    	; 0x1150 <__ultoa_invert+0x9c>
    10d4:	b4 e0       	ldi	r27, 0x04	; 4
    10d6:	3c d0       	rcall	.+120    	; 0x1150 <__ultoa_invert+0x9c>
    10d8:	67 0f       	add	r22, r23
    10da:	78 1f       	adc	r23, r24
    10dc:	89 1f       	adc	r24, r25
    10de:	9a 1f       	adc	r25, r26
    10e0:	a1 1d       	adc	r26, r1
    10e2:	68 0f       	add	r22, r24
    10e4:	79 1f       	adc	r23, r25
    10e6:	8a 1f       	adc	r24, r26
    10e8:	91 1d       	adc	r25, r1
    10ea:	a1 1d       	adc	r26, r1
    10ec:	6a 0f       	add	r22, r26
    10ee:	71 1d       	adc	r23, r1
    10f0:	81 1d       	adc	r24, r1
    10f2:	91 1d       	adc	r25, r1
    10f4:	a1 1d       	adc	r26, r1
    10f6:	20 d0       	rcall	.+64     	; 0x1138 <__ultoa_invert+0x84>
    10f8:	09 f4       	brne	.+2      	; 0x10fc <__ultoa_invert+0x48>
    10fa:	68 94       	set
    10fc:	3f 91       	pop	r19
    10fe:	2a e0       	ldi	r18, 0x0A	; 10
    1100:	26 9f       	mul	r18, r22
    1102:	11 24       	eor	r1, r1
    1104:	30 19       	sub	r19, r0
    1106:	30 5d       	subi	r19, 0xD0	; 208
    1108:	31 93       	st	Z+, r19
    110a:	de f6       	brtc	.-74     	; 0x10c2 <__ultoa_invert+0xe>
    110c:	cf 01       	movw	r24, r30
    110e:	08 95       	ret
    1110:	46 2f       	mov	r20, r22
    1112:	47 70       	andi	r20, 0x07	; 7
    1114:	40 5d       	subi	r20, 0xD0	; 208
    1116:	41 93       	st	Z+, r20
    1118:	b3 e0       	ldi	r27, 0x03	; 3
    111a:	0f d0       	rcall	.+30     	; 0x113a <__ultoa_invert+0x86>
    111c:	c9 f7       	brne	.-14     	; 0x1110 <__ultoa_invert+0x5c>
    111e:	f6 cf       	rjmp	.-20     	; 0x110c <__ultoa_invert+0x58>
    1120:	46 2f       	mov	r20, r22
    1122:	4f 70       	andi	r20, 0x0F	; 15
    1124:	40 5d       	subi	r20, 0xD0	; 208
    1126:	4a 33       	cpi	r20, 0x3A	; 58
    1128:	18 f0       	brcs	.+6      	; 0x1130 <__ultoa_invert+0x7c>
    112a:	49 5d       	subi	r20, 0xD9	; 217
    112c:	31 fd       	sbrc	r19, 1
    112e:	40 52       	subi	r20, 0x20	; 32
    1130:	41 93       	st	Z+, r20
    1132:	02 d0       	rcall	.+4      	; 0x1138 <__ultoa_invert+0x84>
    1134:	a9 f7       	brne	.-22     	; 0x1120 <__ultoa_invert+0x6c>
    1136:	ea cf       	rjmp	.-44     	; 0x110c <__ultoa_invert+0x58>
    1138:	b4 e0       	ldi	r27, 0x04	; 4
    113a:	a6 95       	lsr	r26
    113c:	97 95       	ror	r25
    113e:	87 95       	ror	r24
    1140:	77 95       	ror	r23
    1142:	67 95       	ror	r22
    1144:	ba 95       	dec	r27
    1146:	c9 f7       	brne	.-14     	; 0x113a <__ultoa_invert+0x86>
    1148:	00 97       	sbiw	r24, 0x00	; 0
    114a:	61 05       	cpc	r22, r1
    114c:	71 05       	cpc	r23, r1
    114e:	08 95       	ret
    1150:	9b 01       	movw	r18, r22
    1152:	ac 01       	movw	r20, r24
    1154:	0a 2e       	mov	r0, r26
    1156:	06 94       	lsr	r0
    1158:	57 95       	ror	r21
    115a:	47 95       	ror	r20
    115c:	37 95       	ror	r19
    115e:	27 95       	ror	r18
    1160:	ba 95       	dec	r27
    1162:	c9 f7       	brne	.-14     	; 0x1156 <__ultoa_invert+0xa2>
    1164:	62 0f       	add	r22, r18
    1166:	73 1f       	adc	r23, r19
    1168:	84 1f       	adc	r24, r20
    116a:	95 1f       	adc	r25, r21
    116c:	a0 1d       	adc	r26, r0
    116e:	08 95       	ret

00001170 <_exit>:
    1170:	f8 94       	cli

00001172 <__stop_program>:
    1172:	ff cf       	rjmp	.-2      	; 0x1172 <__stop_program>
