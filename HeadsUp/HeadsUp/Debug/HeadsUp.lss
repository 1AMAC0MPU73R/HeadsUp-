
HeadsUp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000022  00800100  00001244  000012b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001244  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  000012da  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001338  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000150  00000000  00000000  00001378  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001b58  00000000  00000000  000014c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000093d  00000000  00000000  00003020  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a08  00000000  00000000  0000395d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000330  00000000  00000000  00004368  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000070a  00000000  00000000  00004698  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000c75  00000000  00000000  00004da2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000100  00000000  00000000  00005a17  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	c6 c0       	rjmp	.+396    	; 0x18e <__ctors_end>
       2:	00 00       	nop
       4:	e2 c0       	rjmp	.+452    	; 0x1ca <__bad_interrupt>
       6:	00 00       	nop
       8:	e0 c0       	rjmp	.+448    	; 0x1ca <__bad_interrupt>
       a:	00 00       	nop
       c:	de c0       	rjmp	.+444    	; 0x1ca <__bad_interrupt>
       e:	00 00       	nop
      10:	dc c0       	rjmp	.+440    	; 0x1ca <__bad_interrupt>
      12:	00 00       	nop
      14:	da c0       	rjmp	.+436    	; 0x1ca <__bad_interrupt>
      16:	00 00       	nop
      18:	d8 c0       	rjmp	.+432    	; 0x1ca <__bad_interrupt>
      1a:	00 00       	nop
      1c:	d6 c0       	rjmp	.+428    	; 0x1ca <__bad_interrupt>
      1e:	00 00       	nop
      20:	d4 c0       	rjmp	.+424    	; 0x1ca <__bad_interrupt>
      22:	00 00       	nop
      24:	d2 c0       	rjmp	.+420    	; 0x1ca <__bad_interrupt>
      26:	00 00       	nop
      28:	d0 c0       	rjmp	.+416    	; 0x1ca <__bad_interrupt>
      2a:	00 00       	nop
      2c:	ce c0       	rjmp	.+412    	; 0x1ca <__bad_interrupt>
      2e:	00 00       	nop
      30:	cc c0       	rjmp	.+408    	; 0x1ca <__bad_interrupt>
      32:	00 00       	nop
      34:	ca c0       	rjmp	.+404    	; 0x1ca <__bad_interrupt>
      36:	00 00       	nop
      38:	c8 c0       	rjmp	.+400    	; 0x1ca <__bad_interrupt>
      3a:	00 00       	nop
      3c:	c6 c0       	rjmp	.+396    	; 0x1ca <__bad_interrupt>
      3e:	00 00       	nop
      40:	c4 c0       	rjmp	.+392    	; 0x1ca <__bad_interrupt>
      42:	00 00       	nop
      44:	c2 c0       	rjmp	.+388    	; 0x1ca <__bad_interrupt>
      46:	00 00       	nop
      48:	c0 c0       	rjmp	.+384    	; 0x1ca <__bad_interrupt>
      4a:	00 00       	nop
      4c:	be c0       	rjmp	.+380    	; 0x1ca <__bad_interrupt>
      4e:	00 00       	nop
      50:	bc c0       	rjmp	.+376    	; 0x1ca <__bad_interrupt>
      52:	00 00       	nop
      54:	ba c0       	rjmp	.+372    	; 0x1ca <__bad_interrupt>
      56:	00 00       	nop
      58:	b8 c0       	rjmp	.+368    	; 0x1ca <__bad_interrupt>
      5a:	00 00       	nop
      5c:	b6 c0       	rjmp	.+364    	; 0x1ca <__bad_interrupt>
      5e:	00 00       	nop
      60:	b4 c0       	rjmp	.+360    	; 0x1ca <__bad_interrupt>
      62:	00 00       	nop
      64:	b2 c0       	rjmp	.+356    	; 0x1ca <__bad_interrupt>
      66:	00 00       	nop
      68:	b0 c0       	rjmp	.+352    	; 0x1ca <__bad_interrupt>
      6a:	00 00       	nop
      6c:	ae c0       	rjmp	.+348    	; 0x1ca <__bad_interrupt>
      6e:	00 00       	nop
      70:	ac c0       	rjmp	.+344    	; 0x1ca <__bad_interrupt>
      72:	00 00       	nop
      74:	aa c0       	rjmp	.+340    	; 0x1ca <__bad_interrupt>
      76:	00 00       	nop
      78:	a8 c0       	rjmp	.+336    	; 0x1ca <__bad_interrupt>
      7a:	00 00       	nop
      7c:	a6 c0       	rjmp	.+332    	; 0x1ca <__bad_interrupt>
      7e:	00 00       	nop
      80:	a4 c0       	rjmp	.+328    	; 0x1ca <__bad_interrupt>
      82:	00 00       	nop
      84:	a2 c0       	rjmp	.+324    	; 0x1ca <__bad_interrupt>
      86:	00 00       	nop
      88:	a0 c0       	rjmp	.+320    	; 0x1ca <__bad_interrupt>
	...

0000008c <__trampolines_end>:
      8c:	6e 61       	ori	r22, 0x1E	; 30
      8e:	6e 00       	.word	0x006e	; ????

00000090 <__c.2177>:
      90:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      a0:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      b0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      c0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      d0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      e0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      f0:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     100:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     110:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     120:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     130:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     140:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     150:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     160:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     170:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     180:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000018e <__ctors_end>:
     18e:	11 24       	eor	r1, r1
     190:	1f be       	out	0x3f, r1	; 63
     192:	cf ef       	ldi	r28, 0xFF	; 255
     194:	d0 e4       	ldi	r29, 0x40	; 64
     196:	de bf       	out	0x3e, r29	; 62
     198:	cd bf       	out	0x3d, r28	; 61

0000019a <__do_copy_data>:
     19a:	11 e0       	ldi	r17, 0x01	; 1
     19c:	a0 e0       	ldi	r26, 0x00	; 0
     19e:	b1 e0       	ldi	r27, 0x01	; 1
     1a0:	e4 e4       	ldi	r30, 0x44	; 68
     1a2:	f2 e1       	ldi	r31, 0x12	; 18
     1a4:	00 e0       	ldi	r16, 0x00	; 0
     1a6:	0b bf       	out	0x3b, r16	; 59
     1a8:	02 c0       	rjmp	.+4      	; 0x1ae <__do_copy_data+0x14>
     1aa:	07 90       	elpm	r0, Z+
     1ac:	0d 92       	st	X+, r0
     1ae:	a2 32       	cpi	r26, 0x22	; 34
     1b0:	b1 07       	cpc	r27, r17
     1b2:	d9 f7       	brne	.-10     	; 0x1aa <__do_copy_data+0x10>

000001b4 <__do_clear_bss>:
     1b4:	21 e0       	ldi	r18, 0x01	; 1
     1b6:	a2 e2       	ldi	r26, 0x22	; 34
     1b8:	b1 e0       	ldi	r27, 0x01	; 1
     1ba:	01 c0       	rjmp	.+2      	; 0x1be <.do_clear_bss_start>

000001bc <.do_clear_bss_loop>:
     1bc:	1d 92       	st	X+, r1

000001be <.do_clear_bss_start>:
     1be:	a2 32       	cpi	r26, 0x22	; 34
     1c0:	b2 07       	cpc	r27, r18
     1c2:	e1 f7       	brne	.-8      	; 0x1bc <.do_clear_bss_loop>
     1c4:	14 d0       	rcall	.+40     	; 0x1ee <main>
     1c6:	0c 94 20 09 	jmp	0x1240	; 0x1240 <_exit>

000001ca <__bad_interrupt>:
     1ca:	1a cf       	rjmp	.-460    	; 0x0 <__vectors>

000001cc <_Z14Test_On_PortA0v>:
void Test_On_PortA0();


void Test_On_PortA0(){
	
	DDRA |= 0x01;
     1cc:	08 9a       	sbi	0x01, 0	; 1
	
	PORTA |= ( 1 << PINA0);
     1ce:	10 9a       	sbi	0x02, 0	; 2
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1d0:	83 e2       	ldi	r24, 0x23	; 35
     1d2:	94 ef       	ldi	r25, 0xF4	; 244
     1d4:	01 97       	sbiw	r24, 0x01	; 1
     1d6:	f1 f7       	brne	.-4      	; 0x1d4 <_Z14Test_On_PortA0v+0x8>
     1d8:	00 c0       	rjmp	.+0      	; 0x1da <_Z14Test_On_PortA0v+0xe>
     1da:	00 00       	nop
	_delay_ms(250);
	PORTA &= ~( 1 << PINA0);
     1dc:	10 98       	cbi	0x02, 0	; 2
     1de:	83 e2       	ldi	r24, 0x23	; 35
     1e0:	94 ef       	ldi	r25, 0xF4	; 244
     1e2:	01 97       	sbiw	r24, 0x01	; 1
     1e4:	f1 f7       	brne	.-4      	; 0x1e2 <_Z14Test_On_PortA0v+0x16>
     1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <_Z14Test_On_PortA0v+0x1c>
     1e8:	00 00       	nop
	_delay_ms(250);
	PORTA |= ( 1 << PINA0);
     1ea:	10 9a       	sbi	0x02, 0	; 2
     1ec:	08 95       	ret

000001ee <main>:
#include <avr/io.h>
#include <util/delay.h>
#include "headsup.h"


int main(){
     1ee:	cf 93       	push	r28
     1f0:	df 93       	push	r29
     1f2:	cd b7       	in	r28, 0x3d	; 61
     1f4:	de b7       	in	r29, 0x3e	; 62
     1f6:	a7 97       	sbiw	r28, 0x27	; 39
     1f8:	0f b6       	in	r0, 0x3f	; 63
     1fa:	f8 94       	cli
     1fc:	de bf       	out	0x3e, r29	; 62
     1fe:	0f be       	out	0x3f, r0	; 63
     200:	cd bf       	out	0x3d, r28	; 61
	
	rtc_time rtmCurrent;
	lcd lcdNHD;
     202:	ce 01       	movw	r24, r28
     204:	87 96       	adiw	r24, 0x27	; 39
     206:	0b d1       	rcall	.+534    	; 0x41e <_ZN3lcdC1Ev>
	rtc rtcDS;
     208:	ce 01       	movw	r24, r28
     20a:	86 96       	adiw	r24, 0x26	; 38
     20c:	d5 d1       	rcall	.+938    	; 0x5b8 <_ZN3rtcC1Ev>
	unsigned char uchCurrenttime[ LINE_SIZE ] ;

	rtmCurrent.ucSeconds = 0x50;
     20e:	80 e5       	ldi	r24, 0x50	; 80
     210:	8f 8f       	std	Y+31, r24	; 0x1f
	rtmCurrent.ucMinutes = 0x59;
     212:	89 e5       	ldi	r24, 0x59	; 89
     214:	88 a3       	std	Y+32, r24	; 0x20
	rtmCurrent.ucHours = 0x72;
     216:	82 e7       	ldi	r24, 0x72	; 114
     218:	89 a3       	std	Y+33, r24	; 0x21
	
	Test_On_PortA0();
     21a:	d8 df       	rcall	.-80     	; 0x1cc <_Z14Test_On_PortA0v>
	lcdNHD.test_LCD_Screen();
     21c:	ce 01       	movw	r24, r28
     21e:	87 96       	adiw	r24, 0x27	; 39
     220:	31 d1       	rcall	.+610    	; 0x484 <_ZN3lcd15test_LCD_ScreenEv>
class rtc{

	public:
		rtc( );
		rtc_time get( ){ return get_time( ); }
		void set( rtc_time* rtmSetTime ){ set_time( rtmSetTime ); }
     222:	be 01       	movw	r22, r28
     224:	61 5e       	subi	r22, 0xE1	; 225
     226:	7f 4f       	sbci	r23, 0xFF	; 255
     228:	ce 01       	movw	r24, r28
     22a:	86 96       	adiw	r24, 0x26	; 38
     22c:	13 d2       	rcall	.+1062   	; 0x654 <_ZN3rtc8set_timeEP8rtc_time>
     22e:	0f 2e       	mov	r0, r31
     230:	f7 e0       	ldi	r31, 0x07	; 7
     232:	bf 2e       	mov	r11, r31
     234:	f0 2d       	mov	r31, r0

class rtc{

	public:
		rtc( );
		rtc_time get( ){ return get_time( ); }
     236:	ce 01       	movw	r24, r28
     238:	86 96       	adiw	r24, 0x26	; 38
     23a:	e1 d1       	rcall	.+962    	; 0x5fe <_ZN3rtc8get_timeEv>
     23c:	29 83       	std	Y+1, r18	; 0x01
     23e:	3a 83       	std	Y+2, r19	; 0x02
     240:	4b 83       	std	Y+3, r20	; 0x03
     242:	5c 83       	std	Y+4, r21	; 0x04
     244:	6d 83       	std	Y+5, r22	; 0x05
     246:	7e 83       	std	Y+6, r23	; 0x06
     248:	8f 83       	std	Y+7, r24	; 0x07
     24a:	fe 01       	movw	r30, r28
     24c:	31 96       	adiw	r30, 0x01	; 1
     24e:	de 01       	movw	r26, r28
     250:	18 96       	adiw	r26, 0x08	; 8
     252:	8b 2d       	mov	r24, r11
     254:	01 90       	ld	r0, Z+
     256:	0d 92       	st	X+, r0
     258:	8a 95       	dec	r24
     25a:	e1 f7       	brne	.-8      	; 0x254 <main+0x66>

	rtcDS.set(&rtmCurrent);

	for(;;){
		rtmCurrent=rtcDS.get();
     25c:	fe 01       	movw	r30, r28
     25e:	38 96       	adiw	r30, 0x08	; 8
     260:	de 01       	movw	r26, r28
     262:	5f 96       	adiw	r26, 0x1f	; 31
     264:	8b 2d       	mov	r24, r11
     266:	01 90       	ld	r0, Z+
     268:	0d 92       	st	X+, r0
     26a:	8a 95       	dec	r24
     26c:	e1 f7       	brne	.-8      	; 0x266 <main+0x78>
		rtcDS.rtm_to_char( rtmCurrent, uchCurrenttime, LINE_SIZE );
     26e:	68 94       	set
     270:	cc 24       	eor	r12, r12
     272:	c4 f8       	bld	r12, 4
     274:	d1 2c       	mov	r13, r1
     276:	ce 01       	movw	r24, r28
     278:	0f 96       	adiw	r24, 0x0f	; 15
     27a:	7c 01       	movw	r14, r24
     27c:	0f 8d       	ldd	r16, Y+31	; 0x1f
     27e:	18 a1       	ldd	r17, Y+32	; 0x20
     280:	29 a1       	ldd	r18, Y+33	; 0x21
     282:	3a a1       	ldd	r19, Y+34	; 0x22
     284:	4b a1       	ldd	r20, Y+35	; 0x23
     286:	5c a1       	ldd	r21, Y+36	; 0x24
     288:	6d a1       	ldd	r22, Y+37	; 0x25
     28a:	47 96       	adiw	r24, 0x17	; 23
     28c:	e9 d1       	rcall	.+978    	; 0x660 <_ZN3rtc11rtm_to_charE8rtc_timePhj>
		lcdNHD.print( uchCurrenttime , LINE_TOP );
     28e:	40 e0       	ldi	r20, 0x00	; 0
     290:	b7 01       	movw	r22, r14
     292:	ce 01       	movw	r24, r28
     294:	87 96       	adiw	r24, 0x27	; 39
     296:	d2 d0       	rcall	.+420    	; 0x43c <_ZN3lcd5printEPhh>
     298:	9f e3       	ldi	r25, 0x3F	; 63
     29a:	2d e0       	ldi	r18, 0x0D	; 13
     29c:	83 e0       	ldi	r24, 0x03	; 3
     29e:	91 50       	subi	r25, 0x01	; 1
     2a0:	20 40       	sbci	r18, 0x00	; 0
     2a2:	80 40       	sbci	r24, 0x00	; 0
     2a4:	e1 f7       	brne	.-8      	; 0x29e <main+0xb0>
     2a6:	00 c0       	rjmp	.+0      	; 0x2a8 <main+0xba>
     2a8:	00 00       	nop
     2aa:	c5 cf       	rjmp	.-118    	; 0x236 <main+0x48>

000002ac <_ZN3lcd4ShowEPh>:
	_delay_ms(20);
		
}


void lcd::Show(unsigned char* text){
     2ac:	0f 93       	push	r16
     2ae:	1f 93       	push	r17
     2b0:	cf 93       	push	r28
     2b2:	df 93       	push	r29
     2b4:	eb 01       	movw	r28, r22
	
	TWI_StartCommunication();
     2b6:	97 d2       	rcall	.+1326   	; 0x7e6 <_Z22TWI_StartCommunicationv>
	
	TWI_TransmitData( SLA, TW_MT_SLA_ACK );
     2b8:	68 e1       	ldi	r22, 0x18	; 24
     2ba:	8c e7       	ldi	r24, 0x7C	; 124
     2bc:	9f d2       	rcall	.+1342   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_TransmitData( SEND_DATA, TW_MT_DATA_ACK );
     2be:	68 e2       	ldi	r22, 0x28	; 40
     2c0:	80 e4       	ldi	r24, 0x40	; 64
     2c2:	9c d2       	rcall	.+1336   	; 0x7fc <_Z16TWI_TransmitDatahh>
     2c4:	8e 01       	movw	r16, r28
     2c6:	00 5f       	subi	r16, 0xF0	; 240
     2c8:	1f 4f       	sbci	r17, 0xFF	; 255
	for( int valN = 0; valN < LINE_SIZE; valN++ ){
		TWI_TransmitData( *text, TW_MT_DATA_ACK );
     2ca:	68 e2       	ldi	r22, 0x28	; 40
     2cc:	89 91       	ld	r24, Y+
     2ce:	96 d2       	rcall	.+1324   	; 0x7fc <_Z16TWI_TransmitDatahh>
	
	TWI_StartCommunication();
	
	TWI_TransmitData( SLA, TW_MT_SLA_ACK );
	TWI_TransmitData( SEND_DATA, TW_MT_DATA_ACK );
	for( int valN = 0; valN < LINE_SIZE; valN++ ){
     2d0:	c0 17       	cp	r28, r16
     2d2:	d1 07       	cpc	r29, r17
     2d4:	d1 f7       	brne	.-12     	; 0x2ca <_ZN3lcd4ShowEPh+0x1e>
		TWI_TransmitData( *text, TW_MT_DATA_ACK );
		++text;
	}
		
	TWI_STOP();
     2d6:	83 d2       	rcall	.+1286   	; 0x7de <_Z8TWI_STOPv>
	
}
     2d8:	df 91       	pop	r29
     2da:	cf 91       	pop	r28
     2dc:	1f 91       	pop	r17
     2de:	0f 91       	pop	r16
     2e0:	08 95       	ret

000002e2 <_ZN3lcd11SelectLine1Ev>:


void lcd::SelectLine1(void){
	
	TWI_StartCommunication();
     2e2:	81 d2       	rcall	.+1282   	; 0x7e6 <_Z22TWI_StartCommunicationv>
	
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     2e4:	68 e1       	ldi	r22, 0x18	; 24
     2e6:	8c e7       	ldi	r24, 0x7C	; 124
     2e8:	89 d2       	rcall	.+1298   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     2ea:	68 e2       	ldi	r22, 0x28	; 40
     2ec:	80 e0       	ldi	r24, 0x00	; 0
     2ee:	86 d2       	rcall	.+1292   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(LINE_1,TW_MT_DATA_ACK);
     2f0:	68 e2       	ldi	r22, 0x28	; 40
     2f2:	80 e8       	ldi	r24, 0x80	; 128
     2f4:	83 d2       	rcall	.+1286   	; 0x7fc <_Z16TWI_TransmitDatahh>
	
	TWI_STOP();
     2f6:	73 c2       	rjmp	.+1254   	; 0x7de <_Z8TWI_STOPv>
     2f8:	08 95       	ret

000002fa <_ZN3lcd11SelectLine2Ev>:
}


void lcd::SelectLine2(void){
	
	TWI_StartCommunication();
     2fa:	75 d2       	rcall	.+1258   	; 0x7e6 <_Z22TWI_StartCommunicationv>
	
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     2fc:	68 e1       	ldi	r22, 0x18	; 24
     2fe:	8c e7       	ldi	r24, 0x7C	; 124
     300:	7d d2       	rcall	.+1274   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     302:	68 e2       	ldi	r22, 0x28	; 40
     304:	80 e0       	ldi	r24, 0x00	; 0
     306:	7a d2       	rcall	.+1268   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(LINE_2,TW_MT_DATA_ACK);
     308:	68 e2       	ldi	r22, 0x28	; 40
     30a:	80 ec       	ldi	r24, 0xC0	; 192
     30c:	77 d2       	rcall	.+1262   	; 0x7fc <_Z16TWI_TransmitDatahh>
	
	TWI_STOP();
     30e:	67 c2       	rjmp	.+1230   	; 0x7de <_Z8TWI_STOPv>
     310:	08 95       	ret

00000312 <_ZN3lcd5CGRAMEv>:
}

void lcd::CGRAM(void)
{
 	TWI_StartCommunication();
     312:	69 d2       	rcall	.+1234   	; 0x7e6 <_Z22TWI_StartCommunicationv>
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     314:	68 e1       	ldi	r22, 0x18	; 24
     316:	8c e7       	ldi	r24, 0x7C	; 124
     318:	71 d2       	rcall	.+1250   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);;
     31a:	68 e2       	ldi	r22, 0x28	; 40
     31c:	80 e0       	ldi	r24, 0x00	; 0
     31e:	6e d2       	rcall	.+1244   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x38,TW_MT_DATA_ACK);		//go to instructino table 0
     320:	68 e2       	ldi	r22, 0x28	; 40
     322:	88 e3       	ldi	r24, 0x38	; 56
     324:	6b d2       	rcall	.+1238   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x40,TW_MT_DATA_ACK);		//Set CGRAM address to 0x00
     326:	68 e2       	ldi	r22, 0x28	; 40
     328:	80 e4       	ldi	r24, 0x40	; 64
     32a:	68 d2       	rcall	.+1232   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_STOP();
     32c:	58 d2       	rcall	.+1200   	; 0x7de <_Z8TWI_STOPv>
     32e:	83 ec       	ldi	r24, 0xC3	; 195
     330:	99 e0       	ldi	r25, 0x09	; 9
     332:	01 97       	sbiw	r24, 0x01	; 1
     334:	f1 f7       	brne	.-4      	; 0x332 <_ZN3lcd5CGRAMEv+0x20>
     336:	00 c0       	rjmp	.+0      	; 0x338 <_ZN3lcd5CGRAMEv+0x26>
     338:	00 00       	nop
	_delay_ms(10);
	
	TWI_StartCommunication();
     33a:	55 d2       	rcall	.+1194   	; 0x7e6 <_Z22TWI_StartCommunicationv>
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     33c:	68 e1       	ldi	r22, 0x18	; 24
     33e:	8c e7       	ldi	r24, 0x7C	; 124
     340:	5d d2       	rcall	.+1210   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     342:	68 e2       	ldi	r22, 0x28	; 40
     344:	80 e0       	ldi	r24, 0x00	; 0
     346:	5a d2       	rcall	.+1204   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x00,TW_MT_DATA_ACK);		//write to first CGRAM address
     348:	68 e2       	ldi	r22, 0x28	; 40
     34a:	80 e0       	ldi	r24, 0x00	; 0
     34c:	57 d2       	rcall	.+1198   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x1E,TW_MT_DATA_ACK);
     34e:	68 e2       	ldi	r22, 0x28	; 40
     350:	8e e1       	ldi	r24, 0x1E	; 30
     352:	54 d2       	rcall	.+1192   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x18,TW_MT_DATA_ACK);
     354:	68 e2       	ldi	r22, 0x28	; 40
     356:	88 e1       	ldi	r24, 0x18	; 24
     358:	51 d2       	rcall	.+1186   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x14,TW_MT_DATA_ACK);
     35a:	68 e2       	ldi	r22, 0x28	; 40
     35c:	84 e1       	ldi	r24, 0x14	; 20
     35e:	4e d2       	rcall	.+1180   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x12,TW_MT_DATA_ACK);
     360:	68 e2       	ldi	r22, 0x28	; 40
     362:	82 e1       	ldi	r24, 0x12	; 18
     364:	4b d2       	rcall	.+1174   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);
     366:	68 e2       	ldi	r22, 0x28	; 40
     368:	81 e0       	ldi	r24, 0x01	; 1
     36a:	48 d2       	rcall	.+1168   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x00,TW_MT_DATA_ACK);
     36c:	68 e2       	ldi	r22, 0x28	; 40
     36e:	80 e0       	ldi	r24, 0x00	; 0
     370:	45 d2       	rcall	.+1162   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x00,TW_MT_DATA_ACK);		//8 bytes per character
     372:	68 e2       	ldi	r22, 0x28	; 40
     374:	80 e0       	ldi	r24, 0x00	; 0
     376:	42 d2       	rcall	.+1156   	; 0x7fc <_Z16TWI_TransmitDatahh>
	//continue writing to remaining CGRAM if desired
	TWI_STOP();
     378:	32 c2       	rjmp	.+1124   	; 0x7de <_Z8TWI_STOPv>
     37a:	08 95       	ret

0000037c <_ZN3lcd8init_LCDEv>:
}

void lcd::init_LCD()
{
     37c:	cf 93       	push	r28
     37e:	df 93       	push	r29
     380:	ec 01       	movw	r28, r24
	TWI_StartCommunication();
     382:	31 d2       	rcall	.+1122   	; 0x7e6 <_Z22TWI_StartCommunicationv>
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     384:	68 e1       	ldi	r22, 0x18	; 24
     386:	8c e7       	ldi	r24, 0x7C	; 124
     388:	39 d2       	rcall	.+1138   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     38a:	68 e2       	ldi	r22, 0x28	; 40
     38c:	80 e0       	ldi	r24, 0x00	; 0
     38e:	36 d2       	rcall	.+1132   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x38,TW_MT_DATA_ACK);						// Function Set: 8 bit bus mode, 2-line mode, single height font
     390:	68 e2       	ldi	r22, 0x28	; 40
     392:	88 e3       	ldi	r24, 0x38	; 56
     394:	33 d2       	rcall	.+1126   	; 0x7fc <_Z16TWI_TransmitDatahh>
     396:	87 ea       	ldi	r24, 0xA7	; 167
     398:	91 e6       	ldi	r25, 0x61	; 97
     39a:	01 97       	sbiw	r24, 0x01	; 1
     39c:	f1 f7       	brne	.-4      	; 0x39a <_ZN3lcd8init_LCDEv+0x1e>
     39e:	00 c0       	rjmp	.+0      	; 0x3a0 <_ZN3lcd8init_LCDEv+0x24>
     3a0:	00 00       	nop
	_delay_ms(100);
	TWI_TransmitData(0x39,TW_MT_DATA_ACK);						// Use Extended instruction set
     3a2:	68 e2       	ldi	r22, 0x28	; 40
     3a4:	89 e3       	ldi	r24, 0x39	; 57
     3a6:	2a d2       	rcall	.+1108   	; 0x7fc <_Z16TWI_TransmitDatahh>
     3a8:	87 ea       	ldi	r24, 0xA7	; 167
     3aa:	91 e6       	ldi	r25, 0x61	; 97
     3ac:	01 97       	sbiw	r24, 0x01	; 1
     3ae:	f1 f7       	brne	.-4      	; 0x3ac <_ZN3lcd8init_LCDEv+0x30>
     3b0:	00 c0       	rjmp	.+0      	; 0x3b2 <_ZN3lcd8init_LCDEv+0x36>
     3b2:	00 00       	nop
	_delay_ms(100);
	TWI_TransmitData(0x14,TW_MT_DATA_ACK);						// Set Internal Osc Freq
     3b4:	68 e2       	ldi	r22, 0x28	; 40
     3b6:	84 e1       	ldi	r24, 0x14	; 20
     3b8:	21 d2       	rcall	.+1090   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x78,TW_MT_DATA_ACK);						// Contrast Set
     3ba:	68 e2       	ldi	r22, 0x28	; 40
     3bc:	88 e7       	ldi	r24, 0x78	; 120
     3be:	1e d2       	rcall	.+1084   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x5D,TW_MT_DATA_ACK);						// Power/Icon/Contrast Control
     3c0:	68 e2       	ldi	r22, 0x28	; 40
     3c2:	8d e5       	ldi	r24, 0x5D	; 93
     3c4:	1b d2       	rcall	.+1078   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x6D,TW_MT_DATA_ACK);						// Follower Control
     3c6:	68 e2       	ldi	r22, 0x28	; 40
     3c8:	8d e6       	ldi	r24, 0x6D	; 109
     3ca:	18 d2       	rcall	.+1072   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x0C,TW_MT_DATA_ACK);						// Display On/Off
     3cc:	68 e2       	ldi	r22, 0x28	; 40
     3ce:	8c e0       	ldi	r24, 0x0C	; 12
     3d0:	15 d2       	rcall	.+1066   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);						// Clear Display
     3d2:	68 e2       	ldi	r22, 0x28	; 40
     3d4:	81 e0       	ldi	r24, 0x01	; 1
     3d6:	12 d2       	rcall	.+1060   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x06,TW_MT_DATA_ACK);						// Entry Mode Set: Cursor/Shift as characters input
     3d8:	68 e2       	ldi	r22, 0x28	; 40
     3da:	86 e0       	ldi	r24, 0x06	; 6
     3dc:	0f d2       	rcall	.+1054   	; 0x7fc <_Z16TWI_TransmitDatahh>
     3de:	87 ea       	ldi	r24, 0xA7	; 167
     3e0:	91 e6       	ldi	r25, 0x61	; 97
     3e2:	01 97       	sbiw	r24, 0x01	; 1
     3e4:	f1 f7       	brne	.-4      	; 0x3e2 <_ZN3lcd8init_LCDEv+0x66>
     3e6:	00 c0       	rjmp	.+0      	; 0x3e8 <_ZN3lcd8init_LCDEv+0x6c>
     3e8:	00 00       	nop
	_delay_ms(100);
	TWI_STOP();
     3ea:	f9 d1       	rcall	.+1010   	; 0x7de <_Z8TWI_STOPv>

	CGRAM();			//define CGRAM
     3ec:	ce 01       	movw	r24, r28
     3ee:	91 df       	rcall	.-222    	; 0x312 <_ZN3lcd5CGRAMEv>

	TWI_StartCommunication();
     3f0:	fa d1       	rcall	.+1012   	; 0x7e6 <_Z22TWI_StartCommunicationv>
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     3f2:	68 e1       	ldi	r22, 0x18	; 24
     3f4:	8c e7       	ldi	r24, 0x7C	; 124
     3f6:	02 d2       	rcall	.+1028   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     3f8:	68 e2       	ldi	r22, 0x28	; 40
     3fa:	80 e0       	ldi	r24, 0x00	; 0
     3fc:	ff d1       	rcall	.+1022   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x39,TW_MT_DATA_ACK);
     3fe:	68 e2       	ldi	r22, 0x28	; 40
     400:	89 e3       	ldi	r24, 0x39	; 57
     402:	fc d1       	rcall	.+1016   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);
     404:	68 e2       	ldi	r22, 0x28	; 40
     406:	81 e0       	ldi	r24, 0x01	; 1
     408:	f9 d1       	rcall	.+1010   	; 0x7fc <_Z16TWI_TransmitDatahh>
	TWI_STOP();
     40a:	e9 d1       	rcall	.+978    	; 0x7de <_Z8TWI_STOPv>
     40c:	87 ea       	ldi	r24, 0xA7	; 167
     40e:	91 e6       	ldi	r25, 0x61	; 97
     410:	01 97       	sbiw	r24, 0x01	; 1
     412:	f1 f7       	brne	.-4      	; 0x410 <_ZN3lcd8init_LCDEv+0x94>
     414:	00 c0       	rjmp	.+0      	; 0x416 <_ZN3lcd8init_LCDEv+0x9a>
     416:	00 00       	nop
	_delay_ms(100);
}
     418:	df 91       	pop	r29
     41a:	cf 91       	pop	r28
     41c:	08 95       	ret

0000041e <_ZN3lcdC1Ev>:
#include "lcd.h"
#include "twi.h"


lcd::lcd(){
     41e:	cf 93       	push	r28
     420:	df 93       	push	r29
     422:	ec 01       	movw	r28, r24
	
	TWI_INIT();
     424:	c9 d1       	rcall	.+914    	; 0x7b8 <_Z8TWI_INITv>
	init_LCD();
     426:	ce 01       	movw	r24, r28
     428:	a9 df       	rcall	.-174    	; 0x37c <_ZN3lcd8init_LCDEv>
     42a:	87 e8       	ldi	r24, 0x87	; 135
     42c:	93 e1       	ldi	r25, 0x13	; 19
     42e:	01 97       	sbiw	r24, 0x01	; 1
     430:	f1 f7       	brne	.-4      	; 0x42e <_ZN3lcdC1Ev+0x10>
     432:	00 c0       	rjmp	.+0      	; 0x434 <_ZN3lcdC1Ev+0x16>
     434:	00 00       	nop
	_delay_ms(20);
		
}
     436:	df 91       	pop	r29
     438:	cf 91       	pop	r28
     43a:	08 95       	ret

0000043c <_ZN3lcd5printEPhh>:
	print(text2, LINE_BOTTOM);

}


void lcd::print(unsigned char* text, uint8_t valLine){
     43c:	0f 93       	push	r16
     43e:	1f 93       	push	r17
     440:	cf 93       	push	r28
     442:	df 93       	push	r29
     444:	ec 01       	movw	r28, r24
     446:	8b 01       	movw	r16, r22
		
	if( valLine == LINE_TOP ){
     448:	41 11       	cpse	r20, r1
     44a:	0b c0       	rjmp	.+22     	; 0x462 <_ZN3lcd5printEPhh+0x26>
		SelectLine1();
     44c:	4a df       	rcall	.-364    	; 0x2e2 <_ZN3lcd11SelectLine1Ev>
     44e:	83 ec       	ldi	r24, 0xC3	; 195
     450:	99 e0       	ldi	r25, 0x09	; 9
     452:	01 97       	sbiw	r24, 0x01	; 1
     454:	f1 f7       	brne	.-4      	; 0x452 <_ZN3lcd5printEPhh+0x16>
     456:	00 c0       	rjmp	.+0      	; 0x458 <_ZN3lcd5printEPhh+0x1c>
     458:	00 00       	nop
		_delay_ms(10);
		Show(text);
     45a:	b8 01       	movw	r22, r16
     45c:	ce 01       	movw	r24, r28
     45e:	26 df       	rcall	.-436    	; 0x2ac <_ZN3lcd4ShowEPh>
     460:	0c c0       	rjmp	.+24     	; 0x47a <_ZN3lcd5printEPhh+0x3e>
	}else if( valLine == LINE_BOTTOM ){
     462:	41 30       	cpi	r20, 0x01	; 1
     464:	51 f4       	brne	.+20     	; 0x47a <_ZN3lcd5printEPhh+0x3e>
		SelectLine2();
     466:	49 df       	rcall	.-366    	; 0x2fa <_ZN3lcd11SelectLine2Ev>
     468:	83 ec       	ldi	r24, 0xC3	; 195
     46a:	99 e0       	ldi	r25, 0x09	; 9
     46c:	01 97       	sbiw	r24, 0x01	; 1
     46e:	f1 f7       	brne	.-4      	; 0x46c <_ZN3lcd5printEPhh+0x30>
     470:	00 c0       	rjmp	.+0      	; 0x472 <_ZN3lcd5printEPhh+0x36>
     472:	00 00       	nop
		_delay_ms(10);
		Show(text);
     474:	b8 01       	movw	r22, r16
     476:	ce 01       	movw	r24, r28
     478:	19 df       	rcall	.-462    	; 0x2ac <_ZN3lcd4ShowEPh>
	}
		
}
     47a:	df 91       	pop	r29
     47c:	cf 91       	pop	r28
     47e:	1f 91       	pop	r17
     480:	0f 91       	pop	r16
     482:	08 95       	ret

00000484 <_ZN3lcd15test_LCD_ScreenEv>:
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);
	TWI_STOP();
	_delay_ms(100);
}

void lcd::test_LCD_Screen(){
     484:	0f 93       	push	r16
     486:	1f 93       	push	r17
     488:	cf 93       	push	r28
     48a:	df 93       	push	r29
     48c:	cd b7       	in	r28, 0x3d	; 61
     48e:	de b7       	in	r29, 0x3e	; 62
     490:	a2 97       	sbiw	r28, 0x22	; 34
     492:	0f b6       	in	r0, 0x3f	; 63
     494:	f8 94       	cli
     496:	de bf       	out	0x3e, r29	; 62
     498:	0f be       	out	0x3f, r0	; 63
     49a:	cd bf       	out	0x3d, r28	; 61
     49c:	8c 01       	movw	r16, r24
	
	unsigned char text1[]={"-! TEST LINE 1 !"};
     49e:	81 e1       	ldi	r24, 0x11	; 17
     4a0:	e0 e0       	ldi	r30, 0x00	; 0
     4a2:	f1 e0       	ldi	r31, 0x01	; 1
     4a4:	de 01       	movw	r26, r28
     4a6:	52 96       	adiw	r26, 0x12	; 18
     4a8:	01 90       	ld	r0, Z+
     4aa:	0d 92       	st	X+, r0
     4ac:	8a 95       	dec	r24
     4ae:	e1 f7       	brne	.-8      	; 0x4a8 <_ZN3lcd15test_LCD_ScreenEv+0x24>
	unsigned char text2[]={"! TEST LINE 2 !-"};
     4b0:	81 e1       	ldi	r24, 0x11	; 17
     4b2:	e1 e1       	ldi	r30, 0x11	; 17
     4b4:	f1 e0       	ldi	r31, 0x01	; 1
     4b6:	de 01       	movw	r26, r28
     4b8:	11 96       	adiw	r26, 0x01	; 1
     4ba:	01 90       	ld	r0, Z+
     4bc:	0d 92       	st	X+, r0
     4be:	8a 95       	dec	r24
     4c0:	e1 f7       	brne	.-8      	; 0x4ba <_ZN3lcd15test_LCD_ScreenEv+0x36>

	
	print(text1, LINE_TOP);
     4c2:	40 e0       	ldi	r20, 0x00	; 0
     4c4:	be 01       	movw	r22, r28
     4c6:	6e 5e       	subi	r22, 0xEE	; 238
     4c8:	7f 4f       	sbci	r23, 0xFF	; 255
     4ca:	c8 01       	movw	r24, r16
     4cc:	b7 df       	rcall	.-146    	; 0x43c <_ZN3lcd5printEPhh>
	print(text2, LINE_BOTTOM);
     4ce:	41 e0       	ldi	r20, 0x01	; 1
     4d0:	be 01       	movw	r22, r28
     4d2:	6f 5f       	subi	r22, 0xFF	; 255
     4d4:	7f 4f       	sbci	r23, 0xFF	; 255
     4d6:	c8 01       	movw	r24, r16
     4d8:	b1 df       	rcall	.-158    	; 0x43c <_ZN3lcd5printEPhh>
     4da:	83 e2       	ldi	r24, 0x23	; 35
     4dc:	94 ef       	ldi	r25, 0xF4	; 244
     4de:	01 97       	sbiw	r24, 0x01	; 1
     4e0:	f1 f7       	brne	.-4      	; 0x4de <_ZN3lcd15test_LCD_ScreenEv+0x5a>
     4e2:	00 c0       	rjmp	.+0      	; 0x4e4 <_ZN3lcd15test_LCD_ScreenEv+0x60>
     4e4:	00 00       	nop
	_delay_ms(250);
	print(text1, LINE_BOTTOM);
     4e6:	41 e0       	ldi	r20, 0x01	; 1
     4e8:	be 01       	movw	r22, r28
     4ea:	6e 5e       	subi	r22, 0xEE	; 238
     4ec:	7f 4f       	sbci	r23, 0xFF	; 255
     4ee:	c8 01       	movw	r24, r16
     4f0:	a5 df       	rcall	.-182    	; 0x43c <_ZN3lcd5printEPhh>
	print(text2, LINE_TOP);
     4f2:	40 e0       	ldi	r20, 0x00	; 0
     4f4:	be 01       	movw	r22, r28
     4f6:	6f 5f       	subi	r22, 0xFF	; 255
     4f8:	7f 4f       	sbci	r23, 0xFF	; 255
     4fa:	c8 01       	movw	r24, r16
     4fc:	9f df       	rcall	.-194    	; 0x43c <_ZN3lcd5printEPhh>
     4fe:	83 e2       	ldi	r24, 0x23	; 35
     500:	94 ef       	ldi	r25, 0xF4	; 244
     502:	01 97       	sbiw	r24, 0x01	; 1
     504:	f1 f7       	brne	.-4      	; 0x502 <_ZN3lcd15test_LCD_ScreenEv+0x7e>
     506:	00 c0       	rjmp	.+0      	; 0x508 <_ZN3lcd15test_LCD_ScreenEv+0x84>
     508:	00 00       	nop
	_delay_ms(250);
	print(text1, LINE_TOP);
     50a:	40 e0       	ldi	r20, 0x00	; 0
     50c:	be 01       	movw	r22, r28
     50e:	6e 5e       	subi	r22, 0xEE	; 238
     510:	7f 4f       	sbci	r23, 0xFF	; 255
     512:	c8 01       	movw	r24, r16
     514:	93 df       	rcall	.-218    	; 0x43c <_ZN3lcd5printEPhh>
	print(text2, LINE_BOTTOM);
     516:	41 e0       	ldi	r20, 0x01	; 1
     518:	be 01       	movw	r22, r28
     51a:	6f 5f       	subi	r22, 0xFF	; 255
     51c:	7f 4f       	sbci	r23, 0xFF	; 255
     51e:	c8 01       	movw	r24, r16
     520:	8d df       	rcall	.-230    	; 0x43c <_ZN3lcd5printEPhh>

}
     522:	a2 96       	adiw	r28, 0x22	; 34
     524:	0f b6       	in	r0, 0x3f	; 63
     526:	f8 94       	cli
     528:	de bf       	out	0x3e, r29	; 62
     52a:	0f be       	out	0x3f, r0	; 63
     52c:	cd bf       	out	0x3d, r28	; 61
     52e:	df 91       	pop	r29
     530:	cf 91       	pop	r28
     532:	1f 91       	pop	r17
     534:	0f 91       	pop	r16
     536:	08 95       	ret

00000538 <_ZN3rtc10read_blockEhPhj>:

/*
*	ReadBlock reads iCount bytes starting at cAddr into the
*	buffer pBuffer
*/
void rtc::read_block( unsigned char cAddr, unsigned char *pBuffer, unsigned int iCount ){
     538:	ef 92       	push	r14
     53a:	ff 92       	push	r15
     53c:	0f 93       	push	r16
     53e:	1f 93       	push	r17
     540:	cf 93       	push	r28
     542:	df 93       	push	r29
     544:	16 2f       	mov	r17, r22
     546:	e4 2e       	mov	r14, r20
     548:	f5 2e       	mov	r15, r21
     54a:	e9 01       	movw	r28, r18
	
	spi_select( );
     54c:	20 d1       	rcall	.+576    	; 0x78e <_Z10spi_selectv>

	spi_master_transmit( cAddr );
     54e:	81 2f       	mov	r24, r17
     550:	2d d1       	rcall	.+602    	; 0x7ac <_Z19spi_master_transmith>
	while( iCount-- ){
     552:	20 97       	sbiw	r28, 0x00	; 0
     554:	49 f0       	breq	.+18     	; 0x568 <_ZN3rtc10read_blockEhPhj+0x30>
     556:	0e 2d       	mov	r16, r14
     558:	1f 2d       	mov	r17, r15
		*pBuffer++ = spi_master_transmit( 0 );
     55a:	80 e0       	ldi	r24, 0x00	; 0
     55c:	27 d1       	rcall	.+590    	; 0x7ac <_Z19spi_master_transmith>
     55e:	f8 01       	movw	r30, r16
     560:	81 93       	st	Z+, r24
     562:	8f 01       	movw	r16, r30
     564:	21 97       	sbiw	r28, 0x01	; 1
void rtc::read_block( unsigned char cAddr, unsigned char *pBuffer, unsigned int iCount ){
	
	spi_select( );

	spi_master_transmit( cAddr );
	while( iCount-- ){
     566:	c9 f7       	brne	.-14     	; 0x55a <_ZN3rtc10read_blockEhPhj+0x22>
		*pBuffer++ = spi_master_transmit( 0 );
	}

	spi_deselect();
     568:	17 d1       	rcall	.+558    	; 0x798 <_Z12spi_deselectv>

}
     56a:	df 91       	pop	r29
     56c:	cf 91       	pop	r28
     56e:	1f 91       	pop	r17
     570:	0f 91       	pop	r16
     572:	ff 90       	pop	r15
     574:	ef 90       	pop	r14
     576:	08 95       	ret

00000578 <_ZN3rtc11write_blockEhPhj>:
/*
*  WriteBlock sends iCount bytes from the buffer pBuffer
*  to the device at iAddr + 0x80. The device uses a split
*  memory map where all write addresses are at address +0x80
*/
void rtc::write_block(unsigned char iAddr, unsigned char *pBuffer, unsigned int iCount){
     578:	ef 92       	push	r14
     57a:	ff 92       	push	r15
     57c:	0f 93       	push	r16
     57e:	1f 93       	push	r17
     580:	cf 93       	push	r28
     582:	df 93       	push	r29
     584:	16 2f       	mov	r17, r22
     586:	e4 2e       	mov	r14, r20
     588:	f5 2e       	mov	r15, r21
     58a:	e9 01       	movw	r28, r18

	spi_select( );
     58c:	00 d1       	rcall	.+512    	; 0x78e <_Z10spi_selectv>

	spi_master_transmit( iAddr + 0x80 );
     58e:	80 e8       	ldi	r24, 0x80	; 128
     590:	81 0f       	add	r24, r17
     592:	0c d1       	rcall	.+536    	; 0x7ac <_Z19spi_master_transmith>
	while( iCount-- ){
     594:	20 97       	sbiw	r28, 0x00	; 0
     596:	41 f0       	breq	.+16     	; 0x5a8 <_ZN3rtc11write_blockEhPhj+0x30>
     598:	0e 2d       	mov	r16, r14
     59a:	1f 2d       	mov	r17, r15
		spi_master_transmit( *pBuffer++ );
     59c:	f8 01       	movw	r30, r16
     59e:	81 91       	ld	r24, Z+
     5a0:	8f 01       	movw	r16, r30
     5a2:	04 d1       	rcall	.+520    	; 0x7ac <_Z19spi_master_transmith>
     5a4:	21 97       	sbiw	r28, 0x01	; 1
void rtc::write_block(unsigned char iAddr, unsigned char *pBuffer, unsigned int iCount){

	spi_select( );

	spi_master_transmit( iAddr + 0x80 );
	while( iCount-- ){
     5a6:	d1 f7       	brne	.-12     	; 0x59c <_ZN3rtc11write_blockEhPhj+0x24>
		spi_master_transmit( *pBuffer++ );
	}

	spi_deselect( );
     5a8:	f7 d0       	rcall	.+494    	; 0x798 <_Z12spi_deselectv>
}
     5aa:	df 91       	pop	r29
     5ac:	cf 91       	pop	r28
     5ae:	1f 91       	pop	r17
     5b0:	0f 91       	pop	r16
     5b2:	ff 90       	pop	r15
     5b4:	ef 90       	pop	r14
     5b6:	08 95       	ret

000005b8 <_ZN3rtcC1Ev>:
#include <util/delay.h>
#include "rtc.h"
#include "spi.h"


rtc::rtc(){
     5b8:	0f 93       	push	r16
     5ba:	1f 93       	push	r17
     5bc:	cf 93       	push	r28
     5be:	df 93       	push	r29
     5c0:	00 d0       	rcall	.+0      	; 0x5c2 <_ZN3rtcC1Ev+0xa>
     5c2:	cd b7       	in	r28, 0x3d	; 61
     5c4:	de b7       	in	r29, 0x3e	; 62
     5c6:	8c 01       	movw	r16, r24
	
	uint8_t tc = 0;
     5c8:	1a 82       	std	Y+2, r1	; 0x02
	uint8_t tc2 = 0xFF;
     5ca:	8f ef       	ldi	r24, 0xFF	; 255
     5cc:	89 83       	std	Y+1, r24	; 0x01


	spi_init();
     5ce:	e6 d0       	rcall	.+460    	; 0x79c <_Z8spi_initv>
	write_block(0x0F,&tc,1);	// Enable timer and unwrite protect memory
     5d0:	21 e0       	ldi	r18, 0x01	; 1
     5d2:	30 e0       	ldi	r19, 0x00	; 0
     5d4:	ae 01       	movw	r20, r28
     5d6:	4e 5f       	subi	r20, 0xFE	; 254
     5d8:	5f 4f       	sbci	r21, 0xFF	; 255
     5da:	6f e0       	ldi	r22, 0x0F	; 15
     5dc:	c8 01       	movw	r24, r16
     5de:	cc df       	rcall	.-104    	; 0x578 <_ZN3rtc11write_blockEhPhj>
	write_block(0x82,&tc2,1);	// set 12hr format
     5e0:	21 e0       	ldi	r18, 0x01	; 1
     5e2:	30 e0       	ldi	r19, 0x00	; 0
     5e4:	ae 01       	movw	r20, r28
     5e6:	4f 5f       	subi	r20, 0xFF	; 255
     5e8:	5f 4f       	sbci	r21, 0xFF	; 255
     5ea:	62 e8       	ldi	r22, 0x82	; 130
     5ec:	c8 01       	movw	r24, r16
     5ee:	c4 df       	rcall	.-120    	; 0x578 <_ZN3rtc11write_blockEhPhj>
	
}
     5f0:	0f 90       	pop	r0
     5f2:	0f 90       	pop	r0
     5f4:	df 91       	pop	r29
     5f6:	cf 91       	pop	r28
     5f8:	1f 91       	pop	r17
     5fa:	0f 91       	pop	r16
     5fc:	08 95       	ret

000005fe <_ZN3rtc8get_timeEv>:

	spi_deselect( );
}


rtc_time rtc::get_time( ){
     5fe:	cf 93       	push	r28
     600:	df 93       	push	r29
     602:	cd b7       	in	r28, 0x3d	; 61
     604:	de b7       	in	r29, 0x3e	; 62
     606:	2e 97       	sbiw	r28, 0x0e	; 14
     608:	0f b6       	in	r0, 0x3f	; 63
     60a:	f8 94       	cli
     60c:	de bf       	out	0x3e, r29	; 62
     60e:	0f be       	out	0x3f, r0	; 63
     610:	cd bf       	out	0x3d, r28	; 61

	rtc_time rtmToConvert;


	read_block( 0, ( unsigned char * )&rtmToConvert, sizeof( rtc_time ));
     612:	27 e0       	ldi	r18, 0x07	; 7
     614:	30 e0       	ldi	r19, 0x00	; 0
     616:	ae 01       	movw	r20, r28
     618:	48 5f       	subi	r20, 0xF8	; 248
     61a:	5f 4f       	sbci	r21, 0xFF	; 255
     61c:	60 e0       	ldi	r22, 0x00	; 0
     61e:	8c df       	rcall	.-232    	; 0x538 <_ZN3rtc10read_blockEhPhj>

	return rtmToConvert;
     620:	87 e0       	ldi	r24, 0x07	; 7
     622:	fe 01       	movw	r30, r28
     624:	38 96       	adiw	r30, 0x08	; 8
     626:	de 01       	movw	r26, r28
     628:	11 96       	adiw	r26, 0x01	; 1
     62a:	01 90       	ld	r0, Z+
     62c:	0d 92       	st	X+, r0
     62e:	8a 95       	dec	r24
     630:	e1 f7       	brne	.-8      	; 0x62a <_ZN3rtc8get_timeEv+0x2c>
     632:	29 81       	ldd	r18, Y+1	; 0x01
     634:	3a 81       	ldd	r19, Y+2	; 0x02
     636:	4b 81       	ldd	r20, Y+3	; 0x03
     638:	5c 81       	ldd	r21, Y+4	; 0x04
     63a:	6d 81       	ldd	r22, Y+5	; 0x05
     63c:	7e 81       	ldd	r23, Y+6	; 0x06
}
     63e:	8f 81       	ldd	r24, Y+7	; 0x07
     640:	90 e0       	ldi	r25, 0x00	; 0
     642:	2e 96       	adiw	r28, 0x0e	; 14
     644:	0f b6       	in	r0, 0x3f	; 63
     646:	f8 94       	cli
     648:	de bf       	out	0x3e, r29	; 62
     64a:	0f be       	out	0x3f, r0	; 63
     64c:	cd bf       	out	0x3d, r28	; 61
     64e:	df 91       	pop	r29
     650:	cf 91       	pop	r28
     652:	08 95       	ret

00000654 <_ZN3rtc8set_timeEP8rtc_time>:


void rtc::set_time( rtc_time* rtmSetTime ){
     654:	ab 01       	movw	r20, r22

	write_block( 0, ( unsigned char * )rtmSetTime, sizeof(rtc_time));
     656:	27 e0       	ldi	r18, 0x07	; 7
     658:	30 e0       	ldi	r19, 0x00	; 0
     65a:	60 e0       	ldi	r22, 0x00	; 0
     65c:	8d cf       	rjmp	.-230    	; 0x578 <_ZN3rtc11write_blockEhPhj>
     65e:	08 95       	ret

00000660 <_ZN3rtc11rtm_to_charE8rtc_timePhj>:
}


void rtc::rtm_to_char( rtc_time rtmToConvert, unsigned char* uchToReturn, unsigned int valCharLen ){
     660:	8f 92       	push	r8
     662:	9f 92       	push	r9
     664:	af 92       	push	r10
     666:	bf 92       	push	r11
     668:	cf 92       	push	r12
     66a:	df 92       	push	r13
     66c:	ef 92       	push	r14
     66e:	ff 92       	push	r15
     670:	0f 93       	push	r16
     672:	1f 93       	push	r17
     674:	cf 93       	push	r28
     676:	df 93       	push	r29
     678:	cd b7       	in	r28, 0x3d	; 61
     67a:	de b7       	in	r29, 0x3e	; 62
     67c:	27 97       	sbiw	r28, 0x07	; 7
     67e:	0f b6       	in	r0, 0x3f	; 63
     680:	f8 94       	cli
     682:	de bf       	out	0x3e, r29	; 62
     684:	0f be       	out	0x3f, r0	; 63
     686:	cd bf       	out	0x3d, r28	; 61
     688:	09 83       	std	Y+1, r16	; 0x01
     68a:	1a 83       	std	Y+2, r17	; 0x02
     68c:	2b 83       	std	Y+3, r18	; 0x03
     68e:	3c 83       	std	Y+4, r19	; 0x04
     690:	4d 83       	std	Y+5, r20	; 0x05
     692:	5e 83       	std	Y+6, r21	; 0x06
     694:	6f 83       	std	Y+7, r22	; 0x07
     696:	c7 01       	movw	r24, r14
     698:	a6 01       	movw	r20, r12
	uchTimeOut[valTextOffset + 6] = valSecs >> 8;
	uchTimeOut[valTextOffset + 7] = valSecs & 0x00FF;
	
	memcpy( uchToReturn, uchTimeOut, valCharLen );

}
     69a:	ad b6       	in	r10, 0x3d	; 61
     69c:	be b6       	in	r11, 0x3e	; 62
     69e:	f1 2e       	mov	r15, r17
     6a0:	32 2f       	mov	r19, r18
}


void rtc::rtm_to_char( rtc_time rtmToConvert, unsigned char* uchToReturn, unsigned int valCharLen ){
	
	unsigned char uchTimeOut[ valCharLen ];
     6a2:	6d b7       	in	r22, 0x3d	; 61
     6a4:	7e b7       	in	r23, 0x3e	; 62
     6a6:	6c 19       	sub	r22, r12
     6a8:	7d 09       	sbc	r23, r13
     6aa:	0f b6       	in	r0, 0x3f	; 63
     6ac:	f8 94       	cli
     6ae:	7e bf       	out	0x3e, r23	; 62
     6b0:	0f be       	out	0x3f, r0	; 63
     6b2:	6d bf       	out	0x3d, r22	; 61
     6b4:	6f 5f       	subi	r22, 0xFF	; 255
     6b6:	7f 4f       	sbci	r23, 0xFF	; 255
	uint8_t valTimeLength = 8;
	unsigned int valTextOffset = ( valCharLen - valTimeLength ) / 2;
     6b8:	46 01       	movw	r8, r12
     6ba:	28 e0       	ldi	r18, 0x08	; 8
     6bc:	82 1a       	sub	r8, r18
     6be:	91 08       	sbc	r9, r1
     6c0:	96 94       	lsr	r9
     6c2:	87 94       	ror	r8
	uint16_t valSecs = 0x2020;
	uint16_t valMins = 0x20;
	uint16_t valHours = 0x20;
	
	
	for(unsigned int valN = 0; valN < valCharLen; valN++ ){
     6c4:	c1 14       	cp	r12, r1
     6c6:	d1 04       	cpc	r13, r1
     6c8:	49 f0       	breq	.+18     	; 0x6dc <_ZN3rtc11rtm_to_charE8rtc_timePhj+0x7c>
     6ca:	fb 01       	movw	r30, r22
     6cc:	db 01       	movw	r26, r22
     6ce:	ac 0d       	add	r26, r12
     6d0:	bd 1d       	adc	r27, r13
		uchTimeOut[valN] = ' ';
     6d2:	20 e2       	ldi	r18, 0x20	; 32
     6d4:	21 93       	st	Z+, r18
	uint16_t valSecs = 0x2020;
	uint16_t valMins = 0x20;
	uint16_t valHours = 0x20;
	
	
	for(unsigned int valN = 0; valN < valCharLen; valN++ ){
     6d6:	ea 17       	cp	r30, r26
     6d8:	fb 07       	cpc	r31, r27
     6da:	e1 f7       	brne	.-8      	; 0x6d4 <_ZN3rtc11rtm_to_charE8rtc_timePhj+0x74>
		uchTimeOut[valN] = ' ';
	}

	valSecs &= 0x0000;
	valSecs |= (( rtmToConvert.ucSeconds & 0xF0 ) + 0x0300 ) << 4;
     6dc:	e0 2f       	mov	r30, r16
     6de:	e0 7f       	andi	r30, 0xF0	; 240
     6e0:	f0 e0       	ldi	r31, 0x00	; 0
     6e2:	fd 5f       	subi	r31, 0xFD	; 253
     6e4:	df 01       	movw	r26, r30
     6e6:	a2 95       	swap	r26
     6e8:	b2 95       	swap	r27
     6ea:	b0 7f       	andi	r27, 0xF0	; 240
     6ec:	ba 27       	eor	r27, r26
     6ee:	a0 7f       	andi	r26, 0xF0	; 240
     6f0:	ba 27       	eor	r27, r26
	valSecs |= ( rtmToConvert.ucSeconds & 0x0F) + 0x0030;
     6f2:	0f 70       	andi	r16, 0x0F	; 15
     6f4:	e0 2f       	mov	r30, r16
     6f6:	f0 e0       	ldi	r31, 0x00	; 0
     6f8:	f0 96       	adiw	r30, 0x30	; 48
     6fa:	6d 01       	movw	r12, r26
     6fc:	ce 2a       	or	r12, r30
     6fe:	df 2a       	or	r13, r31
	valMins &= 0x0000;
	valMins |= (( rtmToConvert.ucMinutes & 0xF0 ) + 0x0300 ) << 4;
     700:	af 2d       	mov	r26, r15
     702:	a0 7f       	andi	r26, 0xF0	; 240
     704:	b0 e0       	ldi	r27, 0x00	; 0
     706:	bd 5f       	subi	r27, 0xFD	; 253
     708:	8d 01       	movw	r16, r26
     70a:	02 95       	swap	r16
     70c:	12 95       	swap	r17
     70e:	10 7f       	andi	r17, 0xF0	; 240
     710:	10 27       	eor	r17, r16
     712:	00 7f       	andi	r16, 0xF0	; 240
     714:	10 27       	eor	r17, r16
	valMins |= ( rtmToConvert.ucMinutes & 0x0F) + 0x0030;
     716:	af 2d       	mov	r26, r15
     718:	af 70       	andi	r26, 0x0F	; 15
     71a:	b0 e0       	ldi	r27, 0x00	; 0
     71c:	d0 96       	adiw	r26, 0x30	; 48
     71e:	a0 2b       	or	r26, r16
     720:	b1 2b       	or	r27, r17
	valHours &= 0x0000;
	valHours |= (( rtmToConvert.ucHours & 0x10 ) + 0x0300 ) << 4;
     722:	03 2f       	mov	r16, r19
     724:	00 71       	andi	r16, 0x10	; 16
     726:	10 e0       	ldi	r17, 0x00	; 0
     728:	1d 5f       	subi	r17, 0xFD	; 253
     72a:	02 95       	swap	r16
     72c:	12 95       	swap	r17
     72e:	10 7f       	andi	r17, 0xF0	; 240
     730:	10 27       	eor	r17, r16
     732:	00 7f       	andi	r16, 0xF0	; 240
     734:	10 27       	eor	r17, r16
	valHours |= ( rtmToConvert.ucHours & 0x0F) + 0x0030;
     736:	3f 70       	andi	r19, 0x0F	; 15
     738:	23 2f       	mov	r18, r19
     73a:	30 e0       	ldi	r19, 0x00	; 0
     73c:	20 5d       	subi	r18, 0xD0	; 208
     73e:	3f 4f       	sbci	r19, 0xFF	; 255
     740:	20 2b       	or	r18, r16
     742:	31 2b       	or	r19, r17
	uchTimeOut[valTextOffset] = valHours >> 8;
     744:	fb 01       	movw	r30, r22
     746:	e8 0d       	add	r30, r8
     748:	f9 1d       	adc	r31, r9
     74a:	30 83       	st	Z, r19
	uchTimeOut[valTextOffset + 1] = valHours & 0x00FF;
     74c:	21 83       	std	Z+1, r18	; 0x01
	uchTimeOut[valTextOffset + 2] = ':';
     74e:	2a e3       	ldi	r18, 0x3A	; 58
     750:	22 83       	std	Z+2, r18	; 0x02
	uchTimeOut[valTextOffset + 3] = valMins >> 8;
     752:	b3 83       	std	Z+3, r27	; 0x03
	uchTimeOut[valTextOffset + 4] = valMins & 0x00FF;
     754:	a4 83       	std	Z+4, r26	; 0x04
	uchTimeOut[valTextOffset + 5] = ':';
     756:	25 83       	std	Z+5, r18	; 0x05
	uchTimeOut[valTextOffset + 6] = valSecs >> 8;
     758:	d6 82       	std	Z+6, r13	; 0x06
	uchTimeOut[valTextOffset + 7] = valSecs & 0x00FF;
     75a:	c7 82       	std	Z+7, r12	; 0x07
	
	memcpy( uchToReturn, uchTimeOut, valCharLen );
     75c:	c7 d4       	rcall	.+2446   	; 0x10ec <memcpy>

}
     75e:	0f b6       	in	r0, 0x3f	; 63
     760:	f8 94       	cli
     762:	be be       	out	0x3e, r11	; 62
     764:	0f be       	out	0x3f, r0	; 63
     766:	ad be       	out	0x3d, r10	; 61
     768:	27 96       	adiw	r28, 0x07	; 7
     76a:	0f b6       	in	r0, 0x3f	; 63
     76c:	f8 94       	cli
     76e:	de bf       	out	0x3e, r29	; 62
     770:	0f be       	out	0x3f, r0	; 63
     772:	cd bf       	out	0x3d, r28	; 61
     774:	df 91       	pop	r29
     776:	cf 91       	pop	r28
     778:	1f 91       	pop	r17
     77a:	0f 91       	pop	r16
     77c:	ff 90       	pop	r15
     77e:	ef 90       	pop	r14
     780:	df 90       	pop	r13
     782:	cf 90       	pop	r12
     784:	bf 90       	pop	r11
     786:	af 90       	pop	r10
     788:	9f 90       	pop	r9
     78a:	8f 90       	pop	r8
     78c:	08 95       	ret

0000078e <_Z10spi_selectv>:
 */ 
 #include "spi.h"

 void spi_select( ) {

	 SPCR |= ( 1 << CPHA );
     78e:	8c b5       	in	r24, 0x2c	; 44
     790:	84 60       	ori	r24, 0x04	; 4
     792:	8c bd       	out	0x2c, r24	; 44
	 PORTB |= ( 1 << SS_PIN );
     794:	2c 9a       	sbi	0x05, 4	; 5
     796:	08 95       	ret

00000798 <_Z12spi_deselectv>:
 *	This routine de-selects the device by lowering the CE
 *	line. Must be done after the master transmit is complete
 */
 void spi_deselect( ){

	 PORTB &= ~( 1 << SS_PIN );
     798:	2c 98       	cbi	0x05, 4	; 5
     79a:	08 95       	ret

0000079c <_Z8spi_initv>:
 void spi_init( ){

	 char IOReg;

	 /* Outputs: MOSI and SCK out, all others inputs */
	 DDRB = ( 1 << DD_MOSI_PIN ) | ( 1 << DD_SCK_PIN ) | ( 1 << DD_SS_PIN );
     79c:	80 eb       	ldi	r24, 0xB0	; 176
     79e:	84 b9       	out	0x04, r24	; 4
	 /* Enable SPI, Master, CPOL=0, CPHA=1, set clock rate fck/16 */
	 SPCR = ( 1 << SPE ) | ( 1 << MSTR ) | ( 1 << SPR0 );	// POSSIBLE ERROR: PULLING DATA HIGH
     7a0:	81 e5       	ldi	r24, 0x51	; 81
     7a2:	8c bd       	out	0x2c, r24	; 44
	 
	 /* Clear the SPIF bit in SPSR */
	 IOReg = SPSR;
     7a4:	8d b5       	in	r24, 0x2d	; 45
	 IOReg = SPDR;
     7a6:	8e b5       	in	r24, 0x2e	; 46

	 spi_deselect( );
     7a8:	f7 cf       	rjmp	.-18     	; 0x798 <_Z12spi_deselectv>
     7aa:	08 95       	ret

000007ac <_Z19spi_master_transmith>:

 // This routine exchanges 1 byte with the SPI port.
 unsigned char spi_master_transmit( unsigned char cData )
 {

	 SPDR  = cData;	// Set Pointer to beginning of String
     7ac:	8e bd       	out	0x2e, r24	; 46
	 /* wait until Char is sent */
	 while ( ! (SPSR & ( 1 << SPIF ))){
     7ae:	0d b4       	in	r0, 0x2d	; 45
     7b0:	07 fe       	sbrs	r0, 7
     7b2:	fd cf       	rjmp	.-6      	; 0x7ae <_Z19spi_master_transmith+0x2>
		 ;
	 }

	 return SPDR;
     7b4:	8e b5       	in	r24, 0x2e	; 46
     7b6:	08 95       	ret

000007b8 <_Z8TWI_INITv>:

}

void TWI_ClearFlagAndEnableWithAck()
{
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);// Clear Flag and Enable
     7b8:	e4 e6       	ldi	r30, 0x64	; 100
     7ba:	f0 e0       	ldi	r31, 0x00	; 0
     7bc:	80 81       	ld	r24, Z
     7be:	8f 77       	andi	r24, 0x7F	; 127
     7c0:	80 83       	st	Z, r24
     7c2:	ec eb       	ldi	r30, 0xBC	; 188
     7c4:	f0 e0       	ldi	r31, 0x00	; 0
     7c6:	80 81       	ld	r24, Z
     7c8:	8e 7f       	andi	r24, 0xFE	; 254
     7ca:	80 83       	st	Z, r24
     7cc:	82 e0       	ldi	r24, 0x02	; 2
     7ce:	80 93 b8 00 	sts	0x00B8, r24
     7d2:	e9 eb       	ldi	r30, 0xB9	; 185
     7d4:	f0 e0       	ldi	r31, 0x00	; 0
     7d6:	80 81       	ld	r24, Z
     7d8:	8d 7f       	andi	r24, 0xFD	; 253
     7da:	80 83       	st	Z, r24
     7dc:	08 95       	ret

000007de <_Z8TWI_STOPv>:
}

void TWI_STOP(){
	
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
     7de:	84 e9       	ldi	r24, 0x94	; 148
     7e0:	80 93 bc 00 	sts	0x00BC, r24
     7e4:	08 95       	ret

000007e6 <_Z22TWI_StartCommunicationv>:
	
}

void TWI_StartCommunication(){
	
	TWCR = (1 << TWEN) | (1 << TWINT) | (1 << TWSTA);
     7e6:	84 ea       	ldi	r24, 0xA4	; 164
     7e8:	80 93 bc 00 	sts	0x00BC, r24
	while ( ! (TWCR & (1 << TWINT)));				// wait for flag to be set
     7ec:	ec eb       	ldi	r30, 0xBC	; 188
     7ee:	f0 e0       	ldi	r31, 0x00	; 0
     7f0:	80 81       	ld	r24, Z
     7f2:	88 23       	and	r24, r24
     7f4:	ec f7       	brge	.-6      	; 0x7f0 <_Z22TWI_StartCommunicationv+0xa>
}


void TWI_CheckStatusRegister(uint8_t Status){

	if( (TWSR & 0xF8) != Status ) {					// Error check for start condition
     7f6:	80 91 b9 00 	lds	r24, 0x00B9
     7fa:	08 95       	ret

000007fc <_Z16TWI_TransmitDatahh>:
	
}

void TWI_TransmitData(uint8_t TwiData, uint8_t StatusCode){
	
	TWDR = TwiData;
     7fc:	80 93 bb 00 	sts	0x00BB, r24
}


void TWI_ClearFlagAndEnable(){

	TWCR = (1 << TWINT) | (1 << TWEN);				// Clear Flag and Enable
     800:	84 e8       	ldi	r24, 0x84	; 132
     802:	80 93 bc 00 	sts	0x00BC, r24
	
	TWDR = TwiData;
	/*After TWDR is loaded with SLA+W, a specific val must be written to TWCR, instucting the TWINT hardware
	to transmit the SLA+W present in TWDR*/
	TWI_ClearFlagAndEnable();
	while ( ! (TWCR & (1 << TWINT)));	// wait for flag to be set
     806:	ec eb       	ldi	r30, 0xBC	; 188
     808:	f0 e0       	ldi	r31, 0x00	; 0
     80a:	80 81       	ld	r24, Z
     80c:	88 23       	and	r24, r24
     80e:	ec f7       	brge	.-6      	; 0x80a <_Z16TWI_TransmitDatahh+0xe>
}


void TWI_CheckStatusRegister(uint8_t Status){

	if( (TWSR & 0xF8) != Status ) {					// Error check for start condition
     810:	80 91 b9 00 	lds	r24, 0x00B9
     814:	08 95       	ret

00000816 <vfprintf>:
     816:	2f 92       	push	r2
     818:	3f 92       	push	r3
     81a:	4f 92       	push	r4
     81c:	5f 92       	push	r5
     81e:	6f 92       	push	r6
     820:	7f 92       	push	r7
     822:	8f 92       	push	r8
     824:	9f 92       	push	r9
     826:	af 92       	push	r10
     828:	bf 92       	push	r11
     82a:	cf 92       	push	r12
     82c:	df 92       	push	r13
     82e:	ef 92       	push	r14
     830:	ff 92       	push	r15
     832:	0f 93       	push	r16
     834:	1f 93       	push	r17
     836:	cf 93       	push	r28
     838:	df 93       	push	r29
     83a:	cd b7       	in	r28, 0x3d	; 61
     83c:	de b7       	in	r29, 0x3e	; 62
     83e:	63 97       	sbiw	r28, 0x13	; 19
     840:	0f b6       	in	r0, 0x3f	; 63
     842:	f8 94       	cli
     844:	de bf       	out	0x3e, r29	; 62
     846:	0f be       	out	0x3f, r0	; 63
     848:	cd bf       	out	0x3d, r28	; 61
     84a:	6c 01       	movw	r12, r24
     84c:	4b 01       	movw	r8, r22
     84e:	2a 01       	movw	r4, r20
     850:	fc 01       	movw	r30, r24
     852:	17 82       	std	Z+7, r1	; 0x07
     854:	16 82       	std	Z+6, r1	; 0x06
     856:	83 81       	ldd	r24, Z+3	; 0x03
     858:	81 ff       	sbrs	r24, 1
     85a:	29 c3       	rjmp	.+1618   	; 0xeae <vfprintf+0x698>
     85c:	ae 01       	movw	r20, r28
     85e:	4f 5f       	subi	r20, 0xFF	; 255
     860:	5f 4f       	sbci	r21, 0xFF	; 255
     862:	3a 01       	movw	r6, r20
     864:	f6 01       	movw	r30, r12
     866:	93 81       	ldd	r25, Z+3	; 0x03
     868:	f4 01       	movw	r30, r8
     86a:	93 fd       	sbrc	r25, 3
     86c:	85 91       	lpm	r24, Z+
     86e:	93 ff       	sbrs	r25, 3
     870:	81 91       	ld	r24, Z+
     872:	4f 01       	movw	r8, r30
     874:	88 23       	and	r24, r24
     876:	09 f4       	brne	.+2      	; 0x87a <vfprintf+0x64>
     878:	16 c3       	rjmp	.+1580   	; 0xea6 <vfprintf+0x690>
     87a:	85 32       	cpi	r24, 0x25	; 37
     87c:	39 f4       	brne	.+14     	; 0x88c <vfprintf+0x76>
     87e:	93 fd       	sbrc	r25, 3
     880:	85 91       	lpm	r24, Z+
     882:	93 ff       	sbrs	r25, 3
     884:	81 91       	ld	r24, Z+
     886:	4f 01       	movw	r8, r30
     888:	85 32       	cpi	r24, 0x25	; 37
     88a:	31 f4       	brne	.+12     	; 0x898 <vfprintf+0x82>
     88c:	b6 01       	movw	r22, r12
     88e:	90 e0       	ldi	r25, 0x00	; 0
     890:	41 d4       	rcall	.+2178   	; 0x1114 <fputc>
     892:	52 01       	movw	r10, r4
     894:	25 01       	movw	r4, r10
     896:	e6 cf       	rjmp	.-52     	; 0x864 <vfprintf+0x4e>
     898:	10 e0       	ldi	r17, 0x00	; 0
     89a:	f1 2c       	mov	r15, r1
     89c:	20 e0       	ldi	r18, 0x00	; 0
     89e:	20 32       	cpi	r18, 0x20	; 32
     8a0:	a0 f4       	brcc	.+40     	; 0x8ca <vfprintf+0xb4>
     8a2:	8b 32       	cpi	r24, 0x2B	; 43
     8a4:	69 f0       	breq	.+26     	; 0x8c0 <vfprintf+0xaa>
     8a6:	30 f4       	brcc	.+12     	; 0x8b4 <vfprintf+0x9e>
     8a8:	80 32       	cpi	r24, 0x20	; 32
     8aa:	59 f0       	breq	.+22     	; 0x8c2 <vfprintf+0xac>
     8ac:	83 32       	cpi	r24, 0x23	; 35
     8ae:	69 f4       	brne	.+26     	; 0x8ca <vfprintf+0xb4>
     8b0:	20 61       	ori	r18, 0x10	; 16
     8b2:	2c c0       	rjmp	.+88     	; 0x90c <vfprintf+0xf6>
     8b4:	8d 32       	cpi	r24, 0x2D	; 45
     8b6:	39 f0       	breq	.+14     	; 0x8c6 <vfprintf+0xb0>
     8b8:	80 33       	cpi	r24, 0x30	; 48
     8ba:	39 f4       	brne	.+14     	; 0x8ca <vfprintf+0xb4>
     8bc:	21 60       	ori	r18, 0x01	; 1
     8be:	26 c0       	rjmp	.+76     	; 0x90c <vfprintf+0xf6>
     8c0:	22 60       	ori	r18, 0x02	; 2
     8c2:	24 60       	ori	r18, 0x04	; 4
     8c4:	23 c0       	rjmp	.+70     	; 0x90c <vfprintf+0xf6>
     8c6:	28 60       	ori	r18, 0x08	; 8
     8c8:	21 c0       	rjmp	.+66     	; 0x90c <vfprintf+0xf6>
     8ca:	27 fd       	sbrc	r18, 7
     8cc:	27 c0       	rjmp	.+78     	; 0x91c <vfprintf+0x106>
     8ce:	30 ed       	ldi	r19, 0xD0	; 208
     8d0:	38 0f       	add	r19, r24
     8d2:	3a 30       	cpi	r19, 0x0A	; 10
     8d4:	78 f4       	brcc	.+30     	; 0x8f4 <vfprintf+0xde>
     8d6:	26 ff       	sbrs	r18, 6
     8d8:	06 c0       	rjmp	.+12     	; 0x8e6 <vfprintf+0xd0>
     8da:	fa e0       	ldi	r31, 0x0A	; 10
     8dc:	1f 9f       	mul	r17, r31
     8de:	30 0d       	add	r19, r0
     8e0:	11 24       	eor	r1, r1
     8e2:	13 2f       	mov	r17, r19
     8e4:	13 c0       	rjmp	.+38     	; 0x90c <vfprintf+0xf6>
     8e6:	4a e0       	ldi	r20, 0x0A	; 10
     8e8:	f4 9e       	mul	r15, r20
     8ea:	30 0d       	add	r19, r0
     8ec:	11 24       	eor	r1, r1
     8ee:	f3 2e       	mov	r15, r19
     8f0:	20 62       	ori	r18, 0x20	; 32
     8f2:	0c c0       	rjmp	.+24     	; 0x90c <vfprintf+0xf6>
     8f4:	8e 32       	cpi	r24, 0x2E	; 46
     8f6:	21 f4       	brne	.+8      	; 0x900 <vfprintf+0xea>
     8f8:	26 fd       	sbrc	r18, 6
     8fa:	d5 c2       	rjmp	.+1450   	; 0xea6 <vfprintf+0x690>
     8fc:	20 64       	ori	r18, 0x40	; 64
     8fe:	06 c0       	rjmp	.+12     	; 0x90c <vfprintf+0xf6>
     900:	8c 36       	cpi	r24, 0x6C	; 108
     902:	11 f4       	brne	.+4      	; 0x908 <vfprintf+0xf2>
     904:	20 68       	ori	r18, 0x80	; 128
     906:	02 c0       	rjmp	.+4      	; 0x90c <vfprintf+0xf6>
     908:	88 36       	cpi	r24, 0x68	; 104
     90a:	41 f4       	brne	.+16     	; 0x91c <vfprintf+0x106>
     90c:	f4 01       	movw	r30, r8
     90e:	93 fd       	sbrc	r25, 3
     910:	85 91       	lpm	r24, Z+
     912:	93 ff       	sbrs	r25, 3
     914:	81 91       	ld	r24, Z+
     916:	4f 01       	movw	r8, r30
     918:	81 11       	cpse	r24, r1
     91a:	c1 cf       	rjmp	.-126    	; 0x89e <vfprintf+0x88>
     91c:	9b eb       	ldi	r25, 0xBB	; 187
     91e:	98 0f       	add	r25, r24
     920:	93 30       	cpi	r25, 0x03	; 3
     922:	18 f4       	brcc	.+6      	; 0x92a <vfprintf+0x114>
     924:	20 61       	ori	r18, 0x10	; 16
     926:	80 5e       	subi	r24, 0xE0	; 224
     928:	06 c0       	rjmp	.+12     	; 0x936 <vfprintf+0x120>
     92a:	9b e9       	ldi	r25, 0x9B	; 155
     92c:	98 0f       	add	r25, r24
     92e:	93 30       	cpi	r25, 0x03	; 3
     930:	08 f0       	brcs	.+2      	; 0x934 <vfprintf+0x11e>
     932:	64 c1       	rjmp	.+712    	; 0xbfc <vfprintf+0x3e6>
     934:	2f 7e       	andi	r18, 0xEF	; 239
     936:	26 ff       	sbrs	r18, 6
     938:	16 e0       	ldi	r17, 0x06	; 6
     93a:	2f 73       	andi	r18, 0x3F	; 63
     93c:	32 2e       	mov	r3, r18
     93e:	85 36       	cpi	r24, 0x65	; 101
     940:	19 f4       	brne	.+6      	; 0x948 <vfprintf+0x132>
     942:	20 64       	ori	r18, 0x40	; 64
     944:	32 2e       	mov	r3, r18
     946:	08 c0       	rjmp	.+16     	; 0x958 <vfprintf+0x142>
     948:	86 36       	cpi	r24, 0x66	; 102
     94a:	21 f4       	brne	.+8      	; 0x954 <vfprintf+0x13e>
     94c:	f2 2f       	mov	r31, r18
     94e:	f0 68       	ori	r31, 0x80	; 128
     950:	3f 2e       	mov	r3, r31
     952:	02 c0       	rjmp	.+4      	; 0x958 <vfprintf+0x142>
     954:	11 11       	cpse	r17, r1
     956:	11 50       	subi	r17, 0x01	; 1
     958:	37 fe       	sbrs	r3, 7
     95a:	07 c0       	rjmp	.+14     	; 0x96a <vfprintf+0x154>
     95c:	1c 33       	cpi	r17, 0x3C	; 60
     95e:	50 f4       	brcc	.+20     	; 0x974 <vfprintf+0x15e>
     960:	ee 24       	eor	r14, r14
     962:	e3 94       	inc	r14
     964:	e1 0e       	add	r14, r17
     966:	27 e0       	ldi	r18, 0x07	; 7
     968:	0b c0       	rjmp	.+22     	; 0x980 <vfprintf+0x16a>
     96a:	18 30       	cpi	r17, 0x08	; 8
     96c:	38 f0       	brcs	.+14     	; 0x97c <vfprintf+0x166>
     96e:	27 e0       	ldi	r18, 0x07	; 7
     970:	17 e0       	ldi	r17, 0x07	; 7
     972:	05 c0       	rjmp	.+10     	; 0x97e <vfprintf+0x168>
     974:	27 e0       	ldi	r18, 0x07	; 7
     976:	4c e3       	ldi	r20, 0x3C	; 60
     978:	e4 2e       	mov	r14, r20
     97a:	02 c0       	rjmp	.+4      	; 0x980 <vfprintf+0x16a>
     97c:	21 2f       	mov	r18, r17
     97e:	e1 2c       	mov	r14, r1
     980:	52 01       	movw	r10, r4
     982:	44 e0       	ldi	r20, 0x04	; 4
     984:	a4 0e       	add	r10, r20
     986:	b1 1c       	adc	r11, r1
     988:	f2 01       	movw	r30, r4
     98a:	60 81       	ld	r22, Z
     98c:	71 81       	ldd	r23, Z+1	; 0x01
     98e:	82 81       	ldd	r24, Z+2	; 0x02
     990:	93 81       	ldd	r25, Z+3	; 0x03
     992:	0e 2d       	mov	r16, r14
     994:	a3 01       	movw	r20, r6
     996:	c7 d2       	rcall	.+1422   	; 0xf26 <__ftoa_engine>
     998:	2c 01       	movw	r4, r24
     99a:	09 81       	ldd	r16, Y+1	; 0x01
     99c:	00 ff       	sbrs	r16, 0
     99e:	02 c0       	rjmp	.+4      	; 0x9a4 <vfprintf+0x18e>
     9a0:	03 ff       	sbrs	r16, 3
     9a2:	07 c0       	rjmp	.+14     	; 0x9b2 <vfprintf+0x19c>
     9a4:	31 fc       	sbrc	r3, 1
     9a6:	08 c0       	rjmp	.+16     	; 0x9b8 <vfprintf+0x1a2>
     9a8:	32 fe       	sbrs	r3, 2
     9aa:	09 c0       	rjmp	.+18     	; 0x9be <vfprintf+0x1a8>
     9ac:	30 e2       	ldi	r19, 0x20	; 32
     9ae:	23 2e       	mov	r2, r19
     9b0:	07 c0       	rjmp	.+14     	; 0x9c0 <vfprintf+0x1aa>
     9b2:	2d e2       	ldi	r18, 0x2D	; 45
     9b4:	22 2e       	mov	r2, r18
     9b6:	04 c0       	rjmp	.+8      	; 0x9c0 <vfprintf+0x1aa>
     9b8:	9b e2       	ldi	r25, 0x2B	; 43
     9ba:	29 2e       	mov	r2, r25
     9bc:	01 c0       	rjmp	.+2      	; 0x9c0 <vfprintf+0x1aa>
     9be:	21 2c       	mov	r2, r1
     9c0:	80 2f       	mov	r24, r16
     9c2:	8c 70       	andi	r24, 0x0C	; 12
     9c4:	19 f0       	breq	.+6      	; 0x9cc <vfprintf+0x1b6>
     9c6:	21 10       	cpse	r2, r1
     9c8:	51 c2       	rjmp	.+1186   	; 0xe6c <vfprintf+0x656>
     9ca:	8d c2       	rjmp	.+1306   	; 0xee6 <vfprintf+0x6d0>
     9cc:	37 fe       	sbrs	r3, 7
     9ce:	0f c0       	rjmp	.+30     	; 0x9ee <vfprintf+0x1d8>
     9d0:	e4 0c       	add	r14, r4
     9d2:	04 ff       	sbrs	r16, 4
     9d4:	04 c0       	rjmp	.+8      	; 0x9de <vfprintf+0x1c8>
     9d6:	8a 81       	ldd	r24, Y+2	; 0x02
     9d8:	81 33       	cpi	r24, 0x31	; 49
     9da:	09 f4       	brne	.+2      	; 0x9de <vfprintf+0x1c8>
     9dc:	ea 94       	dec	r14
     9de:	1e 14       	cp	r1, r14
     9e0:	74 f5       	brge	.+92     	; 0xa3e <vfprintf+0x228>
     9e2:	f8 e0       	ldi	r31, 0x08	; 8
     9e4:	fe 15       	cp	r31, r14
     9e6:	78 f5       	brcc	.+94     	; 0xa46 <vfprintf+0x230>
     9e8:	88 e0       	ldi	r24, 0x08	; 8
     9ea:	e8 2e       	mov	r14, r24
     9ec:	2c c0       	rjmp	.+88     	; 0xa46 <vfprintf+0x230>
     9ee:	36 fc       	sbrc	r3, 6
     9f0:	2a c0       	rjmp	.+84     	; 0xa46 <vfprintf+0x230>
     9f2:	81 2f       	mov	r24, r17
     9f4:	90 e0       	ldi	r25, 0x00	; 0
     9f6:	84 15       	cp	r24, r4
     9f8:	95 05       	cpc	r25, r5
     9fa:	9c f0       	brlt	.+38     	; 0xa22 <vfprintf+0x20c>
     9fc:	2c ef       	ldi	r18, 0xFC	; 252
     9fe:	42 16       	cp	r4, r18
     a00:	2f ef       	ldi	r18, 0xFF	; 255
     a02:	52 06       	cpc	r5, r18
     a04:	74 f0       	brlt	.+28     	; 0xa22 <vfprintf+0x20c>
     a06:	43 2d       	mov	r20, r3
     a08:	40 68       	ori	r20, 0x80	; 128
     a0a:	34 2e       	mov	r3, r20
     a0c:	0a c0       	rjmp	.+20     	; 0xa22 <vfprintf+0x20c>
     a0e:	e2 e0       	ldi	r30, 0x02	; 2
     a10:	f0 e0       	ldi	r31, 0x00	; 0
     a12:	ec 0f       	add	r30, r28
     a14:	fd 1f       	adc	r31, r29
     a16:	e1 0f       	add	r30, r17
     a18:	f1 1d       	adc	r31, r1
     a1a:	80 81       	ld	r24, Z
     a1c:	80 33       	cpi	r24, 0x30	; 48
     a1e:	19 f4       	brne	.+6      	; 0xa26 <vfprintf+0x210>
     a20:	11 50       	subi	r17, 0x01	; 1
     a22:	11 11       	cpse	r17, r1
     a24:	f4 cf       	rjmp	.-24     	; 0xa0e <vfprintf+0x1f8>
     a26:	37 fe       	sbrs	r3, 7
     a28:	0e c0       	rjmp	.+28     	; 0xa46 <vfprintf+0x230>
     a2a:	ee 24       	eor	r14, r14
     a2c:	e3 94       	inc	r14
     a2e:	e1 0e       	add	r14, r17
     a30:	81 2f       	mov	r24, r17
     a32:	90 e0       	ldi	r25, 0x00	; 0
     a34:	48 16       	cp	r4, r24
     a36:	59 06       	cpc	r5, r25
     a38:	2c f4       	brge	.+10     	; 0xa44 <vfprintf+0x22e>
     a3a:	14 19       	sub	r17, r4
     a3c:	04 c0       	rjmp	.+8      	; 0xa46 <vfprintf+0x230>
     a3e:	ee 24       	eor	r14, r14
     a40:	e3 94       	inc	r14
     a42:	01 c0       	rjmp	.+2      	; 0xa46 <vfprintf+0x230>
     a44:	10 e0       	ldi	r17, 0x00	; 0
     a46:	37 fe       	sbrs	r3, 7
     a48:	06 c0       	rjmp	.+12     	; 0xa56 <vfprintf+0x240>
     a4a:	14 14       	cp	r1, r4
     a4c:	15 04       	cpc	r1, r5
     a4e:	34 f4       	brge	.+12     	; 0xa5c <vfprintf+0x246>
     a50:	c2 01       	movw	r24, r4
     a52:	01 96       	adiw	r24, 0x01	; 1
     a54:	05 c0       	rjmp	.+10     	; 0xa60 <vfprintf+0x24a>
     a56:	85 e0       	ldi	r24, 0x05	; 5
     a58:	90 e0       	ldi	r25, 0x00	; 0
     a5a:	02 c0       	rjmp	.+4      	; 0xa60 <vfprintf+0x24a>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	90 e0       	ldi	r25, 0x00	; 0
     a60:	21 10       	cpse	r2, r1
     a62:	01 96       	adiw	r24, 0x01	; 1
     a64:	11 23       	and	r17, r17
     a66:	31 f0       	breq	.+12     	; 0xa74 <vfprintf+0x25e>
     a68:	21 2f       	mov	r18, r17
     a6a:	30 e0       	ldi	r19, 0x00	; 0
     a6c:	2f 5f       	subi	r18, 0xFF	; 255
     a6e:	3f 4f       	sbci	r19, 0xFF	; 255
     a70:	82 0f       	add	r24, r18
     a72:	93 1f       	adc	r25, r19
     a74:	2f 2d       	mov	r18, r15
     a76:	30 e0       	ldi	r19, 0x00	; 0
     a78:	82 17       	cp	r24, r18
     a7a:	93 07       	cpc	r25, r19
     a7c:	14 f4       	brge	.+4      	; 0xa82 <vfprintf+0x26c>
     a7e:	f8 1a       	sub	r15, r24
     a80:	01 c0       	rjmp	.+2      	; 0xa84 <vfprintf+0x26e>
     a82:	f1 2c       	mov	r15, r1
     a84:	83 2d       	mov	r24, r3
     a86:	89 70       	andi	r24, 0x09	; 9
     a88:	41 f4       	brne	.+16     	; 0xa9a <vfprintf+0x284>
     a8a:	ff 20       	and	r15, r15
     a8c:	31 f0       	breq	.+12     	; 0xa9a <vfprintf+0x284>
     a8e:	b6 01       	movw	r22, r12
     a90:	80 e2       	ldi	r24, 0x20	; 32
     a92:	90 e0       	ldi	r25, 0x00	; 0
     a94:	3f d3       	rcall	.+1662   	; 0x1114 <fputc>
     a96:	fa 94       	dec	r15
     a98:	f8 cf       	rjmp	.-16     	; 0xa8a <vfprintf+0x274>
     a9a:	22 20       	and	r2, r2
     a9c:	21 f0       	breq	.+8      	; 0xaa6 <vfprintf+0x290>
     a9e:	b6 01       	movw	r22, r12
     aa0:	82 2d       	mov	r24, r2
     aa2:	90 e0       	ldi	r25, 0x00	; 0
     aa4:	37 d3       	rcall	.+1646   	; 0x1114 <fputc>
     aa6:	33 fc       	sbrc	r3, 3
     aa8:	08 c0       	rjmp	.+16     	; 0xaba <vfprintf+0x2a4>
     aaa:	ff 20       	and	r15, r15
     aac:	31 f0       	breq	.+12     	; 0xaba <vfprintf+0x2a4>
     aae:	b6 01       	movw	r22, r12
     ab0:	80 e3       	ldi	r24, 0x30	; 48
     ab2:	90 e0       	ldi	r25, 0x00	; 0
     ab4:	2f d3       	rcall	.+1630   	; 0x1114 <fputc>
     ab6:	fa 94       	dec	r15
     ab8:	f8 cf       	rjmp	.-16     	; 0xaaa <vfprintf+0x294>
     aba:	37 fe       	sbrs	r3, 7
     abc:	58 c0       	rjmp	.+176    	; 0xb6e <vfprintf+0x358>
     abe:	94 2d       	mov	r25, r4
     ac0:	85 2d       	mov	r24, r5
     ac2:	57 fe       	sbrs	r5, 7
     ac4:	02 c0       	rjmp	.+4      	; 0xaca <vfprintf+0x2b4>
     ac6:	90 e0       	ldi	r25, 0x00	; 0
     ac8:	80 e0       	ldi	r24, 0x00	; 0
     aca:	29 2e       	mov	r2, r25
     acc:	38 2e       	mov	r3, r24
     ace:	20 e0       	ldi	r18, 0x00	; 0
     ad0:	30 e0       	ldi	r19, 0x00	; 0
     ad2:	a2 01       	movw	r20, r4
     ad4:	4e 19       	sub	r20, r14
     ad6:	51 09       	sbc	r21, r1
     ad8:	5d 87       	std	Y+13, r21	; 0x0d
     ada:	4c 87       	std	Y+12, r20	; 0x0c
     adc:	a2 01       	movw	r20, r4
     ade:	42 19       	sub	r20, r2
     ae0:	53 09       	sbc	r21, r3
     ae2:	5f 87       	std	Y+15, r21	; 0x0f
     ae4:	4e 87       	std	Y+14, r20	; 0x0e
     ae6:	61 2f       	mov	r22, r17
     ae8:	70 e0       	ldi	r23, 0x00	; 0
     aea:	44 27       	eor	r20, r20
     aec:	55 27       	eor	r21, r21
     aee:	46 1b       	sub	r20, r22
     af0:	57 0b       	sbc	r21, r23
     af2:	59 8b       	std	Y+17, r21	; 0x11
     af4:	48 8b       	std	Y+16, r20	; 0x10
     af6:	5f ef       	ldi	r21, 0xFF	; 255
     af8:	25 16       	cp	r2, r21
     afa:	35 06       	cpc	r3, r21
     afc:	41 f4       	brne	.+16     	; 0xb0e <vfprintf+0x2f8>
     afe:	b6 01       	movw	r22, r12
     b00:	8e e2       	ldi	r24, 0x2E	; 46
     b02:	90 e0       	ldi	r25, 0x00	; 0
     b04:	2a 8b       	std	Y+18, r18	; 0x12
     b06:	3b 8b       	std	Y+19, r19	; 0x13
     b08:	05 d3       	rcall	.+1546   	; 0x1114 <fputc>
     b0a:	3b 89       	ldd	r19, Y+19	; 0x13
     b0c:	2a 89       	ldd	r18, Y+18	; 0x12
     b0e:	42 14       	cp	r4, r2
     b10:	53 04       	cpc	r5, r3
     b12:	6c f0       	brlt	.+26     	; 0xb2e <vfprintf+0x318>
     b14:	4c 85       	ldd	r20, Y+12	; 0x0c
     b16:	5d 85       	ldd	r21, Y+13	; 0x0d
     b18:	42 15       	cp	r20, r2
     b1a:	53 05       	cpc	r21, r3
     b1c:	44 f4       	brge	.+16     	; 0xb2e <vfprintf+0x318>
     b1e:	ee 85       	ldd	r30, Y+14	; 0x0e
     b20:	ff 85       	ldd	r31, Y+15	; 0x0f
     b22:	e2 0f       	add	r30, r18
     b24:	f3 1f       	adc	r31, r19
     b26:	e6 0d       	add	r30, r6
     b28:	f7 1d       	adc	r31, r7
     b2a:	81 81       	ldd	r24, Z+1	; 0x01
     b2c:	01 c0       	rjmp	.+2      	; 0xb30 <vfprintf+0x31a>
     b2e:	80 e3       	ldi	r24, 0x30	; 48
     b30:	51 e0       	ldi	r21, 0x01	; 1
     b32:	25 1a       	sub	r2, r21
     b34:	31 08       	sbc	r3, r1
     b36:	2f 5f       	subi	r18, 0xFF	; 255
     b38:	3f 4f       	sbci	r19, 0xFF	; 255
     b3a:	48 89       	ldd	r20, Y+16	; 0x10
     b3c:	59 89       	ldd	r21, Y+17	; 0x11
     b3e:	24 16       	cp	r2, r20
     b40:	35 06       	cpc	r3, r21
     b42:	44 f0       	brlt	.+16     	; 0xb54 <vfprintf+0x33e>
     b44:	b6 01       	movw	r22, r12
     b46:	90 e0       	ldi	r25, 0x00	; 0
     b48:	2a 8b       	std	Y+18, r18	; 0x12
     b4a:	3b 8b       	std	Y+19, r19	; 0x13
     b4c:	e3 d2       	rcall	.+1478   	; 0x1114 <fputc>
     b4e:	2a 89       	ldd	r18, Y+18	; 0x12
     b50:	3b 89       	ldd	r19, Y+19	; 0x13
     b52:	d1 cf       	rjmp	.-94     	; 0xaf6 <vfprintf+0x2e0>
     b54:	24 14       	cp	r2, r4
     b56:	35 04       	cpc	r3, r5
     b58:	39 f4       	brne	.+14     	; 0xb68 <vfprintf+0x352>
     b5a:	9a 81       	ldd	r25, Y+2	; 0x02
     b5c:	96 33       	cpi	r25, 0x36	; 54
     b5e:	18 f4       	brcc	.+6      	; 0xb66 <vfprintf+0x350>
     b60:	95 33       	cpi	r25, 0x35	; 53
     b62:	11 f4       	brne	.+4      	; 0xb68 <vfprintf+0x352>
     b64:	04 ff       	sbrs	r16, 4
     b66:	81 e3       	ldi	r24, 0x31	; 49
     b68:	b6 01       	movw	r22, r12
     b6a:	90 e0       	ldi	r25, 0x00	; 0
     b6c:	45 c0       	rjmp	.+138    	; 0xbf8 <vfprintf+0x3e2>
     b6e:	8a 81       	ldd	r24, Y+2	; 0x02
     b70:	81 33       	cpi	r24, 0x31	; 49
     b72:	09 f0       	breq	.+2      	; 0xb76 <vfprintf+0x360>
     b74:	0f 7e       	andi	r16, 0xEF	; 239
     b76:	b6 01       	movw	r22, r12
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	cc d2       	rcall	.+1432   	; 0x1114 <fputc>
     b7c:	11 11       	cpse	r17, r1
     b7e:	05 c0       	rjmp	.+10     	; 0xb8a <vfprintf+0x374>
     b80:	34 fc       	sbrc	r3, 4
     b82:	16 c0       	rjmp	.+44     	; 0xbb0 <vfprintf+0x39a>
     b84:	85 e6       	ldi	r24, 0x65	; 101
     b86:	90 e0       	ldi	r25, 0x00	; 0
     b88:	15 c0       	rjmp	.+42     	; 0xbb4 <vfprintf+0x39e>
     b8a:	b6 01       	movw	r22, r12
     b8c:	8e e2       	ldi	r24, 0x2E	; 46
     b8e:	90 e0       	ldi	r25, 0x00	; 0
     b90:	c1 d2       	rcall	.+1410   	; 0x1114 <fputc>
     b92:	82 e0       	ldi	r24, 0x02	; 2
     b94:	ee 24       	eor	r14, r14
     b96:	e3 94       	inc	r14
     b98:	e8 0e       	add	r14, r24
     b9a:	f3 01       	movw	r30, r6
     b9c:	e8 0f       	add	r30, r24
     b9e:	f1 1d       	adc	r31, r1
     ba0:	80 81       	ld	r24, Z
     ba2:	b6 01       	movw	r22, r12
     ba4:	90 e0       	ldi	r25, 0x00	; 0
     ba6:	b6 d2       	rcall	.+1388   	; 0x1114 <fputc>
     ba8:	11 50       	subi	r17, 0x01	; 1
     baa:	8e 2d       	mov	r24, r14
     bac:	99 f7       	brne	.-26     	; 0xb94 <vfprintf+0x37e>
     bae:	e8 cf       	rjmp	.-48     	; 0xb80 <vfprintf+0x36a>
     bb0:	85 e4       	ldi	r24, 0x45	; 69
     bb2:	90 e0       	ldi	r25, 0x00	; 0
     bb4:	b6 01       	movw	r22, r12
     bb6:	ae d2       	rcall	.+1372   	; 0x1114 <fputc>
     bb8:	57 fc       	sbrc	r5, 7
     bba:	05 c0       	rjmp	.+10     	; 0xbc6 <vfprintf+0x3b0>
     bbc:	41 14       	cp	r4, r1
     bbe:	51 04       	cpc	r5, r1
     bc0:	39 f4       	brne	.+14     	; 0xbd0 <vfprintf+0x3ba>
     bc2:	04 ff       	sbrs	r16, 4
     bc4:	05 c0       	rjmp	.+10     	; 0xbd0 <vfprintf+0x3ba>
     bc6:	51 94       	neg	r5
     bc8:	41 94       	neg	r4
     bca:	51 08       	sbc	r5, r1
     bcc:	8d e2       	ldi	r24, 0x2D	; 45
     bce:	01 c0       	rjmp	.+2      	; 0xbd2 <vfprintf+0x3bc>
     bd0:	8b e2       	ldi	r24, 0x2B	; 43
     bd2:	b6 01       	movw	r22, r12
     bd4:	90 e0       	ldi	r25, 0x00	; 0
     bd6:	9e d2       	rcall	.+1340   	; 0x1114 <fputc>
     bd8:	80 e3       	ldi	r24, 0x30	; 48
     bda:	9a e0       	ldi	r25, 0x0A	; 10
     bdc:	49 16       	cp	r4, r25
     bde:	51 04       	cpc	r5, r1
     be0:	2c f0       	brlt	.+10     	; 0xbec <vfprintf+0x3d6>
     be2:	8f 5f       	subi	r24, 0xFF	; 255
     be4:	5a e0       	ldi	r21, 0x0A	; 10
     be6:	45 1a       	sub	r4, r21
     be8:	51 08       	sbc	r5, r1
     bea:	f7 cf       	rjmp	.-18     	; 0xbda <vfprintf+0x3c4>
     bec:	b6 01       	movw	r22, r12
     bee:	90 e0       	ldi	r25, 0x00	; 0
     bf0:	91 d2       	rcall	.+1314   	; 0x1114 <fputc>
     bf2:	b6 01       	movw	r22, r12
     bf4:	c2 01       	movw	r24, r4
     bf6:	c0 96       	adiw	r24, 0x30	; 48
     bf8:	8d d2       	rcall	.+1306   	; 0x1114 <fputc>
     bfa:	4c c1       	rjmp	.+664    	; 0xe94 <vfprintf+0x67e>
     bfc:	83 36       	cpi	r24, 0x63	; 99
     bfe:	31 f0       	breq	.+12     	; 0xc0c <vfprintf+0x3f6>
     c00:	83 37       	cpi	r24, 0x73	; 115
     c02:	79 f0       	breq	.+30     	; 0xc22 <vfprintf+0x40c>
     c04:	83 35       	cpi	r24, 0x53	; 83
     c06:	09 f0       	breq	.+2      	; 0xc0a <vfprintf+0x3f4>
     c08:	54 c0       	rjmp	.+168    	; 0xcb2 <vfprintf+0x49c>
     c0a:	20 c0       	rjmp	.+64     	; 0xc4c <vfprintf+0x436>
     c0c:	52 01       	movw	r10, r4
     c0e:	e2 e0       	ldi	r30, 0x02	; 2
     c10:	ae 0e       	add	r10, r30
     c12:	b1 1c       	adc	r11, r1
     c14:	f2 01       	movw	r30, r4
     c16:	80 81       	ld	r24, Z
     c18:	89 83       	std	Y+1, r24	; 0x01
     c1a:	01 e0       	ldi	r16, 0x01	; 1
     c1c:	10 e0       	ldi	r17, 0x00	; 0
     c1e:	23 01       	movw	r4, r6
     c20:	13 c0       	rjmp	.+38     	; 0xc48 <vfprintf+0x432>
     c22:	52 01       	movw	r10, r4
     c24:	f2 e0       	ldi	r31, 0x02	; 2
     c26:	af 0e       	add	r10, r31
     c28:	b1 1c       	adc	r11, r1
     c2a:	f2 01       	movw	r30, r4
     c2c:	40 80       	ld	r4, Z
     c2e:	51 80       	ldd	r5, Z+1	; 0x01
     c30:	26 ff       	sbrs	r18, 6
     c32:	03 c0       	rjmp	.+6      	; 0xc3a <vfprintf+0x424>
     c34:	61 2f       	mov	r22, r17
     c36:	70 e0       	ldi	r23, 0x00	; 0
     c38:	02 c0       	rjmp	.+4      	; 0xc3e <vfprintf+0x428>
     c3a:	6f ef       	ldi	r22, 0xFF	; 255
     c3c:	7f ef       	ldi	r23, 0xFF	; 255
     c3e:	c2 01       	movw	r24, r4
     c40:	2a 8b       	std	Y+18, r18	; 0x12
     c42:	5d d2       	rcall	.+1210   	; 0x10fe <strnlen>
     c44:	8c 01       	movw	r16, r24
     c46:	2a 89       	ldd	r18, Y+18	; 0x12
     c48:	2f 77       	andi	r18, 0x7F	; 127
     c4a:	14 c0       	rjmp	.+40     	; 0xc74 <vfprintf+0x45e>
     c4c:	52 01       	movw	r10, r4
     c4e:	f2 e0       	ldi	r31, 0x02	; 2
     c50:	af 0e       	add	r10, r31
     c52:	b1 1c       	adc	r11, r1
     c54:	f2 01       	movw	r30, r4
     c56:	40 80       	ld	r4, Z
     c58:	51 80       	ldd	r5, Z+1	; 0x01
     c5a:	26 ff       	sbrs	r18, 6
     c5c:	03 c0       	rjmp	.+6      	; 0xc64 <vfprintf+0x44e>
     c5e:	61 2f       	mov	r22, r17
     c60:	70 e0       	ldi	r23, 0x00	; 0
     c62:	02 c0       	rjmp	.+4      	; 0xc68 <vfprintf+0x452>
     c64:	6f ef       	ldi	r22, 0xFF	; 255
     c66:	7f ef       	ldi	r23, 0xFF	; 255
     c68:	c2 01       	movw	r24, r4
     c6a:	2a 8b       	std	Y+18, r18	; 0x12
     c6c:	34 d2       	rcall	.+1128   	; 0x10d6 <strnlen_P>
     c6e:	8c 01       	movw	r16, r24
     c70:	2a 89       	ldd	r18, Y+18	; 0x12
     c72:	20 68       	ori	r18, 0x80	; 128
     c74:	32 2e       	mov	r3, r18
     c76:	23 fd       	sbrc	r18, 3
     c78:	18 c0       	rjmp	.+48     	; 0xcaa <vfprintf+0x494>
     c7a:	8f 2d       	mov	r24, r15
     c7c:	90 e0       	ldi	r25, 0x00	; 0
     c7e:	08 17       	cp	r16, r24
     c80:	19 07       	cpc	r17, r25
     c82:	98 f4       	brcc	.+38     	; 0xcaa <vfprintf+0x494>
     c84:	b6 01       	movw	r22, r12
     c86:	80 e2       	ldi	r24, 0x20	; 32
     c88:	90 e0       	ldi	r25, 0x00	; 0
     c8a:	44 d2       	rcall	.+1160   	; 0x1114 <fputc>
     c8c:	fa 94       	dec	r15
     c8e:	f5 cf       	rjmp	.-22     	; 0xc7a <vfprintf+0x464>
     c90:	f2 01       	movw	r30, r4
     c92:	37 fc       	sbrc	r3, 7
     c94:	85 91       	lpm	r24, Z+
     c96:	37 fe       	sbrs	r3, 7
     c98:	81 91       	ld	r24, Z+
     c9a:	2f 01       	movw	r4, r30
     c9c:	b6 01       	movw	r22, r12
     c9e:	90 e0       	ldi	r25, 0x00	; 0
     ca0:	39 d2       	rcall	.+1138   	; 0x1114 <fputc>
     ca2:	f1 10       	cpse	r15, r1
     ca4:	fa 94       	dec	r15
     ca6:	01 50       	subi	r16, 0x01	; 1
     ca8:	11 09       	sbc	r17, r1
     caa:	01 15       	cp	r16, r1
     cac:	11 05       	cpc	r17, r1
     cae:	81 f7       	brne	.-32     	; 0xc90 <vfprintf+0x47a>
     cb0:	f1 c0       	rjmp	.+482    	; 0xe94 <vfprintf+0x67e>
     cb2:	84 36       	cpi	r24, 0x64	; 100
     cb4:	11 f0       	breq	.+4      	; 0xcba <vfprintf+0x4a4>
     cb6:	89 36       	cpi	r24, 0x69	; 105
     cb8:	51 f5       	brne	.+84     	; 0xd0e <vfprintf+0x4f8>
     cba:	52 01       	movw	r10, r4
     cbc:	27 ff       	sbrs	r18, 7
     cbe:	09 c0       	rjmp	.+18     	; 0xcd2 <vfprintf+0x4bc>
     cc0:	f4 e0       	ldi	r31, 0x04	; 4
     cc2:	af 0e       	add	r10, r31
     cc4:	b1 1c       	adc	r11, r1
     cc6:	f2 01       	movw	r30, r4
     cc8:	60 81       	ld	r22, Z
     cca:	71 81       	ldd	r23, Z+1	; 0x01
     ccc:	82 81       	ldd	r24, Z+2	; 0x02
     cce:	93 81       	ldd	r25, Z+3	; 0x03
     cd0:	0a c0       	rjmp	.+20     	; 0xce6 <vfprintf+0x4d0>
     cd2:	f2 e0       	ldi	r31, 0x02	; 2
     cd4:	af 0e       	add	r10, r31
     cd6:	b1 1c       	adc	r11, r1
     cd8:	f2 01       	movw	r30, r4
     cda:	60 81       	ld	r22, Z
     cdc:	71 81       	ldd	r23, Z+1	; 0x01
     cde:	07 2e       	mov	r0, r23
     ce0:	00 0c       	add	r0, r0
     ce2:	88 0b       	sbc	r24, r24
     ce4:	99 0b       	sbc	r25, r25
     ce6:	2f 76       	andi	r18, 0x6F	; 111
     ce8:	32 2e       	mov	r3, r18
     cea:	97 ff       	sbrs	r25, 7
     cec:	09 c0       	rjmp	.+18     	; 0xd00 <vfprintf+0x4ea>
     cee:	90 95       	com	r25
     cf0:	80 95       	com	r24
     cf2:	70 95       	com	r23
     cf4:	61 95       	neg	r22
     cf6:	7f 4f       	sbci	r23, 0xFF	; 255
     cf8:	8f 4f       	sbci	r24, 0xFF	; 255
     cfa:	9f 4f       	sbci	r25, 0xFF	; 255
     cfc:	20 68       	ori	r18, 0x80	; 128
     cfe:	32 2e       	mov	r3, r18
     d00:	2a e0       	ldi	r18, 0x0A	; 10
     d02:	30 e0       	ldi	r19, 0x00	; 0
     d04:	a3 01       	movw	r20, r6
     d06:	3e d2       	rcall	.+1148   	; 0x1184 <__ultoa_invert>
     d08:	e8 2e       	mov	r14, r24
     d0a:	e6 18       	sub	r14, r6
     d0c:	3e c0       	rjmp	.+124    	; 0xd8a <vfprintf+0x574>
     d0e:	02 2f       	mov	r16, r18
     d10:	85 37       	cpi	r24, 0x75	; 117
     d12:	21 f4       	brne	.+8      	; 0xd1c <vfprintf+0x506>
     d14:	0f 7e       	andi	r16, 0xEF	; 239
     d16:	2a e0       	ldi	r18, 0x0A	; 10
     d18:	30 e0       	ldi	r19, 0x00	; 0
     d1a:	1d c0       	rjmp	.+58     	; 0xd56 <vfprintf+0x540>
     d1c:	09 7f       	andi	r16, 0xF9	; 249
     d1e:	8f 36       	cpi	r24, 0x6F	; 111
     d20:	91 f0       	breq	.+36     	; 0xd46 <vfprintf+0x530>
     d22:	18 f4       	brcc	.+6      	; 0xd2a <vfprintf+0x514>
     d24:	88 35       	cpi	r24, 0x58	; 88
     d26:	59 f0       	breq	.+22     	; 0xd3e <vfprintf+0x528>
     d28:	be c0       	rjmp	.+380    	; 0xea6 <vfprintf+0x690>
     d2a:	80 37       	cpi	r24, 0x70	; 112
     d2c:	19 f0       	breq	.+6      	; 0xd34 <vfprintf+0x51e>
     d2e:	88 37       	cpi	r24, 0x78	; 120
     d30:	11 f0       	breq	.+4      	; 0xd36 <vfprintf+0x520>
     d32:	b9 c0       	rjmp	.+370    	; 0xea6 <vfprintf+0x690>
     d34:	00 61       	ori	r16, 0x10	; 16
     d36:	04 ff       	sbrs	r16, 4
     d38:	09 c0       	rjmp	.+18     	; 0xd4c <vfprintf+0x536>
     d3a:	04 60       	ori	r16, 0x04	; 4
     d3c:	07 c0       	rjmp	.+14     	; 0xd4c <vfprintf+0x536>
     d3e:	24 ff       	sbrs	r18, 4
     d40:	08 c0       	rjmp	.+16     	; 0xd52 <vfprintf+0x53c>
     d42:	06 60       	ori	r16, 0x06	; 6
     d44:	06 c0       	rjmp	.+12     	; 0xd52 <vfprintf+0x53c>
     d46:	28 e0       	ldi	r18, 0x08	; 8
     d48:	30 e0       	ldi	r19, 0x00	; 0
     d4a:	05 c0       	rjmp	.+10     	; 0xd56 <vfprintf+0x540>
     d4c:	20 e1       	ldi	r18, 0x10	; 16
     d4e:	30 e0       	ldi	r19, 0x00	; 0
     d50:	02 c0       	rjmp	.+4      	; 0xd56 <vfprintf+0x540>
     d52:	20 e1       	ldi	r18, 0x10	; 16
     d54:	32 e0       	ldi	r19, 0x02	; 2
     d56:	52 01       	movw	r10, r4
     d58:	07 ff       	sbrs	r16, 7
     d5a:	09 c0       	rjmp	.+18     	; 0xd6e <vfprintf+0x558>
     d5c:	f4 e0       	ldi	r31, 0x04	; 4
     d5e:	af 0e       	add	r10, r31
     d60:	b1 1c       	adc	r11, r1
     d62:	f2 01       	movw	r30, r4
     d64:	60 81       	ld	r22, Z
     d66:	71 81       	ldd	r23, Z+1	; 0x01
     d68:	82 81       	ldd	r24, Z+2	; 0x02
     d6a:	93 81       	ldd	r25, Z+3	; 0x03
     d6c:	08 c0       	rjmp	.+16     	; 0xd7e <vfprintf+0x568>
     d6e:	f2 e0       	ldi	r31, 0x02	; 2
     d70:	af 0e       	add	r10, r31
     d72:	b1 1c       	adc	r11, r1
     d74:	f2 01       	movw	r30, r4
     d76:	60 81       	ld	r22, Z
     d78:	71 81       	ldd	r23, Z+1	; 0x01
     d7a:	80 e0       	ldi	r24, 0x00	; 0
     d7c:	90 e0       	ldi	r25, 0x00	; 0
     d7e:	a3 01       	movw	r20, r6
     d80:	01 d2       	rcall	.+1026   	; 0x1184 <__ultoa_invert>
     d82:	e8 2e       	mov	r14, r24
     d84:	e6 18       	sub	r14, r6
     d86:	0f 77       	andi	r16, 0x7F	; 127
     d88:	30 2e       	mov	r3, r16
     d8a:	36 fe       	sbrs	r3, 6
     d8c:	0b c0       	rjmp	.+22     	; 0xda4 <vfprintf+0x58e>
     d8e:	33 2d       	mov	r19, r3
     d90:	3e 7f       	andi	r19, 0xFE	; 254
     d92:	e1 16       	cp	r14, r17
     d94:	50 f4       	brcc	.+20     	; 0xdaa <vfprintf+0x594>
     d96:	34 fe       	sbrs	r3, 4
     d98:	0a c0       	rjmp	.+20     	; 0xdae <vfprintf+0x598>
     d9a:	32 fc       	sbrc	r3, 2
     d9c:	08 c0       	rjmp	.+16     	; 0xdae <vfprintf+0x598>
     d9e:	33 2d       	mov	r19, r3
     da0:	3e 7e       	andi	r19, 0xEE	; 238
     da2:	05 c0       	rjmp	.+10     	; 0xdae <vfprintf+0x598>
     da4:	0e 2d       	mov	r16, r14
     da6:	33 2d       	mov	r19, r3
     da8:	03 c0       	rjmp	.+6      	; 0xdb0 <vfprintf+0x59a>
     daa:	0e 2d       	mov	r16, r14
     dac:	01 c0       	rjmp	.+2      	; 0xdb0 <vfprintf+0x59a>
     dae:	01 2f       	mov	r16, r17
     db0:	34 ff       	sbrs	r19, 4
     db2:	0c c0       	rjmp	.+24     	; 0xdcc <vfprintf+0x5b6>
     db4:	fe 01       	movw	r30, r28
     db6:	ee 0d       	add	r30, r14
     db8:	f1 1d       	adc	r31, r1
     dba:	80 81       	ld	r24, Z
     dbc:	80 33       	cpi	r24, 0x30	; 48
     dbe:	11 f4       	brne	.+4      	; 0xdc4 <vfprintf+0x5ae>
     dc0:	39 7e       	andi	r19, 0xE9	; 233
     dc2:	08 c0       	rjmp	.+16     	; 0xdd4 <vfprintf+0x5be>
     dc4:	32 ff       	sbrs	r19, 2
     dc6:	05 c0       	rjmp	.+10     	; 0xdd2 <vfprintf+0x5bc>
     dc8:	0e 5f       	subi	r16, 0xFE	; 254
     dca:	04 c0       	rjmp	.+8      	; 0xdd4 <vfprintf+0x5be>
     dcc:	83 2f       	mov	r24, r19
     dce:	86 78       	andi	r24, 0x86	; 134
     dd0:	09 f0       	breq	.+2      	; 0xdd4 <vfprintf+0x5be>
     dd2:	0f 5f       	subi	r16, 0xFF	; 255
     dd4:	33 fd       	sbrc	r19, 3
     dd6:	12 c0       	rjmp	.+36     	; 0xdfc <vfprintf+0x5e6>
     dd8:	30 ff       	sbrs	r19, 0
     dda:	06 c0       	rjmp	.+12     	; 0xde8 <vfprintf+0x5d2>
     ddc:	1e 2d       	mov	r17, r14
     dde:	0f 15       	cp	r16, r15
     de0:	18 f4       	brcc	.+6      	; 0xde8 <vfprintf+0x5d2>
     de2:	1f 0d       	add	r17, r15
     de4:	10 1b       	sub	r17, r16
     de6:	0f 2d       	mov	r16, r15
     de8:	0f 15       	cp	r16, r15
     dea:	60 f4       	brcc	.+24     	; 0xe04 <vfprintf+0x5ee>
     dec:	b6 01       	movw	r22, r12
     dee:	80 e2       	ldi	r24, 0x20	; 32
     df0:	90 e0       	ldi	r25, 0x00	; 0
     df2:	3b 8b       	std	Y+19, r19	; 0x13
     df4:	8f d1       	rcall	.+798    	; 0x1114 <fputc>
     df6:	0f 5f       	subi	r16, 0xFF	; 255
     df8:	3b 89       	ldd	r19, Y+19	; 0x13
     dfa:	f6 cf       	rjmp	.-20     	; 0xde8 <vfprintf+0x5d2>
     dfc:	0f 15       	cp	r16, r15
     dfe:	10 f4       	brcc	.+4      	; 0xe04 <vfprintf+0x5ee>
     e00:	f0 1a       	sub	r15, r16
     e02:	01 c0       	rjmp	.+2      	; 0xe06 <vfprintf+0x5f0>
     e04:	f1 2c       	mov	r15, r1
     e06:	34 ff       	sbrs	r19, 4
     e08:	11 c0       	rjmp	.+34     	; 0xe2c <vfprintf+0x616>
     e0a:	b6 01       	movw	r22, r12
     e0c:	80 e3       	ldi	r24, 0x30	; 48
     e0e:	90 e0       	ldi	r25, 0x00	; 0
     e10:	3b 8b       	std	Y+19, r19	; 0x13
     e12:	80 d1       	rcall	.+768    	; 0x1114 <fputc>
     e14:	3b 89       	ldd	r19, Y+19	; 0x13
     e16:	32 ff       	sbrs	r19, 2
     e18:	16 c0       	rjmp	.+44     	; 0xe46 <vfprintf+0x630>
     e1a:	31 fd       	sbrc	r19, 1
     e1c:	03 c0       	rjmp	.+6      	; 0xe24 <vfprintf+0x60e>
     e1e:	88 e7       	ldi	r24, 0x78	; 120
     e20:	90 e0       	ldi	r25, 0x00	; 0
     e22:	02 c0       	rjmp	.+4      	; 0xe28 <vfprintf+0x612>
     e24:	88 e5       	ldi	r24, 0x58	; 88
     e26:	90 e0       	ldi	r25, 0x00	; 0
     e28:	b6 01       	movw	r22, r12
     e2a:	0c c0       	rjmp	.+24     	; 0xe44 <vfprintf+0x62e>
     e2c:	83 2f       	mov	r24, r19
     e2e:	86 78       	andi	r24, 0x86	; 134
     e30:	51 f0       	breq	.+20     	; 0xe46 <vfprintf+0x630>
     e32:	31 ff       	sbrs	r19, 1
     e34:	02 c0       	rjmp	.+4      	; 0xe3a <vfprintf+0x624>
     e36:	8b e2       	ldi	r24, 0x2B	; 43
     e38:	01 c0       	rjmp	.+2      	; 0xe3c <vfprintf+0x626>
     e3a:	80 e2       	ldi	r24, 0x20	; 32
     e3c:	37 fd       	sbrc	r19, 7
     e3e:	8d e2       	ldi	r24, 0x2D	; 45
     e40:	b6 01       	movw	r22, r12
     e42:	90 e0       	ldi	r25, 0x00	; 0
     e44:	67 d1       	rcall	.+718    	; 0x1114 <fputc>
     e46:	e1 16       	cp	r14, r17
     e48:	30 f4       	brcc	.+12     	; 0xe56 <vfprintf+0x640>
     e4a:	b6 01       	movw	r22, r12
     e4c:	80 e3       	ldi	r24, 0x30	; 48
     e4e:	90 e0       	ldi	r25, 0x00	; 0
     e50:	61 d1       	rcall	.+706    	; 0x1114 <fputc>
     e52:	11 50       	subi	r17, 0x01	; 1
     e54:	f8 cf       	rjmp	.-16     	; 0xe46 <vfprintf+0x630>
     e56:	ea 94       	dec	r14
     e58:	f3 01       	movw	r30, r6
     e5a:	ee 0d       	add	r30, r14
     e5c:	f1 1d       	adc	r31, r1
     e5e:	80 81       	ld	r24, Z
     e60:	b6 01       	movw	r22, r12
     e62:	90 e0       	ldi	r25, 0x00	; 0
     e64:	57 d1       	rcall	.+686    	; 0x1114 <fputc>
     e66:	e1 10       	cpse	r14, r1
     e68:	f6 cf       	rjmp	.-20     	; 0xe56 <vfprintf+0x640>
     e6a:	14 c0       	rjmp	.+40     	; 0xe94 <vfprintf+0x67e>
     e6c:	f4 e0       	ldi	r31, 0x04	; 4
     e6e:	ff 15       	cp	r31, r15
     e70:	48 f5       	brcc	.+82     	; 0xec4 <vfprintf+0x6ae>
     e72:	84 e0       	ldi	r24, 0x04	; 4
     e74:	f8 1a       	sub	r15, r24
     e76:	33 fe       	sbrs	r3, 3
     e78:	1d c0       	rjmp	.+58     	; 0xeb4 <vfprintf+0x69e>
     e7a:	21 10       	cpse	r2, r1
     e7c:	24 c0       	rjmp	.+72     	; 0xec6 <vfprintf+0x6b0>
     e7e:	03 ff       	sbrs	r16, 3
     e80:	27 c0       	rjmp	.+78     	; 0xed0 <vfprintf+0x6ba>
     e82:	0c e8       	ldi	r16, 0x8C	; 140
     e84:	10 e0       	ldi	r17, 0x00	; 0
     e86:	f3 2d       	mov	r31, r3
     e88:	f0 71       	andi	r31, 0x10	; 16
     e8a:	3f 2e       	mov	r3, r31
     e8c:	f8 01       	movw	r30, r16
     e8e:	84 91       	lpm	r24, Z
     e90:	81 11       	cpse	r24, r1
     e92:	21 c0       	rjmp	.+66     	; 0xed6 <vfprintf+0x6c0>
     e94:	ff 20       	and	r15, r15
     e96:	09 f4       	brne	.+2      	; 0xe9a <vfprintf+0x684>
     e98:	fd cc       	rjmp	.-1542   	; 0x894 <vfprintf+0x7e>
     e9a:	b6 01       	movw	r22, r12
     e9c:	80 e2       	ldi	r24, 0x20	; 32
     e9e:	90 e0       	ldi	r25, 0x00	; 0
     ea0:	39 d1       	rcall	.+626    	; 0x1114 <fputc>
     ea2:	fa 94       	dec	r15
     ea4:	f7 cf       	rjmp	.-18     	; 0xe94 <vfprintf+0x67e>
     ea6:	f6 01       	movw	r30, r12
     ea8:	86 81       	ldd	r24, Z+6	; 0x06
     eaa:	97 81       	ldd	r25, Z+7	; 0x07
     eac:	23 c0       	rjmp	.+70     	; 0xef4 <vfprintf+0x6de>
     eae:	8f ef       	ldi	r24, 0xFF	; 255
     eb0:	9f ef       	ldi	r25, 0xFF	; 255
     eb2:	20 c0       	rjmp	.+64     	; 0xef4 <vfprintf+0x6de>
     eb4:	b6 01       	movw	r22, r12
     eb6:	80 e2       	ldi	r24, 0x20	; 32
     eb8:	90 e0       	ldi	r25, 0x00	; 0
     eba:	2c d1       	rcall	.+600    	; 0x1114 <fputc>
     ebc:	fa 94       	dec	r15
     ebe:	f1 10       	cpse	r15, r1
     ec0:	f9 cf       	rjmp	.-14     	; 0xeb4 <vfprintf+0x69e>
     ec2:	db cf       	rjmp	.-74     	; 0xe7a <vfprintf+0x664>
     ec4:	f1 2c       	mov	r15, r1
     ec6:	b6 01       	movw	r22, r12
     ec8:	82 2d       	mov	r24, r2
     eca:	90 e0       	ldi	r25, 0x00	; 0
     ecc:	23 d1       	rcall	.+582    	; 0x1114 <fputc>
     ece:	d7 cf       	rjmp	.-82     	; 0xe7e <vfprintf+0x668>
     ed0:	00 e9       	ldi	r16, 0x90	; 144
     ed2:	10 e0       	ldi	r17, 0x00	; 0
     ed4:	d8 cf       	rjmp	.-80     	; 0xe86 <vfprintf+0x670>
     ed6:	31 10       	cpse	r3, r1
     ed8:	80 52       	subi	r24, 0x20	; 32
     eda:	b6 01       	movw	r22, r12
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	1a d1       	rcall	.+564    	; 0x1114 <fputc>
     ee0:	0f 5f       	subi	r16, 0xFF	; 255
     ee2:	1f 4f       	sbci	r17, 0xFF	; 255
     ee4:	d3 cf       	rjmp	.-90     	; 0xe8c <vfprintf+0x676>
     ee6:	23 e0       	ldi	r18, 0x03	; 3
     ee8:	2f 15       	cp	r18, r15
     eea:	10 f4       	brcc	.+4      	; 0xef0 <vfprintf+0x6da>
     eec:	83 e0       	ldi	r24, 0x03	; 3
     eee:	c2 cf       	rjmp	.-124    	; 0xe74 <vfprintf+0x65e>
     ef0:	f1 2c       	mov	r15, r1
     ef2:	c5 cf       	rjmp	.-118    	; 0xe7e <vfprintf+0x668>
     ef4:	63 96       	adiw	r28, 0x13	; 19
     ef6:	0f b6       	in	r0, 0x3f	; 63
     ef8:	f8 94       	cli
     efa:	de bf       	out	0x3e, r29	; 62
     efc:	0f be       	out	0x3f, r0	; 63
     efe:	cd bf       	out	0x3d, r28	; 61
     f00:	df 91       	pop	r29
     f02:	cf 91       	pop	r28
     f04:	1f 91       	pop	r17
     f06:	0f 91       	pop	r16
     f08:	ff 90       	pop	r15
     f0a:	ef 90       	pop	r14
     f0c:	df 90       	pop	r13
     f0e:	cf 90       	pop	r12
     f10:	bf 90       	pop	r11
     f12:	af 90       	pop	r10
     f14:	9f 90       	pop	r9
     f16:	8f 90       	pop	r8
     f18:	7f 90       	pop	r7
     f1a:	6f 90       	pop	r6
     f1c:	5f 90       	pop	r5
     f1e:	4f 90       	pop	r4
     f20:	3f 90       	pop	r3
     f22:	2f 90       	pop	r2
     f24:	08 95       	ret

00000f26 <__ftoa_engine>:
     f26:	28 30       	cpi	r18, 0x08	; 8
     f28:	08 f0       	brcs	.+2      	; 0xf2c <__ftoa_engine+0x6>
     f2a:	27 e0       	ldi	r18, 0x07	; 7
     f2c:	33 27       	eor	r19, r19
     f2e:	da 01       	movw	r26, r20
     f30:	99 0f       	add	r25, r25
     f32:	31 1d       	adc	r19, r1
     f34:	87 fd       	sbrc	r24, 7
     f36:	91 60       	ori	r25, 0x01	; 1
     f38:	00 96       	adiw	r24, 0x00	; 0
     f3a:	61 05       	cpc	r22, r1
     f3c:	71 05       	cpc	r23, r1
     f3e:	39 f4       	brne	.+14     	; 0xf4e <__ftoa_engine+0x28>
     f40:	32 60       	ori	r19, 0x02	; 2
     f42:	2e 5f       	subi	r18, 0xFE	; 254
     f44:	3d 93       	st	X+, r19
     f46:	30 e3       	ldi	r19, 0x30	; 48
     f48:	2a 95       	dec	r18
     f4a:	e1 f7       	brne	.-8      	; 0xf44 <__ftoa_engine+0x1e>
     f4c:	08 95       	ret
     f4e:	9f 3f       	cpi	r25, 0xFF	; 255
     f50:	30 f0       	brcs	.+12     	; 0xf5e <__ftoa_engine+0x38>
     f52:	80 38       	cpi	r24, 0x80	; 128
     f54:	71 05       	cpc	r23, r1
     f56:	61 05       	cpc	r22, r1
     f58:	09 f0       	breq	.+2      	; 0xf5c <__ftoa_engine+0x36>
     f5a:	3c 5f       	subi	r19, 0xFC	; 252
     f5c:	3c 5f       	subi	r19, 0xFC	; 252
     f5e:	3d 93       	st	X+, r19
     f60:	91 30       	cpi	r25, 0x01	; 1
     f62:	08 f0       	brcs	.+2      	; 0xf66 <__ftoa_engine+0x40>
     f64:	80 68       	ori	r24, 0x80	; 128
     f66:	91 1d       	adc	r25, r1
     f68:	df 93       	push	r29
     f6a:	cf 93       	push	r28
     f6c:	1f 93       	push	r17
     f6e:	0f 93       	push	r16
     f70:	ff 92       	push	r15
     f72:	ef 92       	push	r14
     f74:	19 2f       	mov	r17, r25
     f76:	98 7f       	andi	r25, 0xF8	; 248
     f78:	96 95       	lsr	r25
     f7a:	e9 2f       	mov	r30, r25
     f7c:	96 95       	lsr	r25
     f7e:	96 95       	lsr	r25
     f80:	e9 0f       	add	r30, r25
     f82:	ff 27       	eor	r31, r31
     f84:	e2 51       	subi	r30, 0x12	; 18
     f86:	ff 4f       	sbci	r31, 0xFF	; 255
     f88:	99 27       	eor	r25, r25
     f8a:	33 27       	eor	r19, r19
     f8c:	ee 24       	eor	r14, r14
     f8e:	ff 24       	eor	r15, r15
     f90:	a7 01       	movw	r20, r14
     f92:	e7 01       	movw	r28, r14
     f94:	05 90       	lpm	r0, Z+
     f96:	08 94       	sec
     f98:	07 94       	ror	r0
     f9a:	28 f4       	brcc	.+10     	; 0xfa6 <__ftoa_engine+0x80>
     f9c:	36 0f       	add	r19, r22
     f9e:	e7 1e       	adc	r14, r23
     fa0:	f8 1e       	adc	r15, r24
     fa2:	49 1f       	adc	r20, r25
     fa4:	51 1d       	adc	r21, r1
     fa6:	66 0f       	add	r22, r22
     fa8:	77 1f       	adc	r23, r23
     faa:	88 1f       	adc	r24, r24
     fac:	99 1f       	adc	r25, r25
     fae:	06 94       	lsr	r0
     fb0:	a1 f7       	brne	.-24     	; 0xf9a <__ftoa_engine+0x74>
     fb2:	05 90       	lpm	r0, Z+
     fb4:	07 94       	ror	r0
     fb6:	28 f4       	brcc	.+10     	; 0xfc2 <__ftoa_engine+0x9c>
     fb8:	e7 0e       	add	r14, r23
     fba:	f8 1e       	adc	r15, r24
     fbc:	49 1f       	adc	r20, r25
     fbe:	56 1f       	adc	r21, r22
     fc0:	c1 1d       	adc	r28, r1
     fc2:	77 0f       	add	r23, r23
     fc4:	88 1f       	adc	r24, r24
     fc6:	99 1f       	adc	r25, r25
     fc8:	66 1f       	adc	r22, r22
     fca:	06 94       	lsr	r0
     fcc:	a1 f7       	brne	.-24     	; 0xfb6 <__ftoa_engine+0x90>
     fce:	05 90       	lpm	r0, Z+
     fd0:	07 94       	ror	r0
     fd2:	28 f4       	brcc	.+10     	; 0xfde <__ftoa_engine+0xb8>
     fd4:	f8 0e       	add	r15, r24
     fd6:	49 1f       	adc	r20, r25
     fd8:	56 1f       	adc	r21, r22
     fda:	c7 1f       	adc	r28, r23
     fdc:	d1 1d       	adc	r29, r1
     fde:	88 0f       	add	r24, r24
     fe0:	99 1f       	adc	r25, r25
     fe2:	66 1f       	adc	r22, r22
     fe4:	77 1f       	adc	r23, r23
     fe6:	06 94       	lsr	r0
     fe8:	a1 f7       	brne	.-24     	; 0xfd2 <__ftoa_engine+0xac>
     fea:	05 90       	lpm	r0, Z+
     fec:	07 94       	ror	r0
     fee:	20 f4       	brcc	.+8      	; 0xff8 <__ftoa_engine+0xd2>
     ff0:	49 0f       	add	r20, r25
     ff2:	56 1f       	adc	r21, r22
     ff4:	c7 1f       	adc	r28, r23
     ff6:	d8 1f       	adc	r29, r24
     ff8:	99 0f       	add	r25, r25
     ffa:	66 1f       	adc	r22, r22
     ffc:	77 1f       	adc	r23, r23
     ffe:	88 1f       	adc	r24, r24
    1000:	06 94       	lsr	r0
    1002:	a9 f7       	brne	.-22     	; 0xfee <__ftoa_engine+0xc8>
    1004:	84 91       	lpm	r24, Z
    1006:	10 95       	com	r17
    1008:	17 70       	andi	r17, 0x07	; 7
    100a:	41 f0       	breq	.+16     	; 0x101c <__ftoa_engine+0xf6>
    100c:	d6 95       	lsr	r29
    100e:	c7 95       	ror	r28
    1010:	57 95       	ror	r21
    1012:	47 95       	ror	r20
    1014:	f7 94       	ror	r15
    1016:	e7 94       	ror	r14
    1018:	1a 95       	dec	r17
    101a:	c1 f7       	brne	.-16     	; 0x100c <__ftoa_engine+0xe6>
    101c:	e4 e9       	ldi	r30, 0x94	; 148
    101e:	f0 e0       	ldi	r31, 0x00	; 0
    1020:	68 94       	set
    1022:	15 90       	lpm	r1, Z+
    1024:	15 91       	lpm	r17, Z+
    1026:	35 91       	lpm	r19, Z+
    1028:	65 91       	lpm	r22, Z+
    102a:	95 91       	lpm	r25, Z+
    102c:	05 90       	lpm	r0, Z+
    102e:	7f e2       	ldi	r23, 0x2F	; 47
    1030:	73 95       	inc	r23
    1032:	e1 18       	sub	r14, r1
    1034:	f1 0a       	sbc	r15, r17
    1036:	43 0b       	sbc	r20, r19
    1038:	56 0b       	sbc	r21, r22
    103a:	c9 0b       	sbc	r28, r25
    103c:	d0 09       	sbc	r29, r0
    103e:	c0 f7       	brcc	.-16     	; 0x1030 <__ftoa_engine+0x10a>
    1040:	e1 0c       	add	r14, r1
    1042:	f1 1e       	adc	r15, r17
    1044:	43 1f       	adc	r20, r19
    1046:	56 1f       	adc	r21, r22
    1048:	c9 1f       	adc	r28, r25
    104a:	d0 1d       	adc	r29, r0
    104c:	7e f4       	brtc	.+30     	; 0x106c <__ftoa_engine+0x146>
    104e:	70 33       	cpi	r23, 0x30	; 48
    1050:	11 f4       	brne	.+4      	; 0x1056 <__ftoa_engine+0x130>
    1052:	8a 95       	dec	r24
    1054:	e6 cf       	rjmp	.-52     	; 0x1022 <__ftoa_engine+0xfc>
    1056:	e8 94       	clt
    1058:	01 50       	subi	r16, 0x01	; 1
    105a:	30 f0       	brcs	.+12     	; 0x1068 <__ftoa_engine+0x142>
    105c:	08 0f       	add	r16, r24
    105e:	0a f4       	brpl	.+2      	; 0x1062 <__ftoa_engine+0x13c>
    1060:	00 27       	eor	r16, r16
    1062:	02 17       	cp	r16, r18
    1064:	08 f4       	brcc	.+2      	; 0x1068 <__ftoa_engine+0x142>
    1066:	20 2f       	mov	r18, r16
    1068:	23 95       	inc	r18
    106a:	02 2f       	mov	r16, r18
    106c:	7a 33       	cpi	r23, 0x3A	; 58
    106e:	28 f0       	brcs	.+10     	; 0x107a <__ftoa_engine+0x154>
    1070:	79 e3       	ldi	r23, 0x39	; 57
    1072:	7d 93       	st	X+, r23
    1074:	2a 95       	dec	r18
    1076:	e9 f7       	brne	.-6      	; 0x1072 <__ftoa_engine+0x14c>
    1078:	10 c0       	rjmp	.+32     	; 0x109a <__ftoa_engine+0x174>
    107a:	7d 93       	st	X+, r23
    107c:	2a 95       	dec	r18
    107e:	89 f6       	brne	.-94     	; 0x1022 <__ftoa_engine+0xfc>
    1080:	06 94       	lsr	r0
    1082:	97 95       	ror	r25
    1084:	67 95       	ror	r22
    1086:	37 95       	ror	r19
    1088:	17 95       	ror	r17
    108a:	17 94       	ror	r1
    108c:	e1 18       	sub	r14, r1
    108e:	f1 0a       	sbc	r15, r17
    1090:	43 0b       	sbc	r20, r19
    1092:	56 0b       	sbc	r21, r22
    1094:	c9 0b       	sbc	r28, r25
    1096:	d0 09       	sbc	r29, r0
    1098:	98 f0       	brcs	.+38     	; 0x10c0 <__ftoa_engine+0x19a>
    109a:	23 95       	inc	r18
    109c:	7e 91       	ld	r23, -X
    109e:	73 95       	inc	r23
    10a0:	7a 33       	cpi	r23, 0x3A	; 58
    10a2:	08 f0       	brcs	.+2      	; 0x10a6 <__ftoa_engine+0x180>
    10a4:	70 e3       	ldi	r23, 0x30	; 48
    10a6:	7c 93       	st	X, r23
    10a8:	20 13       	cpse	r18, r16
    10aa:	b8 f7       	brcc	.-18     	; 0x109a <__ftoa_engine+0x174>
    10ac:	7e 91       	ld	r23, -X
    10ae:	70 61       	ori	r23, 0x10	; 16
    10b0:	7d 93       	st	X+, r23
    10b2:	30 f0       	brcs	.+12     	; 0x10c0 <__ftoa_engine+0x19a>
    10b4:	83 95       	inc	r24
    10b6:	71 e3       	ldi	r23, 0x31	; 49
    10b8:	7d 93       	st	X+, r23
    10ba:	70 e3       	ldi	r23, 0x30	; 48
    10bc:	2a 95       	dec	r18
    10be:	e1 f7       	brne	.-8      	; 0x10b8 <__ftoa_engine+0x192>
    10c0:	11 24       	eor	r1, r1
    10c2:	ef 90       	pop	r14
    10c4:	ff 90       	pop	r15
    10c6:	0f 91       	pop	r16
    10c8:	1f 91       	pop	r17
    10ca:	cf 91       	pop	r28
    10cc:	df 91       	pop	r29
    10ce:	99 27       	eor	r25, r25
    10d0:	87 fd       	sbrc	r24, 7
    10d2:	90 95       	com	r25
    10d4:	08 95       	ret

000010d6 <strnlen_P>:
    10d6:	fc 01       	movw	r30, r24
    10d8:	05 90       	lpm	r0, Z+
    10da:	61 50       	subi	r22, 0x01	; 1
    10dc:	70 40       	sbci	r23, 0x00	; 0
    10de:	01 10       	cpse	r0, r1
    10e0:	d8 f7       	brcc	.-10     	; 0x10d8 <strnlen_P+0x2>
    10e2:	80 95       	com	r24
    10e4:	90 95       	com	r25
    10e6:	8e 0f       	add	r24, r30
    10e8:	9f 1f       	adc	r25, r31
    10ea:	08 95       	ret

000010ec <memcpy>:
    10ec:	fb 01       	movw	r30, r22
    10ee:	dc 01       	movw	r26, r24
    10f0:	02 c0       	rjmp	.+4      	; 0x10f6 <memcpy+0xa>
    10f2:	01 90       	ld	r0, Z+
    10f4:	0d 92       	st	X+, r0
    10f6:	41 50       	subi	r20, 0x01	; 1
    10f8:	50 40       	sbci	r21, 0x00	; 0
    10fa:	d8 f7       	brcc	.-10     	; 0x10f2 <memcpy+0x6>
    10fc:	08 95       	ret

000010fe <strnlen>:
    10fe:	fc 01       	movw	r30, r24
    1100:	61 50       	subi	r22, 0x01	; 1
    1102:	70 40       	sbci	r23, 0x00	; 0
    1104:	01 90       	ld	r0, Z+
    1106:	01 10       	cpse	r0, r1
    1108:	d8 f7       	brcc	.-10     	; 0x1100 <strnlen+0x2>
    110a:	80 95       	com	r24
    110c:	90 95       	com	r25
    110e:	8e 0f       	add	r24, r30
    1110:	9f 1f       	adc	r25, r31
    1112:	08 95       	ret

00001114 <fputc>:
    1114:	0f 93       	push	r16
    1116:	1f 93       	push	r17
    1118:	cf 93       	push	r28
    111a:	df 93       	push	r29
    111c:	fb 01       	movw	r30, r22
    111e:	23 81       	ldd	r18, Z+3	; 0x03
    1120:	21 fd       	sbrc	r18, 1
    1122:	03 c0       	rjmp	.+6      	; 0x112a <fputc+0x16>
    1124:	8f ef       	ldi	r24, 0xFF	; 255
    1126:	9f ef       	ldi	r25, 0xFF	; 255
    1128:	28 c0       	rjmp	.+80     	; 0x117a <fputc+0x66>
    112a:	22 ff       	sbrs	r18, 2
    112c:	16 c0       	rjmp	.+44     	; 0x115a <fputc+0x46>
    112e:	46 81       	ldd	r20, Z+6	; 0x06
    1130:	57 81       	ldd	r21, Z+7	; 0x07
    1132:	24 81       	ldd	r18, Z+4	; 0x04
    1134:	35 81       	ldd	r19, Z+5	; 0x05
    1136:	42 17       	cp	r20, r18
    1138:	53 07       	cpc	r21, r19
    113a:	44 f4       	brge	.+16     	; 0x114c <fputc+0x38>
    113c:	a0 81       	ld	r26, Z
    113e:	b1 81       	ldd	r27, Z+1	; 0x01
    1140:	9d 01       	movw	r18, r26
    1142:	2f 5f       	subi	r18, 0xFF	; 255
    1144:	3f 4f       	sbci	r19, 0xFF	; 255
    1146:	31 83       	std	Z+1, r19	; 0x01
    1148:	20 83       	st	Z, r18
    114a:	8c 93       	st	X, r24
    114c:	26 81       	ldd	r18, Z+6	; 0x06
    114e:	37 81       	ldd	r19, Z+7	; 0x07
    1150:	2f 5f       	subi	r18, 0xFF	; 255
    1152:	3f 4f       	sbci	r19, 0xFF	; 255
    1154:	37 83       	std	Z+7, r19	; 0x07
    1156:	26 83       	std	Z+6, r18	; 0x06
    1158:	10 c0       	rjmp	.+32     	; 0x117a <fputc+0x66>
    115a:	eb 01       	movw	r28, r22
    115c:	09 2f       	mov	r16, r25
    115e:	18 2f       	mov	r17, r24
    1160:	00 84       	ldd	r0, Z+8	; 0x08
    1162:	f1 85       	ldd	r31, Z+9	; 0x09
    1164:	e0 2d       	mov	r30, r0
    1166:	09 95       	icall
    1168:	89 2b       	or	r24, r25
    116a:	e1 f6       	brne	.-72     	; 0x1124 <fputc+0x10>
    116c:	8e 81       	ldd	r24, Y+6	; 0x06
    116e:	9f 81       	ldd	r25, Y+7	; 0x07
    1170:	01 96       	adiw	r24, 0x01	; 1
    1172:	9f 83       	std	Y+7, r25	; 0x07
    1174:	8e 83       	std	Y+6, r24	; 0x06
    1176:	81 2f       	mov	r24, r17
    1178:	90 2f       	mov	r25, r16
    117a:	df 91       	pop	r29
    117c:	cf 91       	pop	r28
    117e:	1f 91       	pop	r17
    1180:	0f 91       	pop	r16
    1182:	08 95       	ret

00001184 <__ultoa_invert>:
    1184:	fa 01       	movw	r30, r20
    1186:	aa 27       	eor	r26, r26
    1188:	28 30       	cpi	r18, 0x08	; 8
    118a:	51 f1       	breq	.+84     	; 0x11e0 <__ultoa_invert+0x5c>
    118c:	20 31       	cpi	r18, 0x10	; 16
    118e:	81 f1       	breq	.+96     	; 0x11f0 <__ultoa_invert+0x6c>
    1190:	e8 94       	clt
    1192:	6f 93       	push	r22
    1194:	6e 7f       	andi	r22, 0xFE	; 254
    1196:	6e 5f       	subi	r22, 0xFE	; 254
    1198:	7f 4f       	sbci	r23, 0xFF	; 255
    119a:	8f 4f       	sbci	r24, 0xFF	; 255
    119c:	9f 4f       	sbci	r25, 0xFF	; 255
    119e:	af 4f       	sbci	r26, 0xFF	; 255
    11a0:	b1 e0       	ldi	r27, 0x01	; 1
    11a2:	3e d0       	rcall	.+124    	; 0x1220 <__ultoa_invert+0x9c>
    11a4:	b4 e0       	ldi	r27, 0x04	; 4
    11a6:	3c d0       	rcall	.+120    	; 0x1220 <__ultoa_invert+0x9c>
    11a8:	67 0f       	add	r22, r23
    11aa:	78 1f       	adc	r23, r24
    11ac:	89 1f       	adc	r24, r25
    11ae:	9a 1f       	adc	r25, r26
    11b0:	a1 1d       	adc	r26, r1
    11b2:	68 0f       	add	r22, r24
    11b4:	79 1f       	adc	r23, r25
    11b6:	8a 1f       	adc	r24, r26
    11b8:	91 1d       	adc	r25, r1
    11ba:	a1 1d       	adc	r26, r1
    11bc:	6a 0f       	add	r22, r26
    11be:	71 1d       	adc	r23, r1
    11c0:	81 1d       	adc	r24, r1
    11c2:	91 1d       	adc	r25, r1
    11c4:	a1 1d       	adc	r26, r1
    11c6:	20 d0       	rcall	.+64     	; 0x1208 <__ultoa_invert+0x84>
    11c8:	09 f4       	brne	.+2      	; 0x11cc <__ultoa_invert+0x48>
    11ca:	68 94       	set
    11cc:	3f 91       	pop	r19
    11ce:	2a e0       	ldi	r18, 0x0A	; 10
    11d0:	26 9f       	mul	r18, r22
    11d2:	11 24       	eor	r1, r1
    11d4:	30 19       	sub	r19, r0
    11d6:	30 5d       	subi	r19, 0xD0	; 208
    11d8:	31 93       	st	Z+, r19
    11da:	de f6       	brtc	.-74     	; 0x1192 <__ultoa_invert+0xe>
    11dc:	cf 01       	movw	r24, r30
    11de:	08 95       	ret
    11e0:	46 2f       	mov	r20, r22
    11e2:	47 70       	andi	r20, 0x07	; 7
    11e4:	40 5d       	subi	r20, 0xD0	; 208
    11e6:	41 93       	st	Z+, r20
    11e8:	b3 e0       	ldi	r27, 0x03	; 3
    11ea:	0f d0       	rcall	.+30     	; 0x120a <__ultoa_invert+0x86>
    11ec:	c9 f7       	brne	.-14     	; 0x11e0 <__ultoa_invert+0x5c>
    11ee:	f6 cf       	rjmp	.-20     	; 0x11dc <__ultoa_invert+0x58>
    11f0:	46 2f       	mov	r20, r22
    11f2:	4f 70       	andi	r20, 0x0F	; 15
    11f4:	40 5d       	subi	r20, 0xD0	; 208
    11f6:	4a 33       	cpi	r20, 0x3A	; 58
    11f8:	18 f0       	brcs	.+6      	; 0x1200 <__ultoa_invert+0x7c>
    11fa:	49 5d       	subi	r20, 0xD9	; 217
    11fc:	31 fd       	sbrc	r19, 1
    11fe:	40 52       	subi	r20, 0x20	; 32
    1200:	41 93       	st	Z+, r20
    1202:	02 d0       	rcall	.+4      	; 0x1208 <__ultoa_invert+0x84>
    1204:	a9 f7       	brne	.-22     	; 0x11f0 <__ultoa_invert+0x6c>
    1206:	ea cf       	rjmp	.-44     	; 0x11dc <__ultoa_invert+0x58>
    1208:	b4 e0       	ldi	r27, 0x04	; 4
    120a:	a6 95       	lsr	r26
    120c:	97 95       	ror	r25
    120e:	87 95       	ror	r24
    1210:	77 95       	ror	r23
    1212:	67 95       	ror	r22
    1214:	ba 95       	dec	r27
    1216:	c9 f7       	brne	.-14     	; 0x120a <__ultoa_invert+0x86>
    1218:	00 97       	sbiw	r24, 0x00	; 0
    121a:	61 05       	cpc	r22, r1
    121c:	71 05       	cpc	r23, r1
    121e:	08 95       	ret
    1220:	9b 01       	movw	r18, r22
    1222:	ac 01       	movw	r20, r24
    1224:	0a 2e       	mov	r0, r26
    1226:	06 94       	lsr	r0
    1228:	57 95       	ror	r21
    122a:	47 95       	ror	r20
    122c:	37 95       	ror	r19
    122e:	27 95       	ror	r18
    1230:	ba 95       	dec	r27
    1232:	c9 f7       	brne	.-14     	; 0x1226 <__ultoa_invert+0xa2>
    1234:	62 0f       	add	r22, r18
    1236:	73 1f       	adc	r23, r19
    1238:	84 1f       	adc	r24, r20
    123a:	95 1f       	adc	r25, r21
    123c:	a0 1d       	adc	r26, r0
    123e:	08 95       	ret

00001240 <_exit>:
    1240:	f8 94       	cli

00001242 <__stop_program>:
    1242:	ff cf       	rjmp	.-2      	; 0x1242 <__stop_program>
