
HeadsUp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000022  00800100  00001320  00001394  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001320  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  000013b6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001414  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000001b0  00000000  00000000  00001454  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002156  00000000  00000000  00001604  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000b60  00000000  00000000  0000375a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000d8d  00000000  00000000  000042ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000041c  00000000  00000000  00005048  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000087f  00000000  00000000  00005464  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000010ff  00000000  00000000  00005ce3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000150  00000000  00000000  00006de2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	c6 c0       	rjmp	.+396    	; 0x18e <__ctors_end>
       2:	00 00       	nop
       4:	e2 c0       	rjmp	.+452    	; 0x1ca <__bad_interrupt>
       6:	00 00       	nop
       8:	e0 c0       	rjmp	.+448    	; 0x1ca <__bad_interrupt>
       a:	00 00       	nop
       c:	de c0       	rjmp	.+444    	; 0x1ca <__bad_interrupt>
       e:	00 00       	nop
      10:	dc c0       	rjmp	.+440    	; 0x1ca <__bad_interrupt>
      12:	00 00       	nop
      14:	da c0       	rjmp	.+436    	; 0x1ca <__bad_interrupt>
      16:	00 00       	nop
      18:	d8 c0       	rjmp	.+432    	; 0x1ca <__bad_interrupt>
      1a:	00 00       	nop
      1c:	d6 c0       	rjmp	.+428    	; 0x1ca <__bad_interrupt>
      1e:	00 00       	nop
      20:	d4 c0       	rjmp	.+424    	; 0x1ca <__bad_interrupt>
      22:	00 00       	nop
      24:	d2 c0       	rjmp	.+420    	; 0x1ca <__bad_interrupt>
      26:	00 00       	nop
      28:	d0 c0       	rjmp	.+416    	; 0x1ca <__bad_interrupt>
      2a:	00 00       	nop
      2c:	ce c0       	rjmp	.+412    	; 0x1ca <__bad_interrupt>
      2e:	00 00       	nop
      30:	cc c0       	rjmp	.+408    	; 0x1ca <__bad_interrupt>
      32:	00 00       	nop
      34:	ca c0       	rjmp	.+404    	; 0x1ca <__bad_interrupt>
      36:	00 00       	nop
      38:	c8 c0       	rjmp	.+400    	; 0x1ca <__bad_interrupt>
      3a:	00 00       	nop
      3c:	c6 c0       	rjmp	.+396    	; 0x1ca <__bad_interrupt>
      3e:	00 00       	nop
      40:	c4 c0       	rjmp	.+392    	; 0x1ca <__bad_interrupt>
      42:	00 00       	nop
      44:	c2 c0       	rjmp	.+388    	; 0x1ca <__bad_interrupt>
      46:	00 00       	nop
      48:	c0 c0       	rjmp	.+384    	; 0x1ca <__bad_interrupt>
      4a:	00 00       	nop
      4c:	be c0       	rjmp	.+380    	; 0x1ca <__bad_interrupt>
      4e:	00 00       	nop
      50:	bc c0       	rjmp	.+376    	; 0x1ca <__bad_interrupt>
      52:	00 00       	nop
      54:	ba c0       	rjmp	.+372    	; 0x1ca <__bad_interrupt>
      56:	00 00       	nop
      58:	b8 c0       	rjmp	.+368    	; 0x1ca <__bad_interrupt>
      5a:	00 00       	nop
      5c:	b6 c0       	rjmp	.+364    	; 0x1ca <__bad_interrupt>
      5e:	00 00       	nop
      60:	b4 c0       	rjmp	.+360    	; 0x1ca <__bad_interrupt>
      62:	00 00       	nop
      64:	b2 c0       	rjmp	.+356    	; 0x1ca <__bad_interrupt>
      66:	00 00       	nop
      68:	b0 c0       	rjmp	.+352    	; 0x1ca <__bad_interrupt>
      6a:	00 00       	nop
      6c:	ae c0       	rjmp	.+348    	; 0x1ca <__bad_interrupt>
      6e:	00 00       	nop
      70:	ac c0       	rjmp	.+344    	; 0x1ca <__bad_interrupt>
      72:	00 00       	nop
      74:	aa c0       	rjmp	.+340    	; 0x1ca <__bad_interrupt>
      76:	00 00       	nop
      78:	a8 c0       	rjmp	.+336    	; 0x1ca <__bad_interrupt>
      7a:	00 00       	nop
      7c:	a6 c0       	rjmp	.+332    	; 0x1ca <__bad_interrupt>
      7e:	00 00       	nop
      80:	a4 c0       	rjmp	.+328    	; 0x1ca <__bad_interrupt>
      82:	00 00       	nop
      84:	a2 c0       	rjmp	.+324    	; 0x1ca <__bad_interrupt>
      86:	00 00       	nop
      88:	a0 c0       	rjmp	.+320    	; 0x1ca <__bad_interrupt>
	...

0000008c <__trampolines_end>:
      8c:	6e 61       	ori	r22, 0x1E	; 30
      8e:	6e 00       	.word	0x006e	; ????

00000090 <__c.2177>:
      90:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      a0:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      b0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      c0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      d0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      e0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      f0:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     100:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     110:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     120:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     130:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     140:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     150:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     160:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     170:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     180:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000018e <__ctors_end>:
     18e:	11 24       	eor	r1, r1
     190:	1f be       	out	0x3f, r1	; 63
     192:	cf ef       	ldi	r28, 0xFF	; 255
     194:	d0 e4       	ldi	r29, 0x40	; 64
     196:	de bf       	out	0x3e, r29	; 62
     198:	cd bf       	out	0x3d, r28	; 61

0000019a <__do_copy_data>:
     19a:	11 e0       	ldi	r17, 0x01	; 1
     19c:	a0 e0       	ldi	r26, 0x00	; 0
     19e:	b1 e0       	ldi	r27, 0x01	; 1
     1a0:	e0 e2       	ldi	r30, 0x20	; 32
     1a2:	f3 e1       	ldi	r31, 0x13	; 19
     1a4:	00 e0       	ldi	r16, 0x00	; 0
     1a6:	0b bf       	out	0x3b, r16	; 59
     1a8:	02 c0       	rjmp	.+4      	; 0x1ae <__do_copy_data+0x14>
     1aa:	07 90       	elpm	r0, Z+
     1ac:	0d 92       	st	X+, r0
     1ae:	a2 32       	cpi	r26, 0x22	; 34
     1b0:	b1 07       	cpc	r27, r17
     1b2:	d9 f7       	brne	.-10     	; 0x1aa <__do_copy_data+0x10>

000001b4 <__do_clear_bss>:
     1b4:	21 e0       	ldi	r18, 0x01	; 1
     1b6:	a2 e2       	ldi	r26, 0x22	; 34
     1b8:	b1 e0       	ldi	r27, 0x01	; 1
     1ba:	01 c0       	rjmp	.+2      	; 0x1be <.do_clear_bss_start>

000001bc <.do_clear_bss_loop>:
     1bc:	1d 92       	st	X+, r1

000001be <.do_clear_bss_start>:
     1be:	a2 32       	cpi	r26, 0x22	; 34
     1c0:	b2 07       	cpc	r27, r18
     1c2:	e1 f7       	brne	.-8      	; 0x1bc <.do_clear_bss_loop>
     1c4:	14 d0       	rcall	.+40     	; 0x1ee <main>
     1c6:	0c 94 8e 09 	jmp	0x131c	; 0x131c <_exit>

000001ca <__bad_interrupt>:
     1ca:	1a cf       	rjmp	.-460    	; 0x0 <__vectors>

000001cc <_Z14Test_On_PortA0v>:
void Test_On_PortA0();


void Test_On_PortA0(){
	
	DDRA |= 0x01;
     1cc:	08 9a       	sbi	0x01, 0	; 1
	
	PORTA |= ( 1 << PINA0);
     1ce:	10 9a       	sbi	0x02, 0	; 2
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1d0:	83 e2       	ldi	r24, 0x23	; 35
     1d2:	94 ef       	ldi	r25, 0xF4	; 244
     1d4:	01 97       	sbiw	r24, 0x01	; 1
     1d6:	f1 f7       	brne	.-4      	; 0x1d4 <_Z14Test_On_PortA0v+0x8>
     1d8:	00 c0       	rjmp	.+0      	; 0x1da <_Z14Test_On_PortA0v+0xe>
     1da:	00 00       	nop
	_delay_ms(250);
	PORTA &= ~( 1 << PINA0);
     1dc:	10 98       	cbi	0x02, 0	; 2
     1de:	83 e2       	ldi	r24, 0x23	; 35
     1e0:	94 ef       	ldi	r25, 0xF4	; 244
     1e2:	01 97       	sbiw	r24, 0x01	; 1
     1e4:	f1 f7       	brne	.-4      	; 0x1e2 <_Z14Test_On_PortA0v+0x16>
     1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <_Z14Test_On_PortA0v+0x1c>
     1e8:	00 00       	nop
	_delay_ms(250);
	PORTA |= ( 1 << PINA0);
     1ea:	10 9a       	sbi	0x02, 0	; 2
     1ec:	08 95       	ret

000001ee <main>:
#include <avr/io.h>
#include <util/delay.h>
#include "headsup.h"


int main(){
     1ee:	cf 93       	push	r28
     1f0:	df 93       	push	r29
     1f2:	cd b7       	in	r28, 0x3d	; 61
     1f4:	de b7       	in	r29, 0x3e	; 62
     1f6:	a7 97       	sbiw	r28, 0x27	; 39
     1f8:	0f b6       	in	r0, 0x3f	; 63
     1fa:	f8 94       	cli
     1fc:	de bf       	out	0x3e, r29	; 62
     1fe:	0f be       	out	0x3f, r0	; 63
     200:	cd bf       	out	0x3d, r28	; 61
	
	rtc_time rtmCurrent;
	lcd lcdNHD;
     202:	ce 01       	movw	r24, r28
     204:	87 96       	adiw	r24, 0x27	; 39
     206:	0f d1       	rcall	.+542    	; 0x426 <_ZN3lcdC1Ev>
	rtc rtcDS;
     208:	ce 01       	movw	r24, r28
     20a:	86 96       	adiw	r24, 0x26	; 38
     20c:	d9 d1       	rcall	.+946    	; 0x5c0 <_ZN3rtcC1Ev>
	unsigned char uchCurrenttime[ LINE_SIZE ] ;

	VS1011setDataDirection();
     20e:	6d d3       	rcall	.+1754   	; 0x8ea <_Z22VS1011setDataDirectionv>
	InitVS1011();
     210:	63 d3       	rcall	.+1734   	; 0x8d8 <_Z10InitVS1011v>
	vs1011_sinewave_beep(100);
     212:	84 e6       	ldi	r24, 0x64	; 100
     214:	24 d3       	rcall	.+1608   	; 0x85e <_Z20vs1011_sinewave_beeph>

	rtmCurrent.ucSeconds = 0x50;
     216:	80 e5       	ldi	r24, 0x50	; 80
     218:	8f 8f       	std	Y+31, r24	; 0x1f
	rtmCurrent.ucMinutes = 0x59;
     21a:	89 e5       	ldi	r24, 0x59	; 89
     21c:	88 a3       	std	Y+32, r24	; 0x20
	rtmCurrent.ucHours = 0x72;
     21e:	82 e7       	ldi	r24, 0x72	; 114
     220:	89 a3       	std	Y+33, r24	; 0x21
	
	Test_On_PortA0();
     222:	d4 df       	rcall	.-88     	; 0x1cc <_Z14Test_On_PortA0v>
	lcdNHD.test_LCD_Screen();
     224:	ce 01       	movw	r24, r28
     226:	87 96       	adiw	r24, 0x27	; 39
     228:	31 d1       	rcall	.+610    	; 0x48c <_ZN3lcd15test_LCD_ScreenEv>
class rtc{

	public:
		rtc( );
		rtc_time get( ){ return get_time( ); }
		void set( rtc_time* rtmSetTime ){ set_time( rtmSetTime ); }
     22a:	be 01       	movw	r22, r28
     22c:	61 5e       	subi	r22, 0xE1	; 225
     22e:	7f 4f       	sbci	r23, 0xFF	; 255
     230:	ce 01       	movw	r24, r28
     232:	86 96       	adiw	r24, 0x26	; 38
     234:	13 d2       	rcall	.+1062   	; 0x65c <_ZN3rtc8set_timeEP8rtc_time>
     236:	0f 2e       	mov	r0, r31
     238:	f7 e0       	ldi	r31, 0x07	; 7
     23a:	bf 2e       	mov	r11, r31
     23c:	f0 2d       	mov	r31, r0

class rtc{

	public:
		rtc( );
		rtc_time get( ){ return get_time( ); }
     23e:	ce 01       	movw	r24, r28
     240:	86 96       	adiw	r24, 0x26	; 38
     242:	e1 d1       	rcall	.+962    	; 0x606 <_ZN3rtc8get_timeEv>
     244:	29 83       	std	Y+1, r18	; 0x01
     246:	3a 83       	std	Y+2, r19	; 0x02
     248:	4b 83       	std	Y+3, r20	; 0x03
     24a:	5c 83       	std	Y+4, r21	; 0x04
     24c:	6d 83       	std	Y+5, r22	; 0x05
     24e:	7e 83       	std	Y+6, r23	; 0x06
     250:	8f 83       	std	Y+7, r24	; 0x07
     252:	fe 01       	movw	r30, r28
     254:	31 96       	adiw	r30, 0x01	; 1
     256:	de 01       	movw	r26, r28
     258:	18 96       	adiw	r26, 0x08	; 8
     25a:	8b 2d       	mov	r24, r11
     25c:	01 90       	ld	r0, Z+
     25e:	0d 92       	st	X+, r0
     260:	8a 95       	dec	r24
     262:	e1 f7       	brne	.-8      	; 0x25c <main+0x6e>

	rtcDS.set(&rtmCurrent);

	for(;;){
		rtmCurrent=rtcDS.get();
     264:	fe 01       	movw	r30, r28
     266:	38 96       	adiw	r30, 0x08	; 8
     268:	de 01       	movw	r26, r28
     26a:	5f 96       	adiw	r26, 0x1f	; 31
     26c:	8b 2d       	mov	r24, r11
     26e:	01 90       	ld	r0, Z+
     270:	0d 92       	st	X+, r0
     272:	8a 95       	dec	r24
     274:	e1 f7       	brne	.-8      	; 0x26e <main+0x80>
		rtcDS.rtm_to_char( rtmCurrent, uchCurrenttime, LINE_SIZE );
     276:	68 94       	set
     278:	cc 24       	eor	r12, r12
     27a:	c4 f8       	bld	r12, 4
     27c:	d1 2c       	mov	r13, r1
     27e:	ce 01       	movw	r24, r28
     280:	0f 96       	adiw	r24, 0x0f	; 15
     282:	7c 01       	movw	r14, r24
     284:	0f 8d       	ldd	r16, Y+31	; 0x1f
     286:	18 a1       	ldd	r17, Y+32	; 0x20
     288:	29 a1       	ldd	r18, Y+33	; 0x21
     28a:	3a a1       	ldd	r19, Y+34	; 0x22
     28c:	4b a1       	ldd	r20, Y+35	; 0x23
     28e:	5c a1       	ldd	r21, Y+36	; 0x24
     290:	6d a1       	ldd	r22, Y+37	; 0x25
     292:	47 96       	adiw	r24, 0x17	; 23
     294:	e9 d1       	rcall	.+978    	; 0x668 <_ZN3rtc11rtm_to_charE8rtc_timePhj>
		lcdNHD.print( uchCurrenttime , LINE_TOP );
     296:	40 e0       	ldi	r20, 0x00	; 0
     298:	b7 01       	movw	r22, r14
     29a:	ce 01       	movw	r24, r28
     29c:	87 96       	adiw	r24, 0x27	; 39
     29e:	d2 d0       	rcall	.+420    	; 0x444 <_ZN3lcd5printEPhh>
     2a0:	9f e3       	ldi	r25, 0x3F	; 63
     2a2:	2d e0       	ldi	r18, 0x0D	; 13
     2a4:	83 e0       	ldi	r24, 0x03	; 3
     2a6:	91 50       	subi	r25, 0x01	; 1
     2a8:	20 40       	sbci	r18, 0x00	; 0
     2aa:	80 40       	sbci	r24, 0x00	; 0
     2ac:	e1 f7       	brne	.-8      	; 0x2a6 <main+0xb8>
     2ae:	00 c0       	rjmp	.+0      	; 0x2b0 <main+0xc2>
     2b0:	00 00       	nop
     2b2:	c5 cf       	rjmp	.-118    	; 0x23e <main+0x50>

000002b4 <_ZN3lcd4ShowEPh>:
	_delay_ms(20);
		
}


void lcd::Show(unsigned char* text){
     2b4:	0f 93       	push	r16
     2b6:	1f 93       	push	r17
     2b8:	cf 93       	push	r28
     2ba:	df 93       	push	r29
     2bc:	eb 01       	movw	r28, r22
	
	TWI_StartCommunication();
     2be:	97 d2       	rcall	.+1326   	; 0x7ee <_Z22TWI_StartCommunicationv>
	
	TWI_TransmitData( SLA, TW_MT_SLA_ACK );
     2c0:	68 e1       	ldi	r22, 0x18	; 24
     2c2:	8c e7       	ldi	r24, 0x7C	; 124
     2c4:	9f d2       	rcall	.+1342   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_TransmitData( SEND_DATA, TW_MT_DATA_ACK );
     2c6:	68 e2       	ldi	r22, 0x28	; 40
     2c8:	80 e4       	ldi	r24, 0x40	; 64
     2ca:	9c d2       	rcall	.+1336   	; 0x804 <_Z16TWI_TransmitDatahh>
     2cc:	8e 01       	movw	r16, r28
     2ce:	00 5f       	subi	r16, 0xF0	; 240
     2d0:	1f 4f       	sbci	r17, 0xFF	; 255
	for( int valN = 0; valN < LINE_SIZE; valN++ ){
		TWI_TransmitData( *text, TW_MT_DATA_ACK );
     2d2:	68 e2       	ldi	r22, 0x28	; 40
     2d4:	89 91       	ld	r24, Y+
     2d6:	96 d2       	rcall	.+1324   	; 0x804 <_Z16TWI_TransmitDatahh>
	
	TWI_StartCommunication();
	
	TWI_TransmitData( SLA, TW_MT_SLA_ACK );
	TWI_TransmitData( SEND_DATA, TW_MT_DATA_ACK );
	for( int valN = 0; valN < LINE_SIZE; valN++ ){
     2d8:	c0 17       	cp	r28, r16
     2da:	d1 07       	cpc	r29, r17
     2dc:	d1 f7       	brne	.-12     	; 0x2d2 <_ZN3lcd4ShowEPh+0x1e>
		TWI_TransmitData( *text, TW_MT_DATA_ACK );
		++text;
	}
		
	TWI_STOP();
     2de:	83 d2       	rcall	.+1286   	; 0x7e6 <_Z8TWI_STOPv>
	
}
     2e0:	df 91       	pop	r29
     2e2:	cf 91       	pop	r28
     2e4:	1f 91       	pop	r17
     2e6:	0f 91       	pop	r16
     2e8:	08 95       	ret

000002ea <_ZN3lcd11SelectLine1Ev>:


void lcd::SelectLine1(void){
	
	TWI_StartCommunication();
     2ea:	81 d2       	rcall	.+1282   	; 0x7ee <_Z22TWI_StartCommunicationv>
	
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     2ec:	68 e1       	ldi	r22, 0x18	; 24
     2ee:	8c e7       	ldi	r24, 0x7C	; 124
     2f0:	89 d2       	rcall	.+1298   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     2f2:	68 e2       	ldi	r22, 0x28	; 40
     2f4:	80 e0       	ldi	r24, 0x00	; 0
     2f6:	86 d2       	rcall	.+1292   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(LINE_1,TW_MT_DATA_ACK);
     2f8:	68 e2       	ldi	r22, 0x28	; 40
     2fa:	80 e8       	ldi	r24, 0x80	; 128
     2fc:	83 d2       	rcall	.+1286   	; 0x804 <_Z16TWI_TransmitDatahh>
	
	TWI_STOP();
     2fe:	73 c2       	rjmp	.+1254   	; 0x7e6 <_Z8TWI_STOPv>
     300:	08 95       	ret

00000302 <_ZN3lcd11SelectLine2Ev>:
}


void lcd::SelectLine2(void){
	
	TWI_StartCommunication();
     302:	75 d2       	rcall	.+1258   	; 0x7ee <_Z22TWI_StartCommunicationv>
	
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     304:	68 e1       	ldi	r22, 0x18	; 24
     306:	8c e7       	ldi	r24, 0x7C	; 124
     308:	7d d2       	rcall	.+1274   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     30a:	68 e2       	ldi	r22, 0x28	; 40
     30c:	80 e0       	ldi	r24, 0x00	; 0
     30e:	7a d2       	rcall	.+1268   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(LINE_2,TW_MT_DATA_ACK);
     310:	68 e2       	ldi	r22, 0x28	; 40
     312:	80 ec       	ldi	r24, 0xC0	; 192
     314:	77 d2       	rcall	.+1262   	; 0x804 <_Z16TWI_TransmitDatahh>
	
	TWI_STOP();
     316:	67 c2       	rjmp	.+1230   	; 0x7e6 <_Z8TWI_STOPv>
     318:	08 95       	ret

0000031a <_ZN3lcd5CGRAMEv>:
}

void lcd::CGRAM(void)
{
 	TWI_StartCommunication();
     31a:	69 d2       	rcall	.+1234   	; 0x7ee <_Z22TWI_StartCommunicationv>
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     31c:	68 e1       	ldi	r22, 0x18	; 24
     31e:	8c e7       	ldi	r24, 0x7C	; 124
     320:	71 d2       	rcall	.+1250   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);;
     322:	68 e2       	ldi	r22, 0x28	; 40
     324:	80 e0       	ldi	r24, 0x00	; 0
     326:	6e d2       	rcall	.+1244   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x38,TW_MT_DATA_ACK);		//go to instructino table 0
     328:	68 e2       	ldi	r22, 0x28	; 40
     32a:	88 e3       	ldi	r24, 0x38	; 56
     32c:	6b d2       	rcall	.+1238   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x40,TW_MT_DATA_ACK);		//Set CGRAM address to 0x00
     32e:	68 e2       	ldi	r22, 0x28	; 40
     330:	80 e4       	ldi	r24, 0x40	; 64
     332:	68 d2       	rcall	.+1232   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_STOP();
     334:	58 d2       	rcall	.+1200   	; 0x7e6 <_Z8TWI_STOPv>
     336:	83 ec       	ldi	r24, 0xC3	; 195
     338:	99 e0       	ldi	r25, 0x09	; 9
     33a:	01 97       	sbiw	r24, 0x01	; 1
     33c:	f1 f7       	brne	.-4      	; 0x33a <_ZN3lcd5CGRAMEv+0x20>
     33e:	00 c0       	rjmp	.+0      	; 0x340 <_ZN3lcd5CGRAMEv+0x26>
     340:	00 00       	nop
	_delay_ms(10);
	
	TWI_StartCommunication();
     342:	55 d2       	rcall	.+1194   	; 0x7ee <_Z22TWI_StartCommunicationv>
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     344:	68 e1       	ldi	r22, 0x18	; 24
     346:	8c e7       	ldi	r24, 0x7C	; 124
     348:	5d d2       	rcall	.+1210   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     34a:	68 e2       	ldi	r22, 0x28	; 40
     34c:	80 e0       	ldi	r24, 0x00	; 0
     34e:	5a d2       	rcall	.+1204   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x00,TW_MT_DATA_ACK);		//write to first CGRAM address
     350:	68 e2       	ldi	r22, 0x28	; 40
     352:	80 e0       	ldi	r24, 0x00	; 0
     354:	57 d2       	rcall	.+1198   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x1E,TW_MT_DATA_ACK);
     356:	68 e2       	ldi	r22, 0x28	; 40
     358:	8e e1       	ldi	r24, 0x1E	; 30
     35a:	54 d2       	rcall	.+1192   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x18,TW_MT_DATA_ACK);
     35c:	68 e2       	ldi	r22, 0x28	; 40
     35e:	88 e1       	ldi	r24, 0x18	; 24
     360:	51 d2       	rcall	.+1186   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x14,TW_MT_DATA_ACK);
     362:	68 e2       	ldi	r22, 0x28	; 40
     364:	84 e1       	ldi	r24, 0x14	; 20
     366:	4e d2       	rcall	.+1180   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x12,TW_MT_DATA_ACK);
     368:	68 e2       	ldi	r22, 0x28	; 40
     36a:	82 e1       	ldi	r24, 0x12	; 18
     36c:	4b d2       	rcall	.+1174   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);
     36e:	68 e2       	ldi	r22, 0x28	; 40
     370:	81 e0       	ldi	r24, 0x01	; 1
     372:	48 d2       	rcall	.+1168   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x00,TW_MT_DATA_ACK);
     374:	68 e2       	ldi	r22, 0x28	; 40
     376:	80 e0       	ldi	r24, 0x00	; 0
     378:	45 d2       	rcall	.+1162   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x00,TW_MT_DATA_ACK);		//8 bytes per character
     37a:	68 e2       	ldi	r22, 0x28	; 40
     37c:	80 e0       	ldi	r24, 0x00	; 0
     37e:	42 d2       	rcall	.+1156   	; 0x804 <_Z16TWI_TransmitDatahh>
	//continue writing to remaining CGRAM if desired
	TWI_STOP();
     380:	32 c2       	rjmp	.+1124   	; 0x7e6 <_Z8TWI_STOPv>
     382:	08 95       	ret

00000384 <_ZN3lcd8init_LCDEv>:
}

void lcd::init_LCD()
{
     384:	cf 93       	push	r28
     386:	df 93       	push	r29
     388:	ec 01       	movw	r28, r24
	TWI_StartCommunication();
     38a:	31 d2       	rcall	.+1122   	; 0x7ee <_Z22TWI_StartCommunicationv>
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     38c:	68 e1       	ldi	r22, 0x18	; 24
     38e:	8c e7       	ldi	r24, 0x7C	; 124
     390:	39 d2       	rcall	.+1138   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     392:	68 e2       	ldi	r22, 0x28	; 40
     394:	80 e0       	ldi	r24, 0x00	; 0
     396:	36 d2       	rcall	.+1132   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x38,TW_MT_DATA_ACK);						// Function Set: 8 bit bus mode, 2-line mode, single height font
     398:	68 e2       	ldi	r22, 0x28	; 40
     39a:	88 e3       	ldi	r24, 0x38	; 56
     39c:	33 d2       	rcall	.+1126   	; 0x804 <_Z16TWI_TransmitDatahh>
     39e:	87 ea       	ldi	r24, 0xA7	; 167
     3a0:	91 e6       	ldi	r25, 0x61	; 97
     3a2:	01 97       	sbiw	r24, 0x01	; 1
     3a4:	f1 f7       	brne	.-4      	; 0x3a2 <_ZN3lcd8init_LCDEv+0x1e>
     3a6:	00 c0       	rjmp	.+0      	; 0x3a8 <_ZN3lcd8init_LCDEv+0x24>
     3a8:	00 00       	nop
	_delay_ms(100);
	TWI_TransmitData(0x39,TW_MT_DATA_ACK);						// Use Extended instruction set
     3aa:	68 e2       	ldi	r22, 0x28	; 40
     3ac:	89 e3       	ldi	r24, 0x39	; 57
     3ae:	2a d2       	rcall	.+1108   	; 0x804 <_Z16TWI_TransmitDatahh>
     3b0:	87 ea       	ldi	r24, 0xA7	; 167
     3b2:	91 e6       	ldi	r25, 0x61	; 97
     3b4:	01 97       	sbiw	r24, 0x01	; 1
     3b6:	f1 f7       	brne	.-4      	; 0x3b4 <_ZN3lcd8init_LCDEv+0x30>
     3b8:	00 c0       	rjmp	.+0      	; 0x3ba <_ZN3lcd8init_LCDEv+0x36>
     3ba:	00 00       	nop
	_delay_ms(100);
	TWI_TransmitData(0x14,TW_MT_DATA_ACK);						// Set Internal Osc Freq
     3bc:	68 e2       	ldi	r22, 0x28	; 40
     3be:	84 e1       	ldi	r24, 0x14	; 20
     3c0:	21 d2       	rcall	.+1090   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x78,TW_MT_DATA_ACK);						// Contrast Set
     3c2:	68 e2       	ldi	r22, 0x28	; 40
     3c4:	88 e7       	ldi	r24, 0x78	; 120
     3c6:	1e d2       	rcall	.+1084   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x5D,TW_MT_DATA_ACK);						// Power/Icon/Contrast Control
     3c8:	68 e2       	ldi	r22, 0x28	; 40
     3ca:	8d e5       	ldi	r24, 0x5D	; 93
     3cc:	1b d2       	rcall	.+1078   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x6D,TW_MT_DATA_ACK);						// Follower Control
     3ce:	68 e2       	ldi	r22, 0x28	; 40
     3d0:	8d e6       	ldi	r24, 0x6D	; 109
     3d2:	18 d2       	rcall	.+1072   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x0C,TW_MT_DATA_ACK);						// Display On/Off
     3d4:	68 e2       	ldi	r22, 0x28	; 40
     3d6:	8c e0       	ldi	r24, 0x0C	; 12
     3d8:	15 d2       	rcall	.+1066   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);						// Clear Display
     3da:	68 e2       	ldi	r22, 0x28	; 40
     3dc:	81 e0       	ldi	r24, 0x01	; 1
     3de:	12 d2       	rcall	.+1060   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x06,TW_MT_DATA_ACK);						// Entry Mode Set: Cursor/Shift as characters input
     3e0:	68 e2       	ldi	r22, 0x28	; 40
     3e2:	86 e0       	ldi	r24, 0x06	; 6
     3e4:	0f d2       	rcall	.+1054   	; 0x804 <_Z16TWI_TransmitDatahh>
     3e6:	87 ea       	ldi	r24, 0xA7	; 167
     3e8:	91 e6       	ldi	r25, 0x61	; 97
     3ea:	01 97       	sbiw	r24, 0x01	; 1
     3ec:	f1 f7       	brne	.-4      	; 0x3ea <_ZN3lcd8init_LCDEv+0x66>
     3ee:	00 c0       	rjmp	.+0      	; 0x3f0 <_ZN3lcd8init_LCDEv+0x6c>
     3f0:	00 00       	nop
	_delay_ms(100);
	TWI_STOP();
     3f2:	f9 d1       	rcall	.+1010   	; 0x7e6 <_Z8TWI_STOPv>

	CGRAM();			//define CGRAM
     3f4:	ce 01       	movw	r24, r28
     3f6:	91 df       	rcall	.-222    	; 0x31a <_ZN3lcd5CGRAMEv>

	TWI_StartCommunication();
     3f8:	fa d1       	rcall	.+1012   	; 0x7ee <_Z22TWI_StartCommunicationv>
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     3fa:	68 e1       	ldi	r22, 0x18	; 24
     3fc:	8c e7       	ldi	r24, 0x7C	; 124
     3fe:	02 d2       	rcall	.+1028   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     400:	68 e2       	ldi	r22, 0x28	; 40
     402:	80 e0       	ldi	r24, 0x00	; 0
     404:	ff d1       	rcall	.+1022   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x39,TW_MT_DATA_ACK);
     406:	68 e2       	ldi	r22, 0x28	; 40
     408:	89 e3       	ldi	r24, 0x39	; 57
     40a:	fc d1       	rcall	.+1016   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);
     40c:	68 e2       	ldi	r22, 0x28	; 40
     40e:	81 e0       	ldi	r24, 0x01	; 1
     410:	f9 d1       	rcall	.+1010   	; 0x804 <_Z16TWI_TransmitDatahh>
	TWI_STOP();
     412:	e9 d1       	rcall	.+978    	; 0x7e6 <_Z8TWI_STOPv>
     414:	87 ea       	ldi	r24, 0xA7	; 167
     416:	91 e6       	ldi	r25, 0x61	; 97
     418:	01 97       	sbiw	r24, 0x01	; 1
     41a:	f1 f7       	brne	.-4      	; 0x418 <_ZN3lcd8init_LCDEv+0x94>
     41c:	00 c0       	rjmp	.+0      	; 0x41e <_ZN3lcd8init_LCDEv+0x9a>
     41e:	00 00       	nop
	_delay_ms(100);
}
     420:	df 91       	pop	r29
     422:	cf 91       	pop	r28
     424:	08 95       	ret

00000426 <_ZN3lcdC1Ev>:
#include "lcd.h"
#include "twi.h"


lcd::lcd(){
     426:	cf 93       	push	r28
     428:	df 93       	push	r29
     42a:	ec 01       	movw	r28, r24
	
	TWI_INIT();
     42c:	c9 d1       	rcall	.+914    	; 0x7c0 <_Z8TWI_INITv>
	init_LCD();
     42e:	ce 01       	movw	r24, r28
     430:	a9 df       	rcall	.-174    	; 0x384 <_ZN3lcd8init_LCDEv>
     432:	87 e8       	ldi	r24, 0x87	; 135
     434:	93 e1       	ldi	r25, 0x13	; 19
     436:	01 97       	sbiw	r24, 0x01	; 1
     438:	f1 f7       	brne	.-4      	; 0x436 <_ZN3lcdC1Ev+0x10>
     43a:	00 c0       	rjmp	.+0      	; 0x43c <_ZN3lcdC1Ev+0x16>
     43c:	00 00       	nop
	_delay_ms(20);
		
}
     43e:	df 91       	pop	r29
     440:	cf 91       	pop	r28
     442:	08 95       	ret

00000444 <_ZN3lcd5printEPhh>:
	print(text2, LINE_BOTTOM);

}


void lcd::print(unsigned char* text, uint8_t valLine){
     444:	0f 93       	push	r16
     446:	1f 93       	push	r17
     448:	cf 93       	push	r28
     44a:	df 93       	push	r29
     44c:	ec 01       	movw	r28, r24
     44e:	8b 01       	movw	r16, r22
		
	if( valLine == LINE_TOP ){
     450:	41 11       	cpse	r20, r1
     452:	0b c0       	rjmp	.+22     	; 0x46a <_ZN3lcd5printEPhh+0x26>
		SelectLine1();
     454:	4a df       	rcall	.-364    	; 0x2ea <_ZN3lcd11SelectLine1Ev>
     456:	83 ec       	ldi	r24, 0xC3	; 195
     458:	99 e0       	ldi	r25, 0x09	; 9
     45a:	01 97       	sbiw	r24, 0x01	; 1
     45c:	f1 f7       	brne	.-4      	; 0x45a <_ZN3lcd5printEPhh+0x16>
     45e:	00 c0       	rjmp	.+0      	; 0x460 <_ZN3lcd5printEPhh+0x1c>
     460:	00 00       	nop
		_delay_ms(10);
		Show(text);
     462:	b8 01       	movw	r22, r16
     464:	ce 01       	movw	r24, r28
     466:	26 df       	rcall	.-436    	; 0x2b4 <_ZN3lcd4ShowEPh>
     468:	0c c0       	rjmp	.+24     	; 0x482 <_ZN3lcd5printEPhh+0x3e>
	}else if( valLine == LINE_BOTTOM ){
     46a:	41 30       	cpi	r20, 0x01	; 1
     46c:	51 f4       	brne	.+20     	; 0x482 <_ZN3lcd5printEPhh+0x3e>
		SelectLine2();
     46e:	49 df       	rcall	.-366    	; 0x302 <_ZN3lcd11SelectLine2Ev>
     470:	83 ec       	ldi	r24, 0xC3	; 195
     472:	99 e0       	ldi	r25, 0x09	; 9
     474:	01 97       	sbiw	r24, 0x01	; 1
     476:	f1 f7       	brne	.-4      	; 0x474 <_ZN3lcd5printEPhh+0x30>
     478:	00 c0       	rjmp	.+0      	; 0x47a <_ZN3lcd5printEPhh+0x36>
     47a:	00 00       	nop
		_delay_ms(10);
		Show(text);
     47c:	b8 01       	movw	r22, r16
     47e:	ce 01       	movw	r24, r28
     480:	19 df       	rcall	.-462    	; 0x2b4 <_ZN3lcd4ShowEPh>
	}
		
}
     482:	df 91       	pop	r29
     484:	cf 91       	pop	r28
     486:	1f 91       	pop	r17
     488:	0f 91       	pop	r16
     48a:	08 95       	ret

0000048c <_ZN3lcd15test_LCD_ScreenEv>:
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);
	TWI_STOP();
	_delay_ms(100);
}

void lcd::test_LCD_Screen(){
     48c:	0f 93       	push	r16
     48e:	1f 93       	push	r17
     490:	cf 93       	push	r28
     492:	df 93       	push	r29
     494:	cd b7       	in	r28, 0x3d	; 61
     496:	de b7       	in	r29, 0x3e	; 62
     498:	a2 97       	sbiw	r28, 0x22	; 34
     49a:	0f b6       	in	r0, 0x3f	; 63
     49c:	f8 94       	cli
     49e:	de bf       	out	0x3e, r29	; 62
     4a0:	0f be       	out	0x3f, r0	; 63
     4a2:	cd bf       	out	0x3d, r28	; 61
     4a4:	8c 01       	movw	r16, r24
	
	unsigned char text1[]={"-! TEST LINE 1 !"};
     4a6:	81 e1       	ldi	r24, 0x11	; 17
     4a8:	e0 e0       	ldi	r30, 0x00	; 0
     4aa:	f1 e0       	ldi	r31, 0x01	; 1
     4ac:	de 01       	movw	r26, r28
     4ae:	52 96       	adiw	r26, 0x12	; 18
     4b0:	01 90       	ld	r0, Z+
     4b2:	0d 92       	st	X+, r0
     4b4:	8a 95       	dec	r24
     4b6:	e1 f7       	brne	.-8      	; 0x4b0 <_ZN3lcd15test_LCD_ScreenEv+0x24>
	unsigned char text2[]={"! TEST LINE 2 !-"};
     4b8:	81 e1       	ldi	r24, 0x11	; 17
     4ba:	e1 e1       	ldi	r30, 0x11	; 17
     4bc:	f1 e0       	ldi	r31, 0x01	; 1
     4be:	de 01       	movw	r26, r28
     4c0:	11 96       	adiw	r26, 0x01	; 1
     4c2:	01 90       	ld	r0, Z+
     4c4:	0d 92       	st	X+, r0
     4c6:	8a 95       	dec	r24
     4c8:	e1 f7       	brne	.-8      	; 0x4c2 <_ZN3lcd15test_LCD_ScreenEv+0x36>

	
	print(text1, LINE_TOP);
     4ca:	40 e0       	ldi	r20, 0x00	; 0
     4cc:	be 01       	movw	r22, r28
     4ce:	6e 5e       	subi	r22, 0xEE	; 238
     4d0:	7f 4f       	sbci	r23, 0xFF	; 255
     4d2:	c8 01       	movw	r24, r16
     4d4:	b7 df       	rcall	.-146    	; 0x444 <_ZN3lcd5printEPhh>
	print(text2, LINE_BOTTOM);
     4d6:	41 e0       	ldi	r20, 0x01	; 1
     4d8:	be 01       	movw	r22, r28
     4da:	6f 5f       	subi	r22, 0xFF	; 255
     4dc:	7f 4f       	sbci	r23, 0xFF	; 255
     4de:	c8 01       	movw	r24, r16
     4e0:	b1 df       	rcall	.-158    	; 0x444 <_ZN3lcd5printEPhh>
     4e2:	83 e2       	ldi	r24, 0x23	; 35
     4e4:	94 ef       	ldi	r25, 0xF4	; 244
     4e6:	01 97       	sbiw	r24, 0x01	; 1
     4e8:	f1 f7       	brne	.-4      	; 0x4e6 <_ZN3lcd15test_LCD_ScreenEv+0x5a>
     4ea:	00 c0       	rjmp	.+0      	; 0x4ec <_ZN3lcd15test_LCD_ScreenEv+0x60>
     4ec:	00 00       	nop
	_delay_ms(250);
	print(text1, LINE_BOTTOM);
     4ee:	41 e0       	ldi	r20, 0x01	; 1
     4f0:	be 01       	movw	r22, r28
     4f2:	6e 5e       	subi	r22, 0xEE	; 238
     4f4:	7f 4f       	sbci	r23, 0xFF	; 255
     4f6:	c8 01       	movw	r24, r16
     4f8:	a5 df       	rcall	.-182    	; 0x444 <_ZN3lcd5printEPhh>
	print(text2, LINE_TOP);
     4fa:	40 e0       	ldi	r20, 0x00	; 0
     4fc:	be 01       	movw	r22, r28
     4fe:	6f 5f       	subi	r22, 0xFF	; 255
     500:	7f 4f       	sbci	r23, 0xFF	; 255
     502:	c8 01       	movw	r24, r16
     504:	9f df       	rcall	.-194    	; 0x444 <_ZN3lcd5printEPhh>
     506:	83 e2       	ldi	r24, 0x23	; 35
     508:	94 ef       	ldi	r25, 0xF4	; 244
     50a:	01 97       	sbiw	r24, 0x01	; 1
     50c:	f1 f7       	brne	.-4      	; 0x50a <_ZN3lcd15test_LCD_ScreenEv+0x7e>
     50e:	00 c0       	rjmp	.+0      	; 0x510 <_ZN3lcd15test_LCD_ScreenEv+0x84>
     510:	00 00       	nop
	_delay_ms(250);
	print(text1, LINE_TOP);
     512:	40 e0       	ldi	r20, 0x00	; 0
     514:	be 01       	movw	r22, r28
     516:	6e 5e       	subi	r22, 0xEE	; 238
     518:	7f 4f       	sbci	r23, 0xFF	; 255
     51a:	c8 01       	movw	r24, r16
     51c:	93 df       	rcall	.-218    	; 0x444 <_ZN3lcd5printEPhh>
	print(text2, LINE_BOTTOM);
     51e:	41 e0       	ldi	r20, 0x01	; 1
     520:	be 01       	movw	r22, r28
     522:	6f 5f       	subi	r22, 0xFF	; 255
     524:	7f 4f       	sbci	r23, 0xFF	; 255
     526:	c8 01       	movw	r24, r16
     528:	8d df       	rcall	.-230    	; 0x444 <_ZN3lcd5printEPhh>

}
     52a:	a2 96       	adiw	r28, 0x22	; 34
     52c:	0f b6       	in	r0, 0x3f	; 63
     52e:	f8 94       	cli
     530:	de bf       	out	0x3e, r29	; 62
     532:	0f be       	out	0x3f, r0	; 63
     534:	cd bf       	out	0x3d, r28	; 61
     536:	df 91       	pop	r29
     538:	cf 91       	pop	r28
     53a:	1f 91       	pop	r17
     53c:	0f 91       	pop	r16
     53e:	08 95       	ret

00000540 <_ZN3rtc10read_blockEhPhj>:

/*
*	ReadBlock reads iCount bytes starting at cAddr into the
*	buffer pBuffer
*/
void rtc::read_block( unsigned char cAddr, unsigned char *pBuffer, unsigned int iCount ){
     540:	ef 92       	push	r14
     542:	ff 92       	push	r15
     544:	0f 93       	push	r16
     546:	1f 93       	push	r17
     548:	cf 93       	push	r28
     54a:	df 93       	push	r29
     54c:	16 2f       	mov	r17, r22
     54e:	e4 2e       	mov	r14, r20
     550:	f5 2e       	mov	r15, r21
     552:	e9 01       	movw	r28, r18
	
	spi_select( );
     554:	20 d1       	rcall	.+576    	; 0x796 <_Z10spi_selectv>

	spi_master_transmit( cAddr );
     556:	81 2f       	mov	r24, r17
     558:	2d d1       	rcall	.+602    	; 0x7b4 <_Z19spi_master_transmith>
	while( iCount-- ){
     55a:	20 97       	sbiw	r28, 0x00	; 0
     55c:	49 f0       	breq	.+18     	; 0x570 <_ZN3rtc10read_blockEhPhj+0x30>
     55e:	0e 2d       	mov	r16, r14
     560:	1f 2d       	mov	r17, r15
		*pBuffer++ = spi_master_transmit( 0 );
     562:	80 e0       	ldi	r24, 0x00	; 0
     564:	27 d1       	rcall	.+590    	; 0x7b4 <_Z19spi_master_transmith>
     566:	f8 01       	movw	r30, r16
     568:	81 93       	st	Z+, r24
     56a:	8f 01       	movw	r16, r30
     56c:	21 97       	sbiw	r28, 0x01	; 1
void rtc::read_block( unsigned char cAddr, unsigned char *pBuffer, unsigned int iCount ){
	
	spi_select( );

	spi_master_transmit( cAddr );
	while( iCount-- ){
     56e:	c9 f7       	brne	.-14     	; 0x562 <_ZN3rtc10read_blockEhPhj+0x22>
		*pBuffer++ = spi_master_transmit( 0 );
	}

	spi_deselect();
     570:	17 d1       	rcall	.+558    	; 0x7a0 <_Z12spi_deselectv>

}
     572:	df 91       	pop	r29
     574:	cf 91       	pop	r28
     576:	1f 91       	pop	r17
     578:	0f 91       	pop	r16
     57a:	ff 90       	pop	r15
     57c:	ef 90       	pop	r14
     57e:	08 95       	ret

00000580 <_ZN3rtc11write_blockEhPhj>:
/*
*  WriteBlock sends iCount bytes from the buffer pBuffer
*  to the device at iAddr + 0x80. The device uses a split
*  memory map where all write addresses are at address +0x80
*/
void rtc::write_block(unsigned char iAddr, unsigned char *pBuffer, unsigned int iCount){
     580:	ef 92       	push	r14
     582:	ff 92       	push	r15
     584:	0f 93       	push	r16
     586:	1f 93       	push	r17
     588:	cf 93       	push	r28
     58a:	df 93       	push	r29
     58c:	16 2f       	mov	r17, r22
     58e:	e4 2e       	mov	r14, r20
     590:	f5 2e       	mov	r15, r21
     592:	e9 01       	movw	r28, r18

	spi_select( );
     594:	00 d1       	rcall	.+512    	; 0x796 <_Z10spi_selectv>

	spi_master_transmit( iAddr + 0x80 );
     596:	80 e8       	ldi	r24, 0x80	; 128
     598:	81 0f       	add	r24, r17
     59a:	0c d1       	rcall	.+536    	; 0x7b4 <_Z19spi_master_transmith>
	while( iCount-- ){
     59c:	20 97       	sbiw	r28, 0x00	; 0
     59e:	41 f0       	breq	.+16     	; 0x5b0 <_ZN3rtc11write_blockEhPhj+0x30>
     5a0:	0e 2d       	mov	r16, r14
     5a2:	1f 2d       	mov	r17, r15
		spi_master_transmit( *pBuffer++ );
     5a4:	f8 01       	movw	r30, r16
     5a6:	81 91       	ld	r24, Z+
     5a8:	8f 01       	movw	r16, r30
     5aa:	04 d1       	rcall	.+520    	; 0x7b4 <_Z19spi_master_transmith>
     5ac:	21 97       	sbiw	r28, 0x01	; 1
void rtc::write_block(unsigned char iAddr, unsigned char *pBuffer, unsigned int iCount){

	spi_select( );

	spi_master_transmit( iAddr + 0x80 );
	while( iCount-- ){
     5ae:	d1 f7       	brne	.-12     	; 0x5a4 <_ZN3rtc11write_blockEhPhj+0x24>
		spi_master_transmit( *pBuffer++ );
	}

	spi_deselect( );
     5b0:	f7 d0       	rcall	.+494    	; 0x7a0 <_Z12spi_deselectv>
}
     5b2:	df 91       	pop	r29
     5b4:	cf 91       	pop	r28
     5b6:	1f 91       	pop	r17
     5b8:	0f 91       	pop	r16
     5ba:	ff 90       	pop	r15
     5bc:	ef 90       	pop	r14
     5be:	08 95       	ret

000005c0 <_ZN3rtcC1Ev>:
#include <util/delay.h>
#include "rtc.h"
#include "spi.h"


rtc::rtc(){
     5c0:	0f 93       	push	r16
     5c2:	1f 93       	push	r17
     5c4:	cf 93       	push	r28
     5c6:	df 93       	push	r29
     5c8:	00 d0       	rcall	.+0      	; 0x5ca <_ZN3rtcC1Ev+0xa>
     5ca:	cd b7       	in	r28, 0x3d	; 61
     5cc:	de b7       	in	r29, 0x3e	; 62
     5ce:	8c 01       	movw	r16, r24
	
	uint8_t tc = 0;
     5d0:	1a 82       	std	Y+2, r1	; 0x02
	uint8_t tc2 = 0xFF;
     5d2:	8f ef       	ldi	r24, 0xFF	; 255
     5d4:	89 83       	std	Y+1, r24	; 0x01


	spi_init();
     5d6:	e6 d0       	rcall	.+460    	; 0x7a4 <_Z8spi_initv>
	write_block(0x0F,&tc,1);	// Enable timer and unwrite protect memory
     5d8:	21 e0       	ldi	r18, 0x01	; 1
     5da:	30 e0       	ldi	r19, 0x00	; 0
     5dc:	ae 01       	movw	r20, r28
     5de:	4e 5f       	subi	r20, 0xFE	; 254
     5e0:	5f 4f       	sbci	r21, 0xFF	; 255
     5e2:	6f e0       	ldi	r22, 0x0F	; 15
     5e4:	c8 01       	movw	r24, r16
     5e6:	cc df       	rcall	.-104    	; 0x580 <_ZN3rtc11write_blockEhPhj>
	write_block(0x82,&tc2,1);	// set 12hr format
     5e8:	21 e0       	ldi	r18, 0x01	; 1
     5ea:	30 e0       	ldi	r19, 0x00	; 0
     5ec:	ae 01       	movw	r20, r28
     5ee:	4f 5f       	subi	r20, 0xFF	; 255
     5f0:	5f 4f       	sbci	r21, 0xFF	; 255
     5f2:	62 e8       	ldi	r22, 0x82	; 130
     5f4:	c8 01       	movw	r24, r16
     5f6:	c4 df       	rcall	.-120    	; 0x580 <_ZN3rtc11write_blockEhPhj>
	
}
     5f8:	0f 90       	pop	r0
     5fa:	0f 90       	pop	r0
     5fc:	df 91       	pop	r29
     5fe:	cf 91       	pop	r28
     600:	1f 91       	pop	r17
     602:	0f 91       	pop	r16
     604:	08 95       	ret

00000606 <_ZN3rtc8get_timeEv>:

	spi_deselect( );
}


rtc_time rtc::get_time( ){
     606:	cf 93       	push	r28
     608:	df 93       	push	r29
     60a:	cd b7       	in	r28, 0x3d	; 61
     60c:	de b7       	in	r29, 0x3e	; 62
     60e:	2e 97       	sbiw	r28, 0x0e	; 14
     610:	0f b6       	in	r0, 0x3f	; 63
     612:	f8 94       	cli
     614:	de bf       	out	0x3e, r29	; 62
     616:	0f be       	out	0x3f, r0	; 63
     618:	cd bf       	out	0x3d, r28	; 61

	rtc_time rtmToConvert;


	read_block( 0, ( unsigned char * )&rtmToConvert, sizeof( rtc_time ));
     61a:	27 e0       	ldi	r18, 0x07	; 7
     61c:	30 e0       	ldi	r19, 0x00	; 0
     61e:	ae 01       	movw	r20, r28
     620:	48 5f       	subi	r20, 0xF8	; 248
     622:	5f 4f       	sbci	r21, 0xFF	; 255
     624:	60 e0       	ldi	r22, 0x00	; 0
     626:	8c df       	rcall	.-232    	; 0x540 <_ZN3rtc10read_blockEhPhj>

	return rtmToConvert;
     628:	87 e0       	ldi	r24, 0x07	; 7
     62a:	fe 01       	movw	r30, r28
     62c:	38 96       	adiw	r30, 0x08	; 8
     62e:	de 01       	movw	r26, r28
     630:	11 96       	adiw	r26, 0x01	; 1
     632:	01 90       	ld	r0, Z+
     634:	0d 92       	st	X+, r0
     636:	8a 95       	dec	r24
     638:	e1 f7       	brne	.-8      	; 0x632 <_ZN3rtc8get_timeEv+0x2c>
     63a:	29 81       	ldd	r18, Y+1	; 0x01
     63c:	3a 81       	ldd	r19, Y+2	; 0x02
     63e:	4b 81       	ldd	r20, Y+3	; 0x03
     640:	5c 81       	ldd	r21, Y+4	; 0x04
     642:	6d 81       	ldd	r22, Y+5	; 0x05
     644:	7e 81       	ldd	r23, Y+6	; 0x06
}
     646:	8f 81       	ldd	r24, Y+7	; 0x07
     648:	90 e0       	ldi	r25, 0x00	; 0
     64a:	2e 96       	adiw	r28, 0x0e	; 14
     64c:	0f b6       	in	r0, 0x3f	; 63
     64e:	f8 94       	cli
     650:	de bf       	out	0x3e, r29	; 62
     652:	0f be       	out	0x3f, r0	; 63
     654:	cd bf       	out	0x3d, r28	; 61
     656:	df 91       	pop	r29
     658:	cf 91       	pop	r28
     65a:	08 95       	ret

0000065c <_ZN3rtc8set_timeEP8rtc_time>:


void rtc::set_time( rtc_time* rtmSetTime ){
     65c:	ab 01       	movw	r20, r22

	write_block( 0, ( unsigned char * )rtmSetTime, sizeof(rtc_time));
     65e:	27 e0       	ldi	r18, 0x07	; 7
     660:	30 e0       	ldi	r19, 0x00	; 0
     662:	60 e0       	ldi	r22, 0x00	; 0
     664:	8d cf       	rjmp	.-230    	; 0x580 <_ZN3rtc11write_blockEhPhj>
     666:	08 95       	ret

00000668 <_ZN3rtc11rtm_to_charE8rtc_timePhj>:
}


void rtc::rtm_to_char( rtc_time rtmToConvert, unsigned char* uchToReturn, unsigned int valCharLen ){
     668:	8f 92       	push	r8
     66a:	9f 92       	push	r9
     66c:	af 92       	push	r10
     66e:	bf 92       	push	r11
     670:	cf 92       	push	r12
     672:	df 92       	push	r13
     674:	ef 92       	push	r14
     676:	ff 92       	push	r15
     678:	0f 93       	push	r16
     67a:	1f 93       	push	r17
     67c:	cf 93       	push	r28
     67e:	df 93       	push	r29
     680:	cd b7       	in	r28, 0x3d	; 61
     682:	de b7       	in	r29, 0x3e	; 62
     684:	27 97       	sbiw	r28, 0x07	; 7
     686:	0f b6       	in	r0, 0x3f	; 63
     688:	f8 94       	cli
     68a:	de bf       	out	0x3e, r29	; 62
     68c:	0f be       	out	0x3f, r0	; 63
     68e:	cd bf       	out	0x3d, r28	; 61
     690:	09 83       	std	Y+1, r16	; 0x01
     692:	1a 83       	std	Y+2, r17	; 0x02
     694:	2b 83       	std	Y+3, r18	; 0x03
     696:	3c 83       	std	Y+4, r19	; 0x04
     698:	4d 83       	std	Y+5, r20	; 0x05
     69a:	5e 83       	std	Y+6, r21	; 0x06
     69c:	6f 83       	std	Y+7, r22	; 0x07
     69e:	c7 01       	movw	r24, r14
     6a0:	a6 01       	movw	r20, r12
	uchTimeOut[valTextOffset + 6] = valSecs >> 8;
	uchTimeOut[valTextOffset + 7] = valSecs & 0x00FF;
	
	memcpy( uchToReturn, uchTimeOut, valCharLen );

}
     6a2:	ad b6       	in	r10, 0x3d	; 61
     6a4:	be b6       	in	r11, 0x3e	; 62
     6a6:	f1 2e       	mov	r15, r17
     6a8:	32 2f       	mov	r19, r18
}


void rtc::rtm_to_char( rtc_time rtmToConvert, unsigned char* uchToReturn, unsigned int valCharLen ){
	
	unsigned char uchTimeOut[ valCharLen ];
     6aa:	6d b7       	in	r22, 0x3d	; 61
     6ac:	7e b7       	in	r23, 0x3e	; 62
     6ae:	6c 19       	sub	r22, r12
     6b0:	7d 09       	sbc	r23, r13
     6b2:	0f b6       	in	r0, 0x3f	; 63
     6b4:	f8 94       	cli
     6b6:	7e bf       	out	0x3e, r23	; 62
     6b8:	0f be       	out	0x3f, r0	; 63
     6ba:	6d bf       	out	0x3d, r22	; 61
     6bc:	6f 5f       	subi	r22, 0xFF	; 255
     6be:	7f 4f       	sbci	r23, 0xFF	; 255
	uint8_t valTimeLength = 8;
	unsigned int valTextOffset = ( valCharLen - valTimeLength ) / 2;
     6c0:	46 01       	movw	r8, r12
     6c2:	28 e0       	ldi	r18, 0x08	; 8
     6c4:	82 1a       	sub	r8, r18
     6c6:	91 08       	sbc	r9, r1
     6c8:	96 94       	lsr	r9
     6ca:	87 94       	ror	r8
	uint16_t valSecs = 0x2020;
	uint16_t valMins = 0x20;
	uint16_t valHours = 0x20;
	
	
	for(unsigned int valN = 0; valN < valCharLen; valN++ ){
     6cc:	c1 14       	cp	r12, r1
     6ce:	d1 04       	cpc	r13, r1
     6d0:	49 f0       	breq	.+18     	; 0x6e4 <_ZN3rtc11rtm_to_charE8rtc_timePhj+0x7c>
     6d2:	fb 01       	movw	r30, r22
     6d4:	db 01       	movw	r26, r22
     6d6:	ac 0d       	add	r26, r12
     6d8:	bd 1d       	adc	r27, r13
		uchTimeOut[valN] = ' ';
     6da:	20 e2       	ldi	r18, 0x20	; 32
     6dc:	21 93       	st	Z+, r18
	uint16_t valSecs = 0x2020;
	uint16_t valMins = 0x20;
	uint16_t valHours = 0x20;
	
	
	for(unsigned int valN = 0; valN < valCharLen; valN++ ){
     6de:	ea 17       	cp	r30, r26
     6e0:	fb 07       	cpc	r31, r27
     6e2:	e1 f7       	brne	.-8      	; 0x6dc <_ZN3rtc11rtm_to_charE8rtc_timePhj+0x74>
		uchTimeOut[valN] = ' ';
	}

	valSecs &= 0x0000;
	valSecs |= (( rtmToConvert.ucSeconds & 0xF0 ) + 0x0300 ) << 4;
     6e4:	e0 2f       	mov	r30, r16
     6e6:	e0 7f       	andi	r30, 0xF0	; 240
     6e8:	f0 e0       	ldi	r31, 0x00	; 0
     6ea:	fd 5f       	subi	r31, 0xFD	; 253
     6ec:	df 01       	movw	r26, r30
     6ee:	a2 95       	swap	r26
     6f0:	b2 95       	swap	r27
     6f2:	b0 7f       	andi	r27, 0xF0	; 240
     6f4:	ba 27       	eor	r27, r26
     6f6:	a0 7f       	andi	r26, 0xF0	; 240
     6f8:	ba 27       	eor	r27, r26
	valSecs |= ( rtmToConvert.ucSeconds & 0x0F) + 0x0030;
     6fa:	0f 70       	andi	r16, 0x0F	; 15
     6fc:	e0 2f       	mov	r30, r16
     6fe:	f0 e0       	ldi	r31, 0x00	; 0
     700:	f0 96       	adiw	r30, 0x30	; 48
     702:	6d 01       	movw	r12, r26
     704:	ce 2a       	or	r12, r30
     706:	df 2a       	or	r13, r31
	valMins &= 0x0000;
	valMins |= (( rtmToConvert.ucMinutes & 0xF0 ) + 0x0300 ) << 4;
     708:	af 2d       	mov	r26, r15
     70a:	a0 7f       	andi	r26, 0xF0	; 240
     70c:	b0 e0       	ldi	r27, 0x00	; 0
     70e:	bd 5f       	subi	r27, 0xFD	; 253
     710:	8d 01       	movw	r16, r26
     712:	02 95       	swap	r16
     714:	12 95       	swap	r17
     716:	10 7f       	andi	r17, 0xF0	; 240
     718:	10 27       	eor	r17, r16
     71a:	00 7f       	andi	r16, 0xF0	; 240
     71c:	10 27       	eor	r17, r16
	valMins |= ( rtmToConvert.ucMinutes & 0x0F) + 0x0030;
     71e:	af 2d       	mov	r26, r15
     720:	af 70       	andi	r26, 0x0F	; 15
     722:	b0 e0       	ldi	r27, 0x00	; 0
     724:	d0 96       	adiw	r26, 0x30	; 48
     726:	a0 2b       	or	r26, r16
     728:	b1 2b       	or	r27, r17
	valHours &= 0x0000;
	valHours |= (( rtmToConvert.ucHours & 0x10 ) + 0x0300 ) << 4;
     72a:	03 2f       	mov	r16, r19
     72c:	00 71       	andi	r16, 0x10	; 16
     72e:	10 e0       	ldi	r17, 0x00	; 0
     730:	1d 5f       	subi	r17, 0xFD	; 253
     732:	02 95       	swap	r16
     734:	12 95       	swap	r17
     736:	10 7f       	andi	r17, 0xF0	; 240
     738:	10 27       	eor	r17, r16
     73a:	00 7f       	andi	r16, 0xF0	; 240
     73c:	10 27       	eor	r17, r16
	valHours |= ( rtmToConvert.ucHours & 0x0F) + 0x0030;
     73e:	3f 70       	andi	r19, 0x0F	; 15
     740:	23 2f       	mov	r18, r19
     742:	30 e0       	ldi	r19, 0x00	; 0
     744:	20 5d       	subi	r18, 0xD0	; 208
     746:	3f 4f       	sbci	r19, 0xFF	; 255
     748:	20 2b       	or	r18, r16
     74a:	31 2b       	or	r19, r17
	uchTimeOut[valTextOffset] = valHours >> 8;
     74c:	fb 01       	movw	r30, r22
     74e:	e8 0d       	add	r30, r8
     750:	f9 1d       	adc	r31, r9
     752:	30 83       	st	Z, r19
	uchTimeOut[valTextOffset + 1] = valHours & 0x00FF;
     754:	21 83       	std	Z+1, r18	; 0x01
	uchTimeOut[valTextOffset + 2] = ':';
     756:	2a e3       	ldi	r18, 0x3A	; 58
     758:	22 83       	std	Z+2, r18	; 0x02
	uchTimeOut[valTextOffset + 3] = valMins >> 8;
     75a:	b3 83       	std	Z+3, r27	; 0x03
	uchTimeOut[valTextOffset + 4] = valMins & 0x00FF;
     75c:	a4 83       	std	Z+4, r26	; 0x04
	uchTimeOut[valTextOffset + 5] = ':';
     75e:	25 83       	std	Z+5, r18	; 0x05
	uchTimeOut[valTextOffset + 6] = valSecs >> 8;
     760:	d6 82       	std	Z+6, r13	; 0x06
	uchTimeOut[valTextOffset + 7] = valSecs & 0x00FF;
     762:	c7 82       	std	Z+7, r12	; 0x07
	
	memcpy( uchToReturn, uchTimeOut, valCharLen );
     764:	31 d5       	rcall	.+2658   	; 0x11c8 <memcpy>

}
     766:	0f b6       	in	r0, 0x3f	; 63
     768:	f8 94       	cli
     76a:	be be       	out	0x3e, r11	; 62
     76c:	0f be       	out	0x3f, r0	; 63
     76e:	ad be       	out	0x3d, r10	; 61
     770:	27 96       	adiw	r28, 0x07	; 7
     772:	0f b6       	in	r0, 0x3f	; 63
     774:	f8 94       	cli
     776:	de bf       	out	0x3e, r29	; 62
     778:	0f be       	out	0x3f, r0	; 63
     77a:	cd bf       	out	0x3d, r28	; 61
     77c:	df 91       	pop	r29
     77e:	cf 91       	pop	r28
     780:	1f 91       	pop	r17
     782:	0f 91       	pop	r16
     784:	ff 90       	pop	r15
     786:	ef 90       	pop	r14
     788:	df 90       	pop	r13
     78a:	cf 90       	pop	r12
     78c:	bf 90       	pop	r11
     78e:	af 90       	pop	r10
     790:	9f 90       	pop	r9
     792:	8f 90       	pop	r8
     794:	08 95       	ret

00000796 <_Z10spi_selectv>:
 */ 
 #include "spi.h"

 void spi_select( ) {

	 SPCR |= ( 1 << CPHA );
     796:	8c b5       	in	r24, 0x2c	; 44
     798:	84 60       	ori	r24, 0x04	; 4
     79a:	8c bd       	out	0x2c, r24	; 44
	 PORTB |= ( 1 << SS_PIN );
     79c:	2c 9a       	sbi	0x05, 4	; 5
     79e:	08 95       	ret

000007a0 <_Z12spi_deselectv>:
 *	This routine de-selects the device by lowering the CE
 *	line. Must be done after the master transmit is complete
 */
 void spi_deselect( ){

	 PORTB &= ~( 1 << SS_PIN );
     7a0:	2c 98       	cbi	0x05, 4	; 5
     7a2:	08 95       	ret

000007a4 <_Z8spi_initv>:
 void spi_init( ){

	 char IOReg;

	 /* Outputs: MOSI and SCK out, all others inputs */
	 DDRB = ( 1 << DD_MOSI_PIN ) | ( 1 << DD_SCK_PIN ) | ( 1 << DD_SS_PIN );
     7a4:	80 eb       	ldi	r24, 0xB0	; 176
     7a6:	84 b9       	out	0x04, r24	; 4
	 /* Enable SPI, Master, CPOL=0, CPHA=1, set clock rate fck/16 */
	 SPCR = ( 1 << SPE ) | ( 1 << MSTR ) | ( 1 << SPR0 );	// POSSIBLE ERROR: PULLING DATA HIGH
     7a8:	81 e5       	ldi	r24, 0x51	; 81
     7aa:	8c bd       	out	0x2c, r24	; 44
	 
	 /* Clear the SPIF bit in SPSR */
	 IOReg = SPSR;
     7ac:	8d b5       	in	r24, 0x2d	; 45
	 IOReg = SPDR;
     7ae:	8e b5       	in	r24, 0x2e	; 46

	 spi_deselect( );
     7b0:	f7 cf       	rjmp	.-18     	; 0x7a0 <_Z12spi_deselectv>
     7b2:	08 95       	ret

000007b4 <_Z19spi_master_transmith>:

 // This routine exchanges 1 byte with the SPI port.
 unsigned char spi_master_transmit( unsigned char cData )
 {

	 SPDR  = cData;	// Set Pointer to beginning of String
     7b4:	8e bd       	out	0x2e, r24	; 46
	 /* wait until Char is sent */
	 while ( ! (SPSR & ( 1 << SPIF ))){
     7b6:	0d b4       	in	r0, 0x2d	; 45
     7b8:	07 fe       	sbrs	r0, 7
     7ba:	fd cf       	rjmp	.-6      	; 0x7b6 <_Z19spi_master_transmith+0x2>
		 ;
	 }

	 return SPDR;
     7bc:	8e b5       	in	r24, 0x2e	; 46
 }
     7be:	08 95       	ret

000007c0 <_Z8TWI_INITv>:

}

void TWI_ClearFlagAndEnableWithAck()
{
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);// Clear Flag and Enable
     7c0:	e4 e6       	ldi	r30, 0x64	; 100
     7c2:	f0 e0       	ldi	r31, 0x00	; 0
     7c4:	80 81       	ld	r24, Z
     7c6:	8f 77       	andi	r24, 0x7F	; 127
     7c8:	80 83       	st	Z, r24
     7ca:	ec eb       	ldi	r30, 0xBC	; 188
     7cc:	f0 e0       	ldi	r31, 0x00	; 0
     7ce:	80 81       	ld	r24, Z
     7d0:	8e 7f       	andi	r24, 0xFE	; 254
     7d2:	80 83       	st	Z, r24
     7d4:	82 e0       	ldi	r24, 0x02	; 2
     7d6:	80 93 b8 00 	sts	0x00B8, r24
     7da:	e9 eb       	ldi	r30, 0xB9	; 185
     7dc:	f0 e0       	ldi	r31, 0x00	; 0
     7de:	80 81       	ld	r24, Z
     7e0:	8d 7f       	andi	r24, 0xFD	; 253
     7e2:	80 83       	st	Z, r24
     7e4:	08 95       	ret

000007e6 <_Z8TWI_STOPv>:
}

void TWI_STOP(){
	
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
     7e6:	84 e9       	ldi	r24, 0x94	; 148
     7e8:	80 93 bc 00 	sts	0x00BC, r24
     7ec:	08 95       	ret

000007ee <_Z22TWI_StartCommunicationv>:
	
}

void TWI_StartCommunication(){
	
	TWCR = (1 << TWEN) | (1 << TWINT) | (1 << TWSTA);
     7ee:	84 ea       	ldi	r24, 0xA4	; 164
     7f0:	80 93 bc 00 	sts	0x00BC, r24
	while ( ! (TWCR & (1 << TWINT)));				// wait for flag to be set
     7f4:	ec eb       	ldi	r30, 0xBC	; 188
     7f6:	f0 e0       	ldi	r31, 0x00	; 0
     7f8:	80 81       	ld	r24, Z
     7fa:	88 23       	and	r24, r24
     7fc:	ec f7       	brge	.-6      	; 0x7f8 <_Z22TWI_StartCommunicationv+0xa>
}


void TWI_CheckStatusRegister(uint8_t Status){

	if( (TWSR & 0xF8) != Status ) {					// Error check for start condition
     7fe:	80 91 b9 00 	lds	r24, 0x00B9
     802:	08 95       	ret

00000804 <_Z16TWI_TransmitDatahh>:
	
}

void TWI_TransmitData(uint8_t TwiData, uint8_t StatusCode){
	
	TWDR = TwiData;
     804:	80 93 bb 00 	sts	0x00BB, r24
}


void TWI_ClearFlagAndEnable(){

	TWCR = (1 << TWINT) | (1 << TWEN);				// Clear Flag and Enable
     808:	84 e8       	ldi	r24, 0x84	; 132
     80a:	80 93 bc 00 	sts	0x00BC, r24
	
	TWDR = TwiData;
	/*After TWDR is loaded with SLA+W, a specific val must be written to TWCR, instucting the TWINT hardware
	to transmit the SLA+W present in TWDR*/
	TWI_ClearFlagAndEnable();
	while ( ! (TWCR & (1 << TWINT)));	// wait for flag to be set
     80e:	ec eb       	ldi	r30, 0xBC	; 188
     810:	f0 e0       	ldi	r31, 0x00	; 0
     812:	80 81       	ld	r24, Z
     814:	88 23       	and	r24, r24
     816:	ec f7       	brge	.-6      	; 0x812 <_Z16TWI_TransmitDatahh+0xe>
}


void TWI_CheckStatusRegister(uint8_t Status){

	if( (TWSR & 0xF8) != Status ) {					// Error check for start condition
     818:	80 91 b9 00 	lds	r24, 0x00B9
     81c:	08 95       	ret

0000081e <_Z12vs1011_nullsj>:
	}

	VS_PORT |= ( 1 << VS_DCS );				// Deactivate DCS

	return 0;
}
     81e:	cf 93       	push	r28
     820:	df 93       	push	r29
     822:	ec 01       	movw	r28, r24
     824:	89 2b       	or	r24, r25
     826:	21 f0       	breq	.+8      	; 0x830 <_Z12vs1011_nullsj+0x12>
     828:	80 e0       	ldi	r24, 0x00	; 0
     82a:	c4 df       	rcall	.-120    	; 0x7b4 <_Z19spi_master_transmith>
     82c:	21 97       	sbiw	r28, 0x01	; 1
     82e:	e1 f7       	brne	.-8      	; 0x828 <_Z12vs1011_nullsj+0xa>
     830:	df 91       	pop	r29
     832:	cf 91       	pop	r28
     834:	08 95       	ret

00000836 <_Z8WriteSciht>:
     836:	1f 93       	push	r17
     838:	cf 93       	push	r28
     83a:	df 93       	push	r29
     83c:	18 2f       	mov	r17, r24
     83e:	c6 2f       	mov	r28, r22
     840:	d7 2f       	mov	r29, r23
     842:	58 98       	cbi	0x0b, 0	; 11
     844:	82 e0       	ldi	r24, 0x02	; 2
     846:	b6 df       	rcall	.-148    	; 0x7b4 <_Z19spi_master_transmith>
     848:	81 2f       	mov	r24, r17
     84a:	b4 df       	rcall	.-152    	; 0x7b4 <_Z19spi_master_transmith>
     84c:	8d 2f       	mov	r24, r29
     84e:	b2 df       	rcall	.-156    	; 0x7b4 <_Z19spi_master_transmith>
     850:	8c 2f       	mov	r24, r28
     852:	b0 df       	rcall	.-160    	; 0x7b4 <_Z19spi_master_transmith>
     854:	58 9a       	sbi	0x0b, 0	; 11
     856:	df 91       	pop	r29
     858:	cf 91       	pop	r28
     85a:	1f 91       	pop	r17
     85c:	08 95       	ret

0000085e <_Z20vs1011_sinewave_beeph>:
     85e:	cf 93       	push	r28
     860:	df 93       	push	r29
     862:	c8 2f       	mov	r28, r24
     864:	88 e0       	ldi	r24, 0x08	; 8
     866:	90 e0       	ldi	r25, 0x00	; 0
     868:	da df       	rcall	.-76     	; 0x81e <_Z12vs1011_nullsj>
     86a:	f8 94       	cli
     86c:	60 e2       	ldi	r22, 0x20	; 32
     86e:	70 e0       	ldi	r23, 0x00	; 0
     870:	80 e0       	ldi	r24, 0x00	; 0
     872:	e1 df       	rcall	.-62     	; 0x836 <_Z8WriteSciht>
     874:	d4 e6       	ldi	r29, 0x64	; 100
     876:	1d c0       	rjmp	.+58     	; 0x8b2 <_Z20vs1011_sinewave_beeph+0x54>
     878:	e9 ef       	ldi	r30, 0xF9	; 249
     87a:	f0 e0       	ldi	r31, 0x00	; 0
     87c:	31 97       	sbiw	r30, 0x01	; 1
     87e:	f1 f7       	brne	.-4      	; 0x87c <_Z20vs1011_sinewave_beeph+0x1e>
     880:	00 c0       	rjmp	.+0      	; 0x882 <_Z20vs1011_sinewave_beeph+0x24>
     882:	00 00       	nop
     884:	81 50       	subi	r24, 0x01	; 1
     886:	c1 f7       	brne	.-16     	; 0x878 <_Z20vs1011_sinewave_beeph+0x1a>
     888:	85 e4       	ldi	r24, 0x45	; 69
     88a:	94 df       	rcall	.-216    	; 0x7b4 <_Z19spi_master_transmith>
     88c:	88 e7       	ldi	r24, 0x78	; 120
     88e:	92 df       	rcall	.-220    	; 0x7b4 <_Z19spi_master_transmith>
     890:	89 e6       	ldi	r24, 0x69	; 105
     892:	90 df       	rcall	.-224    	; 0x7b4 <_Z19spi_master_transmith>
     894:	84 e7       	ldi	r24, 0x74	; 116
     896:	8e df       	rcall	.-228    	; 0x7b4 <_Z19spi_master_transmith>
     898:	88 e0       	ldi	r24, 0x08	; 8
     89a:	90 e0       	ldi	r25, 0x00	; 0
     89c:	c0 df       	rcall	.-128    	; 0x81e <_Z12vs1011_nullsj>
     89e:	8d 2f       	mov	r24, r29
     8a0:	e9 ef       	ldi	r30, 0xF9	; 249
     8a2:	f0 e0       	ldi	r31, 0x00	; 0
     8a4:	31 97       	sbiw	r30, 0x01	; 1
     8a6:	f1 f7       	brne	.-4      	; 0x8a4 <_Z20vs1011_sinewave_beeph+0x46>
     8a8:	00 c0       	rjmp	.+0      	; 0x8aa <_Z20vs1011_sinewave_beeph+0x4c>
     8aa:	00 00       	nop
     8ac:	81 50       	subi	r24, 0x01	; 1
     8ae:	c1 f7       	brne	.-16     	; 0x8a0 <_Z20vs1011_sinewave_beeph+0x42>
     8b0:	c1 50       	subi	r28, 0x01	; 1
     8b2:	cc 23       	and	r28, r28
     8b4:	69 f0       	breq	.+26     	; 0x8d0 <_Z20vs1011_sinewave_beeph+0x72>
     8b6:	83 e5       	ldi	r24, 0x53	; 83
     8b8:	7d df       	rcall	.-262    	; 0x7b4 <_Z19spi_master_transmith>
     8ba:	8f ee       	ldi	r24, 0xEF	; 239
     8bc:	7b df       	rcall	.-266    	; 0x7b4 <_Z19spi_master_transmith>
     8be:	8e e6       	ldi	r24, 0x6E	; 110
     8c0:	79 df       	rcall	.-270    	; 0x7b4 <_Z19spi_master_transmith>
     8c2:	84 e0       	ldi	r24, 0x04	; 4
     8c4:	77 df       	rcall	.-274    	; 0x7b4 <_Z19spi_master_transmith>
     8c6:	84 e0       	ldi	r24, 0x04	; 4
     8c8:	90 e0       	ldi	r25, 0x00	; 0
     8ca:	a9 df       	rcall	.-174    	; 0x81e <_Z12vs1011_nullsj>
     8cc:	8d 2f       	mov	r24, r29
     8ce:	d4 cf       	rjmp	.-88     	; 0x878 <_Z20vs1011_sinewave_beeph+0x1a>
     8d0:	78 94       	sei
     8d2:	df 91       	pop	r29
     8d4:	cf 91       	pop	r28
     8d6:	08 95       	ret

000008d8 <_Z10InitVS1011v>:

/* Initialization */
void InitVS1011(void) {
	VS_PORT &= ~( 1 << VS_RESET );			// Reset Vs1011
     8d8:	5b 98       	cbi	0x0b, 3	; 11
	VS_PORT |= ( 1 << VS_CS );				// CS High
     8da:	58 9a       	sbi	0x0b, 0	; 11
	VS_PORT |= ( 1 << VS_DCS );				// DCS High
     8dc:	59 9a       	sbi	0x0b, 1	; 11
	VS_PORT |= ( 1 << VS_RESET );			// Out of Reset
     8de:	5b 9a       	sbi	0x0b, 3	; 11
	// SCI_MODE_INT_VAL separately defined for each (7) connection case
	WriteSci( SCI_MODE, SCI_MODE_INIT_VAL );
     8e0:	60 e0       	ldi	r22, 0x00	; 0
     8e2:	78 e0       	ldi	r23, 0x08	; 8
     8e4:	80 e0       	ldi	r24, 0x00	; 0
     8e6:	a7 cf       	rjmp	.-178    	; 0x836 <_Z8WriteSciht>
     8e8:	08 95       	ret

000008ea <_Z22VS1011setDataDirectionv>:
	// for how long to wait
}

void VS1011setDataDirection(void) {
	/* Set Data Direction for VS_PORT */
	VS_PORT_DDR |=	0b11111011;
     8ea:	8a b1       	in	r24, 0x0a	; 10
     8ec:	8b 6f       	ori	r24, 0xFB	; 251
     8ee:	8a b9       	out	0x0a, r24	; 10
     8f0:	08 95       	ret

000008f2 <vfprintf>:
     8f2:	2f 92       	push	r2
     8f4:	3f 92       	push	r3
     8f6:	4f 92       	push	r4
     8f8:	5f 92       	push	r5
     8fa:	6f 92       	push	r6
     8fc:	7f 92       	push	r7
     8fe:	8f 92       	push	r8
     900:	9f 92       	push	r9
     902:	af 92       	push	r10
     904:	bf 92       	push	r11
     906:	cf 92       	push	r12
     908:	df 92       	push	r13
     90a:	ef 92       	push	r14
     90c:	ff 92       	push	r15
     90e:	0f 93       	push	r16
     910:	1f 93       	push	r17
     912:	cf 93       	push	r28
     914:	df 93       	push	r29
     916:	cd b7       	in	r28, 0x3d	; 61
     918:	de b7       	in	r29, 0x3e	; 62
     91a:	63 97       	sbiw	r28, 0x13	; 19
     91c:	0f b6       	in	r0, 0x3f	; 63
     91e:	f8 94       	cli
     920:	de bf       	out	0x3e, r29	; 62
     922:	0f be       	out	0x3f, r0	; 63
     924:	cd bf       	out	0x3d, r28	; 61
     926:	6c 01       	movw	r12, r24
     928:	4b 01       	movw	r8, r22
     92a:	2a 01       	movw	r4, r20
     92c:	fc 01       	movw	r30, r24
     92e:	17 82       	std	Z+7, r1	; 0x07
     930:	16 82       	std	Z+6, r1	; 0x06
     932:	83 81       	ldd	r24, Z+3	; 0x03
     934:	81 ff       	sbrs	r24, 1
     936:	29 c3       	rjmp	.+1618   	; 0xf8a <vfprintf+0x698>
     938:	ae 01       	movw	r20, r28
     93a:	4f 5f       	subi	r20, 0xFF	; 255
     93c:	5f 4f       	sbci	r21, 0xFF	; 255
     93e:	3a 01       	movw	r6, r20
     940:	f6 01       	movw	r30, r12
     942:	93 81       	ldd	r25, Z+3	; 0x03
     944:	f4 01       	movw	r30, r8
     946:	93 fd       	sbrc	r25, 3
     948:	85 91       	lpm	r24, Z+
     94a:	93 ff       	sbrs	r25, 3
     94c:	81 91       	ld	r24, Z+
     94e:	4f 01       	movw	r8, r30
     950:	88 23       	and	r24, r24
     952:	09 f4       	brne	.+2      	; 0x956 <vfprintf+0x64>
     954:	16 c3       	rjmp	.+1580   	; 0xf82 <vfprintf+0x690>
     956:	85 32       	cpi	r24, 0x25	; 37
     958:	39 f4       	brne	.+14     	; 0x968 <vfprintf+0x76>
     95a:	93 fd       	sbrc	r25, 3
     95c:	85 91       	lpm	r24, Z+
     95e:	93 ff       	sbrs	r25, 3
     960:	81 91       	ld	r24, Z+
     962:	4f 01       	movw	r8, r30
     964:	85 32       	cpi	r24, 0x25	; 37
     966:	31 f4       	brne	.+12     	; 0x974 <vfprintf+0x82>
     968:	b6 01       	movw	r22, r12
     96a:	90 e0       	ldi	r25, 0x00	; 0
     96c:	41 d4       	rcall	.+2178   	; 0x11f0 <fputc>
     96e:	52 01       	movw	r10, r4
     970:	25 01       	movw	r4, r10
     972:	e6 cf       	rjmp	.-52     	; 0x940 <vfprintf+0x4e>
     974:	10 e0       	ldi	r17, 0x00	; 0
     976:	f1 2c       	mov	r15, r1
     978:	20 e0       	ldi	r18, 0x00	; 0
     97a:	20 32       	cpi	r18, 0x20	; 32
     97c:	a0 f4       	brcc	.+40     	; 0x9a6 <vfprintf+0xb4>
     97e:	8b 32       	cpi	r24, 0x2B	; 43
     980:	69 f0       	breq	.+26     	; 0x99c <vfprintf+0xaa>
     982:	30 f4       	brcc	.+12     	; 0x990 <vfprintf+0x9e>
     984:	80 32       	cpi	r24, 0x20	; 32
     986:	59 f0       	breq	.+22     	; 0x99e <vfprintf+0xac>
     988:	83 32       	cpi	r24, 0x23	; 35
     98a:	69 f4       	brne	.+26     	; 0x9a6 <vfprintf+0xb4>
     98c:	20 61       	ori	r18, 0x10	; 16
     98e:	2c c0       	rjmp	.+88     	; 0x9e8 <vfprintf+0xf6>
     990:	8d 32       	cpi	r24, 0x2D	; 45
     992:	39 f0       	breq	.+14     	; 0x9a2 <vfprintf+0xb0>
     994:	80 33       	cpi	r24, 0x30	; 48
     996:	39 f4       	brne	.+14     	; 0x9a6 <vfprintf+0xb4>
     998:	21 60       	ori	r18, 0x01	; 1
     99a:	26 c0       	rjmp	.+76     	; 0x9e8 <vfprintf+0xf6>
     99c:	22 60       	ori	r18, 0x02	; 2
     99e:	24 60       	ori	r18, 0x04	; 4
     9a0:	23 c0       	rjmp	.+70     	; 0x9e8 <vfprintf+0xf6>
     9a2:	28 60       	ori	r18, 0x08	; 8
     9a4:	21 c0       	rjmp	.+66     	; 0x9e8 <vfprintf+0xf6>
     9a6:	27 fd       	sbrc	r18, 7
     9a8:	27 c0       	rjmp	.+78     	; 0x9f8 <vfprintf+0x106>
     9aa:	30 ed       	ldi	r19, 0xD0	; 208
     9ac:	38 0f       	add	r19, r24
     9ae:	3a 30       	cpi	r19, 0x0A	; 10
     9b0:	78 f4       	brcc	.+30     	; 0x9d0 <vfprintf+0xde>
     9b2:	26 ff       	sbrs	r18, 6
     9b4:	06 c0       	rjmp	.+12     	; 0x9c2 <vfprintf+0xd0>
     9b6:	fa e0       	ldi	r31, 0x0A	; 10
     9b8:	1f 9f       	mul	r17, r31
     9ba:	30 0d       	add	r19, r0
     9bc:	11 24       	eor	r1, r1
     9be:	13 2f       	mov	r17, r19
     9c0:	13 c0       	rjmp	.+38     	; 0x9e8 <vfprintf+0xf6>
     9c2:	4a e0       	ldi	r20, 0x0A	; 10
     9c4:	f4 9e       	mul	r15, r20
     9c6:	30 0d       	add	r19, r0
     9c8:	11 24       	eor	r1, r1
     9ca:	f3 2e       	mov	r15, r19
     9cc:	20 62       	ori	r18, 0x20	; 32
     9ce:	0c c0       	rjmp	.+24     	; 0x9e8 <vfprintf+0xf6>
     9d0:	8e 32       	cpi	r24, 0x2E	; 46
     9d2:	21 f4       	brne	.+8      	; 0x9dc <vfprintf+0xea>
     9d4:	26 fd       	sbrc	r18, 6
     9d6:	d5 c2       	rjmp	.+1450   	; 0xf82 <vfprintf+0x690>
     9d8:	20 64       	ori	r18, 0x40	; 64
     9da:	06 c0       	rjmp	.+12     	; 0x9e8 <vfprintf+0xf6>
     9dc:	8c 36       	cpi	r24, 0x6C	; 108
     9de:	11 f4       	brne	.+4      	; 0x9e4 <vfprintf+0xf2>
     9e0:	20 68       	ori	r18, 0x80	; 128
     9e2:	02 c0       	rjmp	.+4      	; 0x9e8 <vfprintf+0xf6>
     9e4:	88 36       	cpi	r24, 0x68	; 104
     9e6:	41 f4       	brne	.+16     	; 0x9f8 <vfprintf+0x106>
     9e8:	f4 01       	movw	r30, r8
     9ea:	93 fd       	sbrc	r25, 3
     9ec:	85 91       	lpm	r24, Z+
     9ee:	93 ff       	sbrs	r25, 3
     9f0:	81 91       	ld	r24, Z+
     9f2:	4f 01       	movw	r8, r30
     9f4:	81 11       	cpse	r24, r1
     9f6:	c1 cf       	rjmp	.-126    	; 0x97a <vfprintf+0x88>
     9f8:	9b eb       	ldi	r25, 0xBB	; 187
     9fa:	98 0f       	add	r25, r24
     9fc:	93 30       	cpi	r25, 0x03	; 3
     9fe:	18 f4       	brcc	.+6      	; 0xa06 <vfprintf+0x114>
     a00:	20 61       	ori	r18, 0x10	; 16
     a02:	80 5e       	subi	r24, 0xE0	; 224
     a04:	06 c0       	rjmp	.+12     	; 0xa12 <vfprintf+0x120>
     a06:	9b e9       	ldi	r25, 0x9B	; 155
     a08:	98 0f       	add	r25, r24
     a0a:	93 30       	cpi	r25, 0x03	; 3
     a0c:	08 f0       	brcs	.+2      	; 0xa10 <vfprintf+0x11e>
     a0e:	64 c1       	rjmp	.+712    	; 0xcd8 <vfprintf+0x3e6>
     a10:	2f 7e       	andi	r18, 0xEF	; 239
     a12:	26 ff       	sbrs	r18, 6
     a14:	16 e0       	ldi	r17, 0x06	; 6
     a16:	2f 73       	andi	r18, 0x3F	; 63
     a18:	32 2e       	mov	r3, r18
     a1a:	85 36       	cpi	r24, 0x65	; 101
     a1c:	19 f4       	brne	.+6      	; 0xa24 <vfprintf+0x132>
     a1e:	20 64       	ori	r18, 0x40	; 64
     a20:	32 2e       	mov	r3, r18
     a22:	08 c0       	rjmp	.+16     	; 0xa34 <vfprintf+0x142>
     a24:	86 36       	cpi	r24, 0x66	; 102
     a26:	21 f4       	brne	.+8      	; 0xa30 <vfprintf+0x13e>
     a28:	f2 2f       	mov	r31, r18
     a2a:	f0 68       	ori	r31, 0x80	; 128
     a2c:	3f 2e       	mov	r3, r31
     a2e:	02 c0       	rjmp	.+4      	; 0xa34 <vfprintf+0x142>
     a30:	11 11       	cpse	r17, r1
     a32:	11 50       	subi	r17, 0x01	; 1
     a34:	37 fe       	sbrs	r3, 7
     a36:	07 c0       	rjmp	.+14     	; 0xa46 <vfprintf+0x154>
     a38:	1c 33       	cpi	r17, 0x3C	; 60
     a3a:	50 f4       	brcc	.+20     	; 0xa50 <vfprintf+0x15e>
     a3c:	ee 24       	eor	r14, r14
     a3e:	e3 94       	inc	r14
     a40:	e1 0e       	add	r14, r17
     a42:	27 e0       	ldi	r18, 0x07	; 7
     a44:	0b c0       	rjmp	.+22     	; 0xa5c <vfprintf+0x16a>
     a46:	18 30       	cpi	r17, 0x08	; 8
     a48:	38 f0       	brcs	.+14     	; 0xa58 <vfprintf+0x166>
     a4a:	27 e0       	ldi	r18, 0x07	; 7
     a4c:	17 e0       	ldi	r17, 0x07	; 7
     a4e:	05 c0       	rjmp	.+10     	; 0xa5a <vfprintf+0x168>
     a50:	27 e0       	ldi	r18, 0x07	; 7
     a52:	4c e3       	ldi	r20, 0x3C	; 60
     a54:	e4 2e       	mov	r14, r20
     a56:	02 c0       	rjmp	.+4      	; 0xa5c <vfprintf+0x16a>
     a58:	21 2f       	mov	r18, r17
     a5a:	e1 2c       	mov	r14, r1
     a5c:	52 01       	movw	r10, r4
     a5e:	44 e0       	ldi	r20, 0x04	; 4
     a60:	a4 0e       	add	r10, r20
     a62:	b1 1c       	adc	r11, r1
     a64:	f2 01       	movw	r30, r4
     a66:	60 81       	ld	r22, Z
     a68:	71 81       	ldd	r23, Z+1	; 0x01
     a6a:	82 81       	ldd	r24, Z+2	; 0x02
     a6c:	93 81       	ldd	r25, Z+3	; 0x03
     a6e:	0e 2d       	mov	r16, r14
     a70:	a3 01       	movw	r20, r6
     a72:	c7 d2       	rcall	.+1422   	; 0x1002 <__ftoa_engine>
     a74:	2c 01       	movw	r4, r24
     a76:	09 81       	ldd	r16, Y+1	; 0x01
     a78:	00 ff       	sbrs	r16, 0
     a7a:	02 c0       	rjmp	.+4      	; 0xa80 <vfprintf+0x18e>
     a7c:	03 ff       	sbrs	r16, 3
     a7e:	07 c0       	rjmp	.+14     	; 0xa8e <vfprintf+0x19c>
     a80:	31 fc       	sbrc	r3, 1
     a82:	08 c0       	rjmp	.+16     	; 0xa94 <vfprintf+0x1a2>
     a84:	32 fe       	sbrs	r3, 2
     a86:	09 c0       	rjmp	.+18     	; 0xa9a <vfprintf+0x1a8>
     a88:	30 e2       	ldi	r19, 0x20	; 32
     a8a:	23 2e       	mov	r2, r19
     a8c:	07 c0       	rjmp	.+14     	; 0xa9c <vfprintf+0x1aa>
     a8e:	2d e2       	ldi	r18, 0x2D	; 45
     a90:	22 2e       	mov	r2, r18
     a92:	04 c0       	rjmp	.+8      	; 0xa9c <vfprintf+0x1aa>
     a94:	9b e2       	ldi	r25, 0x2B	; 43
     a96:	29 2e       	mov	r2, r25
     a98:	01 c0       	rjmp	.+2      	; 0xa9c <vfprintf+0x1aa>
     a9a:	21 2c       	mov	r2, r1
     a9c:	80 2f       	mov	r24, r16
     a9e:	8c 70       	andi	r24, 0x0C	; 12
     aa0:	19 f0       	breq	.+6      	; 0xaa8 <vfprintf+0x1b6>
     aa2:	21 10       	cpse	r2, r1
     aa4:	51 c2       	rjmp	.+1186   	; 0xf48 <vfprintf+0x656>
     aa6:	8d c2       	rjmp	.+1306   	; 0xfc2 <vfprintf+0x6d0>
     aa8:	37 fe       	sbrs	r3, 7
     aaa:	0f c0       	rjmp	.+30     	; 0xaca <vfprintf+0x1d8>
     aac:	e4 0c       	add	r14, r4
     aae:	04 ff       	sbrs	r16, 4
     ab0:	04 c0       	rjmp	.+8      	; 0xaba <vfprintf+0x1c8>
     ab2:	8a 81       	ldd	r24, Y+2	; 0x02
     ab4:	81 33       	cpi	r24, 0x31	; 49
     ab6:	09 f4       	brne	.+2      	; 0xaba <vfprintf+0x1c8>
     ab8:	ea 94       	dec	r14
     aba:	1e 14       	cp	r1, r14
     abc:	74 f5       	brge	.+92     	; 0xb1a <vfprintf+0x228>
     abe:	f8 e0       	ldi	r31, 0x08	; 8
     ac0:	fe 15       	cp	r31, r14
     ac2:	78 f5       	brcc	.+94     	; 0xb22 <vfprintf+0x230>
     ac4:	88 e0       	ldi	r24, 0x08	; 8
     ac6:	e8 2e       	mov	r14, r24
     ac8:	2c c0       	rjmp	.+88     	; 0xb22 <vfprintf+0x230>
     aca:	36 fc       	sbrc	r3, 6
     acc:	2a c0       	rjmp	.+84     	; 0xb22 <vfprintf+0x230>
     ace:	81 2f       	mov	r24, r17
     ad0:	90 e0       	ldi	r25, 0x00	; 0
     ad2:	84 15       	cp	r24, r4
     ad4:	95 05       	cpc	r25, r5
     ad6:	9c f0       	brlt	.+38     	; 0xafe <vfprintf+0x20c>
     ad8:	2c ef       	ldi	r18, 0xFC	; 252
     ada:	42 16       	cp	r4, r18
     adc:	2f ef       	ldi	r18, 0xFF	; 255
     ade:	52 06       	cpc	r5, r18
     ae0:	74 f0       	brlt	.+28     	; 0xafe <vfprintf+0x20c>
     ae2:	43 2d       	mov	r20, r3
     ae4:	40 68       	ori	r20, 0x80	; 128
     ae6:	34 2e       	mov	r3, r20
     ae8:	0a c0       	rjmp	.+20     	; 0xafe <vfprintf+0x20c>
     aea:	e2 e0       	ldi	r30, 0x02	; 2
     aec:	f0 e0       	ldi	r31, 0x00	; 0
     aee:	ec 0f       	add	r30, r28
     af0:	fd 1f       	adc	r31, r29
     af2:	e1 0f       	add	r30, r17
     af4:	f1 1d       	adc	r31, r1
     af6:	80 81       	ld	r24, Z
     af8:	80 33       	cpi	r24, 0x30	; 48
     afa:	19 f4       	brne	.+6      	; 0xb02 <vfprintf+0x210>
     afc:	11 50       	subi	r17, 0x01	; 1
     afe:	11 11       	cpse	r17, r1
     b00:	f4 cf       	rjmp	.-24     	; 0xaea <vfprintf+0x1f8>
     b02:	37 fe       	sbrs	r3, 7
     b04:	0e c0       	rjmp	.+28     	; 0xb22 <vfprintf+0x230>
     b06:	ee 24       	eor	r14, r14
     b08:	e3 94       	inc	r14
     b0a:	e1 0e       	add	r14, r17
     b0c:	81 2f       	mov	r24, r17
     b0e:	90 e0       	ldi	r25, 0x00	; 0
     b10:	48 16       	cp	r4, r24
     b12:	59 06       	cpc	r5, r25
     b14:	2c f4       	brge	.+10     	; 0xb20 <vfprintf+0x22e>
     b16:	14 19       	sub	r17, r4
     b18:	04 c0       	rjmp	.+8      	; 0xb22 <vfprintf+0x230>
     b1a:	ee 24       	eor	r14, r14
     b1c:	e3 94       	inc	r14
     b1e:	01 c0       	rjmp	.+2      	; 0xb22 <vfprintf+0x230>
     b20:	10 e0       	ldi	r17, 0x00	; 0
     b22:	37 fe       	sbrs	r3, 7
     b24:	06 c0       	rjmp	.+12     	; 0xb32 <vfprintf+0x240>
     b26:	14 14       	cp	r1, r4
     b28:	15 04       	cpc	r1, r5
     b2a:	34 f4       	brge	.+12     	; 0xb38 <vfprintf+0x246>
     b2c:	c2 01       	movw	r24, r4
     b2e:	01 96       	adiw	r24, 0x01	; 1
     b30:	05 c0       	rjmp	.+10     	; 0xb3c <vfprintf+0x24a>
     b32:	85 e0       	ldi	r24, 0x05	; 5
     b34:	90 e0       	ldi	r25, 0x00	; 0
     b36:	02 c0       	rjmp	.+4      	; 0xb3c <vfprintf+0x24a>
     b38:	81 e0       	ldi	r24, 0x01	; 1
     b3a:	90 e0       	ldi	r25, 0x00	; 0
     b3c:	21 10       	cpse	r2, r1
     b3e:	01 96       	adiw	r24, 0x01	; 1
     b40:	11 23       	and	r17, r17
     b42:	31 f0       	breq	.+12     	; 0xb50 <vfprintf+0x25e>
     b44:	21 2f       	mov	r18, r17
     b46:	30 e0       	ldi	r19, 0x00	; 0
     b48:	2f 5f       	subi	r18, 0xFF	; 255
     b4a:	3f 4f       	sbci	r19, 0xFF	; 255
     b4c:	82 0f       	add	r24, r18
     b4e:	93 1f       	adc	r25, r19
     b50:	2f 2d       	mov	r18, r15
     b52:	30 e0       	ldi	r19, 0x00	; 0
     b54:	82 17       	cp	r24, r18
     b56:	93 07       	cpc	r25, r19
     b58:	14 f4       	brge	.+4      	; 0xb5e <vfprintf+0x26c>
     b5a:	f8 1a       	sub	r15, r24
     b5c:	01 c0       	rjmp	.+2      	; 0xb60 <vfprintf+0x26e>
     b5e:	f1 2c       	mov	r15, r1
     b60:	83 2d       	mov	r24, r3
     b62:	89 70       	andi	r24, 0x09	; 9
     b64:	41 f4       	brne	.+16     	; 0xb76 <vfprintf+0x284>
     b66:	ff 20       	and	r15, r15
     b68:	31 f0       	breq	.+12     	; 0xb76 <vfprintf+0x284>
     b6a:	b6 01       	movw	r22, r12
     b6c:	80 e2       	ldi	r24, 0x20	; 32
     b6e:	90 e0       	ldi	r25, 0x00	; 0
     b70:	3f d3       	rcall	.+1662   	; 0x11f0 <fputc>
     b72:	fa 94       	dec	r15
     b74:	f8 cf       	rjmp	.-16     	; 0xb66 <vfprintf+0x274>
     b76:	22 20       	and	r2, r2
     b78:	21 f0       	breq	.+8      	; 0xb82 <vfprintf+0x290>
     b7a:	b6 01       	movw	r22, r12
     b7c:	82 2d       	mov	r24, r2
     b7e:	90 e0       	ldi	r25, 0x00	; 0
     b80:	37 d3       	rcall	.+1646   	; 0x11f0 <fputc>
     b82:	33 fc       	sbrc	r3, 3
     b84:	08 c0       	rjmp	.+16     	; 0xb96 <vfprintf+0x2a4>
     b86:	ff 20       	and	r15, r15
     b88:	31 f0       	breq	.+12     	; 0xb96 <vfprintf+0x2a4>
     b8a:	b6 01       	movw	r22, r12
     b8c:	80 e3       	ldi	r24, 0x30	; 48
     b8e:	90 e0       	ldi	r25, 0x00	; 0
     b90:	2f d3       	rcall	.+1630   	; 0x11f0 <fputc>
     b92:	fa 94       	dec	r15
     b94:	f8 cf       	rjmp	.-16     	; 0xb86 <vfprintf+0x294>
     b96:	37 fe       	sbrs	r3, 7
     b98:	58 c0       	rjmp	.+176    	; 0xc4a <vfprintf+0x358>
     b9a:	94 2d       	mov	r25, r4
     b9c:	85 2d       	mov	r24, r5
     b9e:	57 fe       	sbrs	r5, 7
     ba0:	02 c0       	rjmp	.+4      	; 0xba6 <vfprintf+0x2b4>
     ba2:	90 e0       	ldi	r25, 0x00	; 0
     ba4:	80 e0       	ldi	r24, 0x00	; 0
     ba6:	29 2e       	mov	r2, r25
     ba8:	38 2e       	mov	r3, r24
     baa:	20 e0       	ldi	r18, 0x00	; 0
     bac:	30 e0       	ldi	r19, 0x00	; 0
     bae:	a2 01       	movw	r20, r4
     bb0:	4e 19       	sub	r20, r14
     bb2:	51 09       	sbc	r21, r1
     bb4:	5d 87       	std	Y+13, r21	; 0x0d
     bb6:	4c 87       	std	Y+12, r20	; 0x0c
     bb8:	a2 01       	movw	r20, r4
     bba:	42 19       	sub	r20, r2
     bbc:	53 09       	sbc	r21, r3
     bbe:	5f 87       	std	Y+15, r21	; 0x0f
     bc0:	4e 87       	std	Y+14, r20	; 0x0e
     bc2:	61 2f       	mov	r22, r17
     bc4:	70 e0       	ldi	r23, 0x00	; 0
     bc6:	44 27       	eor	r20, r20
     bc8:	55 27       	eor	r21, r21
     bca:	46 1b       	sub	r20, r22
     bcc:	57 0b       	sbc	r21, r23
     bce:	59 8b       	std	Y+17, r21	; 0x11
     bd0:	48 8b       	std	Y+16, r20	; 0x10
     bd2:	5f ef       	ldi	r21, 0xFF	; 255
     bd4:	25 16       	cp	r2, r21
     bd6:	35 06       	cpc	r3, r21
     bd8:	41 f4       	brne	.+16     	; 0xbea <vfprintf+0x2f8>
     bda:	b6 01       	movw	r22, r12
     bdc:	8e e2       	ldi	r24, 0x2E	; 46
     bde:	90 e0       	ldi	r25, 0x00	; 0
     be0:	2a 8b       	std	Y+18, r18	; 0x12
     be2:	3b 8b       	std	Y+19, r19	; 0x13
     be4:	05 d3       	rcall	.+1546   	; 0x11f0 <fputc>
     be6:	3b 89       	ldd	r19, Y+19	; 0x13
     be8:	2a 89       	ldd	r18, Y+18	; 0x12
     bea:	42 14       	cp	r4, r2
     bec:	53 04       	cpc	r5, r3
     bee:	6c f0       	brlt	.+26     	; 0xc0a <vfprintf+0x318>
     bf0:	4c 85       	ldd	r20, Y+12	; 0x0c
     bf2:	5d 85       	ldd	r21, Y+13	; 0x0d
     bf4:	42 15       	cp	r20, r2
     bf6:	53 05       	cpc	r21, r3
     bf8:	44 f4       	brge	.+16     	; 0xc0a <vfprintf+0x318>
     bfa:	ee 85       	ldd	r30, Y+14	; 0x0e
     bfc:	ff 85       	ldd	r31, Y+15	; 0x0f
     bfe:	e2 0f       	add	r30, r18
     c00:	f3 1f       	adc	r31, r19
     c02:	e6 0d       	add	r30, r6
     c04:	f7 1d       	adc	r31, r7
     c06:	81 81       	ldd	r24, Z+1	; 0x01
     c08:	01 c0       	rjmp	.+2      	; 0xc0c <vfprintf+0x31a>
     c0a:	80 e3       	ldi	r24, 0x30	; 48
     c0c:	51 e0       	ldi	r21, 0x01	; 1
     c0e:	25 1a       	sub	r2, r21
     c10:	31 08       	sbc	r3, r1
     c12:	2f 5f       	subi	r18, 0xFF	; 255
     c14:	3f 4f       	sbci	r19, 0xFF	; 255
     c16:	48 89       	ldd	r20, Y+16	; 0x10
     c18:	59 89       	ldd	r21, Y+17	; 0x11
     c1a:	24 16       	cp	r2, r20
     c1c:	35 06       	cpc	r3, r21
     c1e:	44 f0       	brlt	.+16     	; 0xc30 <vfprintf+0x33e>
     c20:	b6 01       	movw	r22, r12
     c22:	90 e0       	ldi	r25, 0x00	; 0
     c24:	2a 8b       	std	Y+18, r18	; 0x12
     c26:	3b 8b       	std	Y+19, r19	; 0x13
     c28:	e3 d2       	rcall	.+1478   	; 0x11f0 <fputc>
     c2a:	2a 89       	ldd	r18, Y+18	; 0x12
     c2c:	3b 89       	ldd	r19, Y+19	; 0x13
     c2e:	d1 cf       	rjmp	.-94     	; 0xbd2 <vfprintf+0x2e0>
     c30:	24 14       	cp	r2, r4
     c32:	35 04       	cpc	r3, r5
     c34:	39 f4       	brne	.+14     	; 0xc44 <vfprintf+0x352>
     c36:	9a 81       	ldd	r25, Y+2	; 0x02
     c38:	96 33       	cpi	r25, 0x36	; 54
     c3a:	18 f4       	brcc	.+6      	; 0xc42 <vfprintf+0x350>
     c3c:	95 33       	cpi	r25, 0x35	; 53
     c3e:	11 f4       	brne	.+4      	; 0xc44 <vfprintf+0x352>
     c40:	04 ff       	sbrs	r16, 4
     c42:	81 e3       	ldi	r24, 0x31	; 49
     c44:	b6 01       	movw	r22, r12
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	45 c0       	rjmp	.+138    	; 0xcd4 <vfprintf+0x3e2>
     c4a:	8a 81       	ldd	r24, Y+2	; 0x02
     c4c:	81 33       	cpi	r24, 0x31	; 49
     c4e:	09 f0       	breq	.+2      	; 0xc52 <vfprintf+0x360>
     c50:	0f 7e       	andi	r16, 0xEF	; 239
     c52:	b6 01       	movw	r22, r12
     c54:	90 e0       	ldi	r25, 0x00	; 0
     c56:	cc d2       	rcall	.+1432   	; 0x11f0 <fputc>
     c58:	11 11       	cpse	r17, r1
     c5a:	05 c0       	rjmp	.+10     	; 0xc66 <vfprintf+0x374>
     c5c:	34 fc       	sbrc	r3, 4
     c5e:	16 c0       	rjmp	.+44     	; 0xc8c <vfprintf+0x39a>
     c60:	85 e6       	ldi	r24, 0x65	; 101
     c62:	90 e0       	ldi	r25, 0x00	; 0
     c64:	15 c0       	rjmp	.+42     	; 0xc90 <vfprintf+0x39e>
     c66:	b6 01       	movw	r22, r12
     c68:	8e e2       	ldi	r24, 0x2E	; 46
     c6a:	90 e0       	ldi	r25, 0x00	; 0
     c6c:	c1 d2       	rcall	.+1410   	; 0x11f0 <fputc>
     c6e:	82 e0       	ldi	r24, 0x02	; 2
     c70:	ee 24       	eor	r14, r14
     c72:	e3 94       	inc	r14
     c74:	e8 0e       	add	r14, r24
     c76:	f3 01       	movw	r30, r6
     c78:	e8 0f       	add	r30, r24
     c7a:	f1 1d       	adc	r31, r1
     c7c:	80 81       	ld	r24, Z
     c7e:	b6 01       	movw	r22, r12
     c80:	90 e0       	ldi	r25, 0x00	; 0
     c82:	b6 d2       	rcall	.+1388   	; 0x11f0 <fputc>
     c84:	11 50       	subi	r17, 0x01	; 1
     c86:	8e 2d       	mov	r24, r14
     c88:	99 f7       	brne	.-26     	; 0xc70 <vfprintf+0x37e>
     c8a:	e8 cf       	rjmp	.-48     	; 0xc5c <vfprintf+0x36a>
     c8c:	85 e4       	ldi	r24, 0x45	; 69
     c8e:	90 e0       	ldi	r25, 0x00	; 0
     c90:	b6 01       	movw	r22, r12
     c92:	ae d2       	rcall	.+1372   	; 0x11f0 <fputc>
     c94:	57 fc       	sbrc	r5, 7
     c96:	05 c0       	rjmp	.+10     	; 0xca2 <vfprintf+0x3b0>
     c98:	41 14       	cp	r4, r1
     c9a:	51 04       	cpc	r5, r1
     c9c:	39 f4       	brne	.+14     	; 0xcac <vfprintf+0x3ba>
     c9e:	04 ff       	sbrs	r16, 4
     ca0:	05 c0       	rjmp	.+10     	; 0xcac <vfprintf+0x3ba>
     ca2:	51 94       	neg	r5
     ca4:	41 94       	neg	r4
     ca6:	51 08       	sbc	r5, r1
     ca8:	8d e2       	ldi	r24, 0x2D	; 45
     caa:	01 c0       	rjmp	.+2      	; 0xcae <vfprintf+0x3bc>
     cac:	8b e2       	ldi	r24, 0x2B	; 43
     cae:	b6 01       	movw	r22, r12
     cb0:	90 e0       	ldi	r25, 0x00	; 0
     cb2:	9e d2       	rcall	.+1340   	; 0x11f0 <fputc>
     cb4:	80 e3       	ldi	r24, 0x30	; 48
     cb6:	9a e0       	ldi	r25, 0x0A	; 10
     cb8:	49 16       	cp	r4, r25
     cba:	51 04       	cpc	r5, r1
     cbc:	2c f0       	brlt	.+10     	; 0xcc8 <vfprintf+0x3d6>
     cbe:	8f 5f       	subi	r24, 0xFF	; 255
     cc0:	5a e0       	ldi	r21, 0x0A	; 10
     cc2:	45 1a       	sub	r4, r21
     cc4:	51 08       	sbc	r5, r1
     cc6:	f7 cf       	rjmp	.-18     	; 0xcb6 <vfprintf+0x3c4>
     cc8:	b6 01       	movw	r22, r12
     cca:	90 e0       	ldi	r25, 0x00	; 0
     ccc:	91 d2       	rcall	.+1314   	; 0x11f0 <fputc>
     cce:	b6 01       	movw	r22, r12
     cd0:	c2 01       	movw	r24, r4
     cd2:	c0 96       	adiw	r24, 0x30	; 48
     cd4:	8d d2       	rcall	.+1306   	; 0x11f0 <fputc>
     cd6:	4c c1       	rjmp	.+664    	; 0xf70 <vfprintf+0x67e>
     cd8:	83 36       	cpi	r24, 0x63	; 99
     cda:	31 f0       	breq	.+12     	; 0xce8 <vfprintf+0x3f6>
     cdc:	83 37       	cpi	r24, 0x73	; 115
     cde:	79 f0       	breq	.+30     	; 0xcfe <vfprintf+0x40c>
     ce0:	83 35       	cpi	r24, 0x53	; 83
     ce2:	09 f0       	breq	.+2      	; 0xce6 <vfprintf+0x3f4>
     ce4:	54 c0       	rjmp	.+168    	; 0xd8e <vfprintf+0x49c>
     ce6:	20 c0       	rjmp	.+64     	; 0xd28 <vfprintf+0x436>
     ce8:	52 01       	movw	r10, r4
     cea:	e2 e0       	ldi	r30, 0x02	; 2
     cec:	ae 0e       	add	r10, r30
     cee:	b1 1c       	adc	r11, r1
     cf0:	f2 01       	movw	r30, r4
     cf2:	80 81       	ld	r24, Z
     cf4:	89 83       	std	Y+1, r24	; 0x01
     cf6:	01 e0       	ldi	r16, 0x01	; 1
     cf8:	10 e0       	ldi	r17, 0x00	; 0
     cfa:	23 01       	movw	r4, r6
     cfc:	13 c0       	rjmp	.+38     	; 0xd24 <vfprintf+0x432>
     cfe:	52 01       	movw	r10, r4
     d00:	f2 e0       	ldi	r31, 0x02	; 2
     d02:	af 0e       	add	r10, r31
     d04:	b1 1c       	adc	r11, r1
     d06:	f2 01       	movw	r30, r4
     d08:	40 80       	ld	r4, Z
     d0a:	51 80       	ldd	r5, Z+1	; 0x01
     d0c:	26 ff       	sbrs	r18, 6
     d0e:	03 c0       	rjmp	.+6      	; 0xd16 <vfprintf+0x424>
     d10:	61 2f       	mov	r22, r17
     d12:	70 e0       	ldi	r23, 0x00	; 0
     d14:	02 c0       	rjmp	.+4      	; 0xd1a <vfprintf+0x428>
     d16:	6f ef       	ldi	r22, 0xFF	; 255
     d18:	7f ef       	ldi	r23, 0xFF	; 255
     d1a:	c2 01       	movw	r24, r4
     d1c:	2a 8b       	std	Y+18, r18	; 0x12
     d1e:	5d d2       	rcall	.+1210   	; 0x11da <strnlen>
     d20:	8c 01       	movw	r16, r24
     d22:	2a 89       	ldd	r18, Y+18	; 0x12
     d24:	2f 77       	andi	r18, 0x7F	; 127
     d26:	14 c0       	rjmp	.+40     	; 0xd50 <vfprintf+0x45e>
     d28:	52 01       	movw	r10, r4
     d2a:	f2 e0       	ldi	r31, 0x02	; 2
     d2c:	af 0e       	add	r10, r31
     d2e:	b1 1c       	adc	r11, r1
     d30:	f2 01       	movw	r30, r4
     d32:	40 80       	ld	r4, Z
     d34:	51 80       	ldd	r5, Z+1	; 0x01
     d36:	26 ff       	sbrs	r18, 6
     d38:	03 c0       	rjmp	.+6      	; 0xd40 <vfprintf+0x44e>
     d3a:	61 2f       	mov	r22, r17
     d3c:	70 e0       	ldi	r23, 0x00	; 0
     d3e:	02 c0       	rjmp	.+4      	; 0xd44 <vfprintf+0x452>
     d40:	6f ef       	ldi	r22, 0xFF	; 255
     d42:	7f ef       	ldi	r23, 0xFF	; 255
     d44:	c2 01       	movw	r24, r4
     d46:	2a 8b       	std	Y+18, r18	; 0x12
     d48:	34 d2       	rcall	.+1128   	; 0x11b2 <strnlen_P>
     d4a:	8c 01       	movw	r16, r24
     d4c:	2a 89       	ldd	r18, Y+18	; 0x12
     d4e:	20 68       	ori	r18, 0x80	; 128
     d50:	32 2e       	mov	r3, r18
     d52:	23 fd       	sbrc	r18, 3
     d54:	18 c0       	rjmp	.+48     	; 0xd86 <vfprintf+0x494>
     d56:	8f 2d       	mov	r24, r15
     d58:	90 e0       	ldi	r25, 0x00	; 0
     d5a:	08 17       	cp	r16, r24
     d5c:	19 07       	cpc	r17, r25
     d5e:	98 f4       	brcc	.+38     	; 0xd86 <vfprintf+0x494>
     d60:	b6 01       	movw	r22, r12
     d62:	80 e2       	ldi	r24, 0x20	; 32
     d64:	90 e0       	ldi	r25, 0x00	; 0
     d66:	44 d2       	rcall	.+1160   	; 0x11f0 <fputc>
     d68:	fa 94       	dec	r15
     d6a:	f5 cf       	rjmp	.-22     	; 0xd56 <vfprintf+0x464>
     d6c:	f2 01       	movw	r30, r4
     d6e:	37 fc       	sbrc	r3, 7
     d70:	85 91       	lpm	r24, Z+
     d72:	37 fe       	sbrs	r3, 7
     d74:	81 91       	ld	r24, Z+
     d76:	2f 01       	movw	r4, r30
     d78:	b6 01       	movw	r22, r12
     d7a:	90 e0       	ldi	r25, 0x00	; 0
     d7c:	39 d2       	rcall	.+1138   	; 0x11f0 <fputc>
     d7e:	f1 10       	cpse	r15, r1
     d80:	fa 94       	dec	r15
     d82:	01 50       	subi	r16, 0x01	; 1
     d84:	11 09       	sbc	r17, r1
     d86:	01 15       	cp	r16, r1
     d88:	11 05       	cpc	r17, r1
     d8a:	81 f7       	brne	.-32     	; 0xd6c <vfprintf+0x47a>
     d8c:	f1 c0       	rjmp	.+482    	; 0xf70 <vfprintf+0x67e>
     d8e:	84 36       	cpi	r24, 0x64	; 100
     d90:	11 f0       	breq	.+4      	; 0xd96 <vfprintf+0x4a4>
     d92:	89 36       	cpi	r24, 0x69	; 105
     d94:	51 f5       	brne	.+84     	; 0xdea <vfprintf+0x4f8>
     d96:	52 01       	movw	r10, r4
     d98:	27 ff       	sbrs	r18, 7
     d9a:	09 c0       	rjmp	.+18     	; 0xdae <vfprintf+0x4bc>
     d9c:	f4 e0       	ldi	r31, 0x04	; 4
     d9e:	af 0e       	add	r10, r31
     da0:	b1 1c       	adc	r11, r1
     da2:	f2 01       	movw	r30, r4
     da4:	60 81       	ld	r22, Z
     da6:	71 81       	ldd	r23, Z+1	; 0x01
     da8:	82 81       	ldd	r24, Z+2	; 0x02
     daa:	93 81       	ldd	r25, Z+3	; 0x03
     dac:	0a c0       	rjmp	.+20     	; 0xdc2 <vfprintf+0x4d0>
     dae:	f2 e0       	ldi	r31, 0x02	; 2
     db0:	af 0e       	add	r10, r31
     db2:	b1 1c       	adc	r11, r1
     db4:	f2 01       	movw	r30, r4
     db6:	60 81       	ld	r22, Z
     db8:	71 81       	ldd	r23, Z+1	; 0x01
     dba:	07 2e       	mov	r0, r23
     dbc:	00 0c       	add	r0, r0
     dbe:	88 0b       	sbc	r24, r24
     dc0:	99 0b       	sbc	r25, r25
     dc2:	2f 76       	andi	r18, 0x6F	; 111
     dc4:	32 2e       	mov	r3, r18
     dc6:	97 ff       	sbrs	r25, 7
     dc8:	09 c0       	rjmp	.+18     	; 0xddc <vfprintf+0x4ea>
     dca:	90 95       	com	r25
     dcc:	80 95       	com	r24
     dce:	70 95       	com	r23
     dd0:	61 95       	neg	r22
     dd2:	7f 4f       	sbci	r23, 0xFF	; 255
     dd4:	8f 4f       	sbci	r24, 0xFF	; 255
     dd6:	9f 4f       	sbci	r25, 0xFF	; 255
     dd8:	20 68       	ori	r18, 0x80	; 128
     dda:	32 2e       	mov	r3, r18
     ddc:	2a e0       	ldi	r18, 0x0A	; 10
     dde:	30 e0       	ldi	r19, 0x00	; 0
     de0:	a3 01       	movw	r20, r6
     de2:	3e d2       	rcall	.+1148   	; 0x1260 <__ultoa_invert>
     de4:	e8 2e       	mov	r14, r24
     de6:	e6 18       	sub	r14, r6
     de8:	3e c0       	rjmp	.+124    	; 0xe66 <vfprintf+0x574>
     dea:	02 2f       	mov	r16, r18
     dec:	85 37       	cpi	r24, 0x75	; 117
     dee:	21 f4       	brne	.+8      	; 0xdf8 <vfprintf+0x506>
     df0:	0f 7e       	andi	r16, 0xEF	; 239
     df2:	2a e0       	ldi	r18, 0x0A	; 10
     df4:	30 e0       	ldi	r19, 0x00	; 0
     df6:	1d c0       	rjmp	.+58     	; 0xe32 <vfprintf+0x540>
     df8:	09 7f       	andi	r16, 0xF9	; 249
     dfa:	8f 36       	cpi	r24, 0x6F	; 111
     dfc:	91 f0       	breq	.+36     	; 0xe22 <vfprintf+0x530>
     dfe:	18 f4       	brcc	.+6      	; 0xe06 <vfprintf+0x514>
     e00:	88 35       	cpi	r24, 0x58	; 88
     e02:	59 f0       	breq	.+22     	; 0xe1a <vfprintf+0x528>
     e04:	be c0       	rjmp	.+380    	; 0xf82 <vfprintf+0x690>
     e06:	80 37       	cpi	r24, 0x70	; 112
     e08:	19 f0       	breq	.+6      	; 0xe10 <vfprintf+0x51e>
     e0a:	88 37       	cpi	r24, 0x78	; 120
     e0c:	11 f0       	breq	.+4      	; 0xe12 <vfprintf+0x520>
     e0e:	b9 c0       	rjmp	.+370    	; 0xf82 <vfprintf+0x690>
     e10:	00 61       	ori	r16, 0x10	; 16
     e12:	04 ff       	sbrs	r16, 4
     e14:	09 c0       	rjmp	.+18     	; 0xe28 <vfprintf+0x536>
     e16:	04 60       	ori	r16, 0x04	; 4
     e18:	07 c0       	rjmp	.+14     	; 0xe28 <vfprintf+0x536>
     e1a:	24 ff       	sbrs	r18, 4
     e1c:	08 c0       	rjmp	.+16     	; 0xe2e <vfprintf+0x53c>
     e1e:	06 60       	ori	r16, 0x06	; 6
     e20:	06 c0       	rjmp	.+12     	; 0xe2e <vfprintf+0x53c>
     e22:	28 e0       	ldi	r18, 0x08	; 8
     e24:	30 e0       	ldi	r19, 0x00	; 0
     e26:	05 c0       	rjmp	.+10     	; 0xe32 <vfprintf+0x540>
     e28:	20 e1       	ldi	r18, 0x10	; 16
     e2a:	30 e0       	ldi	r19, 0x00	; 0
     e2c:	02 c0       	rjmp	.+4      	; 0xe32 <vfprintf+0x540>
     e2e:	20 e1       	ldi	r18, 0x10	; 16
     e30:	32 e0       	ldi	r19, 0x02	; 2
     e32:	52 01       	movw	r10, r4
     e34:	07 ff       	sbrs	r16, 7
     e36:	09 c0       	rjmp	.+18     	; 0xe4a <vfprintf+0x558>
     e38:	f4 e0       	ldi	r31, 0x04	; 4
     e3a:	af 0e       	add	r10, r31
     e3c:	b1 1c       	adc	r11, r1
     e3e:	f2 01       	movw	r30, r4
     e40:	60 81       	ld	r22, Z
     e42:	71 81       	ldd	r23, Z+1	; 0x01
     e44:	82 81       	ldd	r24, Z+2	; 0x02
     e46:	93 81       	ldd	r25, Z+3	; 0x03
     e48:	08 c0       	rjmp	.+16     	; 0xe5a <vfprintf+0x568>
     e4a:	f2 e0       	ldi	r31, 0x02	; 2
     e4c:	af 0e       	add	r10, r31
     e4e:	b1 1c       	adc	r11, r1
     e50:	f2 01       	movw	r30, r4
     e52:	60 81       	ld	r22, Z
     e54:	71 81       	ldd	r23, Z+1	; 0x01
     e56:	80 e0       	ldi	r24, 0x00	; 0
     e58:	90 e0       	ldi	r25, 0x00	; 0
     e5a:	a3 01       	movw	r20, r6
     e5c:	01 d2       	rcall	.+1026   	; 0x1260 <__ultoa_invert>
     e5e:	e8 2e       	mov	r14, r24
     e60:	e6 18       	sub	r14, r6
     e62:	0f 77       	andi	r16, 0x7F	; 127
     e64:	30 2e       	mov	r3, r16
     e66:	36 fe       	sbrs	r3, 6
     e68:	0b c0       	rjmp	.+22     	; 0xe80 <vfprintf+0x58e>
     e6a:	33 2d       	mov	r19, r3
     e6c:	3e 7f       	andi	r19, 0xFE	; 254
     e6e:	e1 16       	cp	r14, r17
     e70:	50 f4       	brcc	.+20     	; 0xe86 <vfprintf+0x594>
     e72:	34 fe       	sbrs	r3, 4
     e74:	0a c0       	rjmp	.+20     	; 0xe8a <vfprintf+0x598>
     e76:	32 fc       	sbrc	r3, 2
     e78:	08 c0       	rjmp	.+16     	; 0xe8a <vfprintf+0x598>
     e7a:	33 2d       	mov	r19, r3
     e7c:	3e 7e       	andi	r19, 0xEE	; 238
     e7e:	05 c0       	rjmp	.+10     	; 0xe8a <vfprintf+0x598>
     e80:	0e 2d       	mov	r16, r14
     e82:	33 2d       	mov	r19, r3
     e84:	03 c0       	rjmp	.+6      	; 0xe8c <vfprintf+0x59a>
     e86:	0e 2d       	mov	r16, r14
     e88:	01 c0       	rjmp	.+2      	; 0xe8c <vfprintf+0x59a>
     e8a:	01 2f       	mov	r16, r17
     e8c:	34 ff       	sbrs	r19, 4
     e8e:	0c c0       	rjmp	.+24     	; 0xea8 <vfprintf+0x5b6>
     e90:	fe 01       	movw	r30, r28
     e92:	ee 0d       	add	r30, r14
     e94:	f1 1d       	adc	r31, r1
     e96:	80 81       	ld	r24, Z
     e98:	80 33       	cpi	r24, 0x30	; 48
     e9a:	11 f4       	brne	.+4      	; 0xea0 <vfprintf+0x5ae>
     e9c:	39 7e       	andi	r19, 0xE9	; 233
     e9e:	08 c0       	rjmp	.+16     	; 0xeb0 <vfprintf+0x5be>
     ea0:	32 ff       	sbrs	r19, 2
     ea2:	05 c0       	rjmp	.+10     	; 0xeae <vfprintf+0x5bc>
     ea4:	0e 5f       	subi	r16, 0xFE	; 254
     ea6:	04 c0       	rjmp	.+8      	; 0xeb0 <vfprintf+0x5be>
     ea8:	83 2f       	mov	r24, r19
     eaa:	86 78       	andi	r24, 0x86	; 134
     eac:	09 f0       	breq	.+2      	; 0xeb0 <vfprintf+0x5be>
     eae:	0f 5f       	subi	r16, 0xFF	; 255
     eb0:	33 fd       	sbrc	r19, 3
     eb2:	12 c0       	rjmp	.+36     	; 0xed8 <vfprintf+0x5e6>
     eb4:	30 ff       	sbrs	r19, 0
     eb6:	06 c0       	rjmp	.+12     	; 0xec4 <vfprintf+0x5d2>
     eb8:	1e 2d       	mov	r17, r14
     eba:	0f 15       	cp	r16, r15
     ebc:	18 f4       	brcc	.+6      	; 0xec4 <vfprintf+0x5d2>
     ebe:	1f 0d       	add	r17, r15
     ec0:	10 1b       	sub	r17, r16
     ec2:	0f 2d       	mov	r16, r15
     ec4:	0f 15       	cp	r16, r15
     ec6:	60 f4       	brcc	.+24     	; 0xee0 <vfprintf+0x5ee>
     ec8:	b6 01       	movw	r22, r12
     eca:	80 e2       	ldi	r24, 0x20	; 32
     ecc:	90 e0       	ldi	r25, 0x00	; 0
     ece:	3b 8b       	std	Y+19, r19	; 0x13
     ed0:	8f d1       	rcall	.+798    	; 0x11f0 <fputc>
     ed2:	0f 5f       	subi	r16, 0xFF	; 255
     ed4:	3b 89       	ldd	r19, Y+19	; 0x13
     ed6:	f6 cf       	rjmp	.-20     	; 0xec4 <vfprintf+0x5d2>
     ed8:	0f 15       	cp	r16, r15
     eda:	10 f4       	brcc	.+4      	; 0xee0 <vfprintf+0x5ee>
     edc:	f0 1a       	sub	r15, r16
     ede:	01 c0       	rjmp	.+2      	; 0xee2 <vfprintf+0x5f0>
     ee0:	f1 2c       	mov	r15, r1
     ee2:	34 ff       	sbrs	r19, 4
     ee4:	11 c0       	rjmp	.+34     	; 0xf08 <vfprintf+0x616>
     ee6:	b6 01       	movw	r22, r12
     ee8:	80 e3       	ldi	r24, 0x30	; 48
     eea:	90 e0       	ldi	r25, 0x00	; 0
     eec:	3b 8b       	std	Y+19, r19	; 0x13
     eee:	80 d1       	rcall	.+768    	; 0x11f0 <fputc>
     ef0:	3b 89       	ldd	r19, Y+19	; 0x13
     ef2:	32 ff       	sbrs	r19, 2
     ef4:	16 c0       	rjmp	.+44     	; 0xf22 <vfprintf+0x630>
     ef6:	31 fd       	sbrc	r19, 1
     ef8:	03 c0       	rjmp	.+6      	; 0xf00 <vfprintf+0x60e>
     efa:	88 e7       	ldi	r24, 0x78	; 120
     efc:	90 e0       	ldi	r25, 0x00	; 0
     efe:	02 c0       	rjmp	.+4      	; 0xf04 <vfprintf+0x612>
     f00:	88 e5       	ldi	r24, 0x58	; 88
     f02:	90 e0       	ldi	r25, 0x00	; 0
     f04:	b6 01       	movw	r22, r12
     f06:	0c c0       	rjmp	.+24     	; 0xf20 <vfprintf+0x62e>
     f08:	83 2f       	mov	r24, r19
     f0a:	86 78       	andi	r24, 0x86	; 134
     f0c:	51 f0       	breq	.+20     	; 0xf22 <vfprintf+0x630>
     f0e:	31 ff       	sbrs	r19, 1
     f10:	02 c0       	rjmp	.+4      	; 0xf16 <vfprintf+0x624>
     f12:	8b e2       	ldi	r24, 0x2B	; 43
     f14:	01 c0       	rjmp	.+2      	; 0xf18 <vfprintf+0x626>
     f16:	80 e2       	ldi	r24, 0x20	; 32
     f18:	37 fd       	sbrc	r19, 7
     f1a:	8d e2       	ldi	r24, 0x2D	; 45
     f1c:	b6 01       	movw	r22, r12
     f1e:	90 e0       	ldi	r25, 0x00	; 0
     f20:	67 d1       	rcall	.+718    	; 0x11f0 <fputc>
     f22:	e1 16       	cp	r14, r17
     f24:	30 f4       	brcc	.+12     	; 0xf32 <vfprintf+0x640>
     f26:	b6 01       	movw	r22, r12
     f28:	80 e3       	ldi	r24, 0x30	; 48
     f2a:	90 e0       	ldi	r25, 0x00	; 0
     f2c:	61 d1       	rcall	.+706    	; 0x11f0 <fputc>
     f2e:	11 50       	subi	r17, 0x01	; 1
     f30:	f8 cf       	rjmp	.-16     	; 0xf22 <vfprintf+0x630>
     f32:	ea 94       	dec	r14
     f34:	f3 01       	movw	r30, r6
     f36:	ee 0d       	add	r30, r14
     f38:	f1 1d       	adc	r31, r1
     f3a:	80 81       	ld	r24, Z
     f3c:	b6 01       	movw	r22, r12
     f3e:	90 e0       	ldi	r25, 0x00	; 0
     f40:	57 d1       	rcall	.+686    	; 0x11f0 <fputc>
     f42:	e1 10       	cpse	r14, r1
     f44:	f6 cf       	rjmp	.-20     	; 0xf32 <vfprintf+0x640>
     f46:	14 c0       	rjmp	.+40     	; 0xf70 <vfprintf+0x67e>
     f48:	f4 e0       	ldi	r31, 0x04	; 4
     f4a:	ff 15       	cp	r31, r15
     f4c:	48 f5       	brcc	.+82     	; 0xfa0 <vfprintf+0x6ae>
     f4e:	84 e0       	ldi	r24, 0x04	; 4
     f50:	f8 1a       	sub	r15, r24
     f52:	33 fe       	sbrs	r3, 3
     f54:	1d c0       	rjmp	.+58     	; 0xf90 <vfprintf+0x69e>
     f56:	21 10       	cpse	r2, r1
     f58:	24 c0       	rjmp	.+72     	; 0xfa2 <vfprintf+0x6b0>
     f5a:	03 ff       	sbrs	r16, 3
     f5c:	27 c0       	rjmp	.+78     	; 0xfac <vfprintf+0x6ba>
     f5e:	0c e8       	ldi	r16, 0x8C	; 140
     f60:	10 e0       	ldi	r17, 0x00	; 0
     f62:	f3 2d       	mov	r31, r3
     f64:	f0 71       	andi	r31, 0x10	; 16
     f66:	3f 2e       	mov	r3, r31
     f68:	f8 01       	movw	r30, r16
     f6a:	84 91       	lpm	r24, Z
     f6c:	81 11       	cpse	r24, r1
     f6e:	21 c0       	rjmp	.+66     	; 0xfb2 <vfprintf+0x6c0>
     f70:	ff 20       	and	r15, r15
     f72:	09 f4       	brne	.+2      	; 0xf76 <vfprintf+0x684>
     f74:	fd cc       	rjmp	.-1542   	; 0x970 <vfprintf+0x7e>
     f76:	b6 01       	movw	r22, r12
     f78:	80 e2       	ldi	r24, 0x20	; 32
     f7a:	90 e0       	ldi	r25, 0x00	; 0
     f7c:	39 d1       	rcall	.+626    	; 0x11f0 <fputc>
     f7e:	fa 94       	dec	r15
     f80:	f7 cf       	rjmp	.-18     	; 0xf70 <vfprintf+0x67e>
     f82:	f6 01       	movw	r30, r12
     f84:	86 81       	ldd	r24, Z+6	; 0x06
     f86:	97 81       	ldd	r25, Z+7	; 0x07
     f88:	23 c0       	rjmp	.+70     	; 0xfd0 <vfprintf+0x6de>
     f8a:	8f ef       	ldi	r24, 0xFF	; 255
     f8c:	9f ef       	ldi	r25, 0xFF	; 255
     f8e:	20 c0       	rjmp	.+64     	; 0xfd0 <vfprintf+0x6de>
     f90:	b6 01       	movw	r22, r12
     f92:	80 e2       	ldi	r24, 0x20	; 32
     f94:	90 e0       	ldi	r25, 0x00	; 0
     f96:	2c d1       	rcall	.+600    	; 0x11f0 <fputc>
     f98:	fa 94       	dec	r15
     f9a:	f1 10       	cpse	r15, r1
     f9c:	f9 cf       	rjmp	.-14     	; 0xf90 <vfprintf+0x69e>
     f9e:	db cf       	rjmp	.-74     	; 0xf56 <vfprintf+0x664>
     fa0:	f1 2c       	mov	r15, r1
     fa2:	b6 01       	movw	r22, r12
     fa4:	82 2d       	mov	r24, r2
     fa6:	90 e0       	ldi	r25, 0x00	; 0
     fa8:	23 d1       	rcall	.+582    	; 0x11f0 <fputc>
     faa:	d7 cf       	rjmp	.-82     	; 0xf5a <vfprintf+0x668>
     fac:	00 e9       	ldi	r16, 0x90	; 144
     fae:	10 e0       	ldi	r17, 0x00	; 0
     fb0:	d8 cf       	rjmp	.-80     	; 0xf62 <vfprintf+0x670>
     fb2:	31 10       	cpse	r3, r1
     fb4:	80 52       	subi	r24, 0x20	; 32
     fb6:	b6 01       	movw	r22, r12
     fb8:	90 e0       	ldi	r25, 0x00	; 0
     fba:	1a d1       	rcall	.+564    	; 0x11f0 <fputc>
     fbc:	0f 5f       	subi	r16, 0xFF	; 255
     fbe:	1f 4f       	sbci	r17, 0xFF	; 255
     fc0:	d3 cf       	rjmp	.-90     	; 0xf68 <vfprintf+0x676>
     fc2:	23 e0       	ldi	r18, 0x03	; 3
     fc4:	2f 15       	cp	r18, r15
     fc6:	10 f4       	brcc	.+4      	; 0xfcc <vfprintf+0x6da>
     fc8:	83 e0       	ldi	r24, 0x03	; 3
     fca:	c2 cf       	rjmp	.-124    	; 0xf50 <vfprintf+0x65e>
     fcc:	f1 2c       	mov	r15, r1
     fce:	c5 cf       	rjmp	.-118    	; 0xf5a <vfprintf+0x668>
     fd0:	63 96       	adiw	r28, 0x13	; 19
     fd2:	0f b6       	in	r0, 0x3f	; 63
     fd4:	f8 94       	cli
     fd6:	de bf       	out	0x3e, r29	; 62
     fd8:	0f be       	out	0x3f, r0	; 63
     fda:	cd bf       	out	0x3d, r28	; 61
     fdc:	df 91       	pop	r29
     fde:	cf 91       	pop	r28
     fe0:	1f 91       	pop	r17
     fe2:	0f 91       	pop	r16
     fe4:	ff 90       	pop	r15
     fe6:	ef 90       	pop	r14
     fe8:	df 90       	pop	r13
     fea:	cf 90       	pop	r12
     fec:	bf 90       	pop	r11
     fee:	af 90       	pop	r10
     ff0:	9f 90       	pop	r9
     ff2:	8f 90       	pop	r8
     ff4:	7f 90       	pop	r7
     ff6:	6f 90       	pop	r6
     ff8:	5f 90       	pop	r5
     ffa:	4f 90       	pop	r4
     ffc:	3f 90       	pop	r3
     ffe:	2f 90       	pop	r2
    1000:	08 95       	ret

00001002 <__ftoa_engine>:
    1002:	28 30       	cpi	r18, 0x08	; 8
    1004:	08 f0       	brcs	.+2      	; 0x1008 <__ftoa_engine+0x6>
    1006:	27 e0       	ldi	r18, 0x07	; 7
    1008:	33 27       	eor	r19, r19
    100a:	da 01       	movw	r26, r20
    100c:	99 0f       	add	r25, r25
    100e:	31 1d       	adc	r19, r1
    1010:	87 fd       	sbrc	r24, 7
    1012:	91 60       	ori	r25, 0x01	; 1
    1014:	00 96       	adiw	r24, 0x00	; 0
    1016:	61 05       	cpc	r22, r1
    1018:	71 05       	cpc	r23, r1
    101a:	39 f4       	brne	.+14     	; 0x102a <__ftoa_engine+0x28>
    101c:	32 60       	ori	r19, 0x02	; 2
    101e:	2e 5f       	subi	r18, 0xFE	; 254
    1020:	3d 93       	st	X+, r19
    1022:	30 e3       	ldi	r19, 0x30	; 48
    1024:	2a 95       	dec	r18
    1026:	e1 f7       	brne	.-8      	; 0x1020 <__ftoa_engine+0x1e>
    1028:	08 95       	ret
    102a:	9f 3f       	cpi	r25, 0xFF	; 255
    102c:	30 f0       	brcs	.+12     	; 0x103a <__ftoa_engine+0x38>
    102e:	80 38       	cpi	r24, 0x80	; 128
    1030:	71 05       	cpc	r23, r1
    1032:	61 05       	cpc	r22, r1
    1034:	09 f0       	breq	.+2      	; 0x1038 <__ftoa_engine+0x36>
    1036:	3c 5f       	subi	r19, 0xFC	; 252
    1038:	3c 5f       	subi	r19, 0xFC	; 252
    103a:	3d 93       	st	X+, r19
    103c:	91 30       	cpi	r25, 0x01	; 1
    103e:	08 f0       	brcs	.+2      	; 0x1042 <__ftoa_engine+0x40>
    1040:	80 68       	ori	r24, 0x80	; 128
    1042:	91 1d       	adc	r25, r1
    1044:	df 93       	push	r29
    1046:	cf 93       	push	r28
    1048:	1f 93       	push	r17
    104a:	0f 93       	push	r16
    104c:	ff 92       	push	r15
    104e:	ef 92       	push	r14
    1050:	19 2f       	mov	r17, r25
    1052:	98 7f       	andi	r25, 0xF8	; 248
    1054:	96 95       	lsr	r25
    1056:	e9 2f       	mov	r30, r25
    1058:	96 95       	lsr	r25
    105a:	96 95       	lsr	r25
    105c:	e9 0f       	add	r30, r25
    105e:	ff 27       	eor	r31, r31
    1060:	e2 51       	subi	r30, 0x12	; 18
    1062:	ff 4f       	sbci	r31, 0xFF	; 255
    1064:	99 27       	eor	r25, r25
    1066:	33 27       	eor	r19, r19
    1068:	ee 24       	eor	r14, r14
    106a:	ff 24       	eor	r15, r15
    106c:	a7 01       	movw	r20, r14
    106e:	e7 01       	movw	r28, r14
    1070:	05 90       	lpm	r0, Z+
    1072:	08 94       	sec
    1074:	07 94       	ror	r0
    1076:	28 f4       	brcc	.+10     	; 0x1082 <__ftoa_engine+0x80>
    1078:	36 0f       	add	r19, r22
    107a:	e7 1e       	adc	r14, r23
    107c:	f8 1e       	adc	r15, r24
    107e:	49 1f       	adc	r20, r25
    1080:	51 1d       	adc	r21, r1
    1082:	66 0f       	add	r22, r22
    1084:	77 1f       	adc	r23, r23
    1086:	88 1f       	adc	r24, r24
    1088:	99 1f       	adc	r25, r25
    108a:	06 94       	lsr	r0
    108c:	a1 f7       	brne	.-24     	; 0x1076 <__ftoa_engine+0x74>
    108e:	05 90       	lpm	r0, Z+
    1090:	07 94       	ror	r0
    1092:	28 f4       	brcc	.+10     	; 0x109e <__ftoa_engine+0x9c>
    1094:	e7 0e       	add	r14, r23
    1096:	f8 1e       	adc	r15, r24
    1098:	49 1f       	adc	r20, r25
    109a:	56 1f       	adc	r21, r22
    109c:	c1 1d       	adc	r28, r1
    109e:	77 0f       	add	r23, r23
    10a0:	88 1f       	adc	r24, r24
    10a2:	99 1f       	adc	r25, r25
    10a4:	66 1f       	adc	r22, r22
    10a6:	06 94       	lsr	r0
    10a8:	a1 f7       	brne	.-24     	; 0x1092 <__ftoa_engine+0x90>
    10aa:	05 90       	lpm	r0, Z+
    10ac:	07 94       	ror	r0
    10ae:	28 f4       	brcc	.+10     	; 0x10ba <__ftoa_engine+0xb8>
    10b0:	f8 0e       	add	r15, r24
    10b2:	49 1f       	adc	r20, r25
    10b4:	56 1f       	adc	r21, r22
    10b6:	c7 1f       	adc	r28, r23
    10b8:	d1 1d       	adc	r29, r1
    10ba:	88 0f       	add	r24, r24
    10bc:	99 1f       	adc	r25, r25
    10be:	66 1f       	adc	r22, r22
    10c0:	77 1f       	adc	r23, r23
    10c2:	06 94       	lsr	r0
    10c4:	a1 f7       	brne	.-24     	; 0x10ae <__ftoa_engine+0xac>
    10c6:	05 90       	lpm	r0, Z+
    10c8:	07 94       	ror	r0
    10ca:	20 f4       	brcc	.+8      	; 0x10d4 <__ftoa_engine+0xd2>
    10cc:	49 0f       	add	r20, r25
    10ce:	56 1f       	adc	r21, r22
    10d0:	c7 1f       	adc	r28, r23
    10d2:	d8 1f       	adc	r29, r24
    10d4:	99 0f       	add	r25, r25
    10d6:	66 1f       	adc	r22, r22
    10d8:	77 1f       	adc	r23, r23
    10da:	88 1f       	adc	r24, r24
    10dc:	06 94       	lsr	r0
    10de:	a9 f7       	brne	.-22     	; 0x10ca <__ftoa_engine+0xc8>
    10e0:	84 91       	lpm	r24, Z
    10e2:	10 95       	com	r17
    10e4:	17 70       	andi	r17, 0x07	; 7
    10e6:	41 f0       	breq	.+16     	; 0x10f8 <__ftoa_engine+0xf6>
    10e8:	d6 95       	lsr	r29
    10ea:	c7 95       	ror	r28
    10ec:	57 95       	ror	r21
    10ee:	47 95       	ror	r20
    10f0:	f7 94       	ror	r15
    10f2:	e7 94       	ror	r14
    10f4:	1a 95       	dec	r17
    10f6:	c1 f7       	brne	.-16     	; 0x10e8 <__ftoa_engine+0xe6>
    10f8:	e4 e9       	ldi	r30, 0x94	; 148
    10fa:	f0 e0       	ldi	r31, 0x00	; 0
    10fc:	68 94       	set
    10fe:	15 90       	lpm	r1, Z+
    1100:	15 91       	lpm	r17, Z+
    1102:	35 91       	lpm	r19, Z+
    1104:	65 91       	lpm	r22, Z+
    1106:	95 91       	lpm	r25, Z+
    1108:	05 90       	lpm	r0, Z+
    110a:	7f e2       	ldi	r23, 0x2F	; 47
    110c:	73 95       	inc	r23
    110e:	e1 18       	sub	r14, r1
    1110:	f1 0a       	sbc	r15, r17
    1112:	43 0b       	sbc	r20, r19
    1114:	56 0b       	sbc	r21, r22
    1116:	c9 0b       	sbc	r28, r25
    1118:	d0 09       	sbc	r29, r0
    111a:	c0 f7       	brcc	.-16     	; 0x110c <__ftoa_engine+0x10a>
    111c:	e1 0c       	add	r14, r1
    111e:	f1 1e       	adc	r15, r17
    1120:	43 1f       	adc	r20, r19
    1122:	56 1f       	adc	r21, r22
    1124:	c9 1f       	adc	r28, r25
    1126:	d0 1d       	adc	r29, r0
    1128:	7e f4       	brtc	.+30     	; 0x1148 <__ftoa_engine+0x146>
    112a:	70 33       	cpi	r23, 0x30	; 48
    112c:	11 f4       	brne	.+4      	; 0x1132 <__ftoa_engine+0x130>
    112e:	8a 95       	dec	r24
    1130:	e6 cf       	rjmp	.-52     	; 0x10fe <__ftoa_engine+0xfc>
    1132:	e8 94       	clt
    1134:	01 50       	subi	r16, 0x01	; 1
    1136:	30 f0       	brcs	.+12     	; 0x1144 <__ftoa_engine+0x142>
    1138:	08 0f       	add	r16, r24
    113a:	0a f4       	brpl	.+2      	; 0x113e <__ftoa_engine+0x13c>
    113c:	00 27       	eor	r16, r16
    113e:	02 17       	cp	r16, r18
    1140:	08 f4       	brcc	.+2      	; 0x1144 <__ftoa_engine+0x142>
    1142:	20 2f       	mov	r18, r16
    1144:	23 95       	inc	r18
    1146:	02 2f       	mov	r16, r18
    1148:	7a 33       	cpi	r23, 0x3A	; 58
    114a:	28 f0       	brcs	.+10     	; 0x1156 <__ftoa_engine+0x154>
    114c:	79 e3       	ldi	r23, 0x39	; 57
    114e:	7d 93       	st	X+, r23
    1150:	2a 95       	dec	r18
    1152:	e9 f7       	brne	.-6      	; 0x114e <__ftoa_engine+0x14c>
    1154:	10 c0       	rjmp	.+32     	; 0x1176 <__ftoa_engine+0x174>
    1156:	7d 93       	st	X+, r23
    1158:	2a 95       	dec	r18
    115a:	89 f6       	brne	.-94     	; 0x10fe <__ftoa_engine+0xfc>
    115c:	06 94       	lsr	r0
    115e:	97 95       	ror	r25
    1160:	67 95       	ror	r22
    1162:	37 95       	ror	r19
    1164:	17 95       	ror	r17
    1166:	17 94       	ror	r1
    1168:	e1 18       	sub	r14, r1
    116a:	f1 0a       	sbc	r15, r17
    116c:	43 0b       	sbc	r20, r19
    116e:	56 0b       	sbc	r21, r22
    1170:	c9 0b       	sbc	r28, r25
    1172:	d0 09       	sbc	r29, r0
    1174:	98 f0       	brcs	.+38     	; 0x119c <__ftoa_engine+0x19a>
    1176:	23 95       	inc	r18
    1178:	7e 91       	ld	r23, -X
    117a:	73 95       	inc	r23
    117c:	7a 33       	cpi	r23, 0x3A	; 58
    117e:	08 f0       	brcs	.+2      	; 0x1182 <__ftoa_engine+0x180>
    1180:	70 e3       	ldi	r23, 0x30	; 48
    1182:	7c 93       	st	X, r23
    1184:	20 13       	cpse	r18, r16
    1186:	b8 f7       	brcc	.-18     	; 0x1176 <__ftoa_engine+0x174>
    1188:	7e 91       	ld	r23, -X
    118a:	70 61       	ori	r23, 0x10	; 16
    118c:	7d 93       	st	X+, r23
    118e:	30 f0       	brcs	.+12     	; 0x119c <__ftoa_engine+0x19a>
    1190:	83 95       	inc	r24
    1192:	71 e3       	ldi	r23, 0x31	; 49
    1194:	7d 93       	st	X+, r23
    1196:	70 e3       	ldi	r23, 0x30	; 48
    1198:	2a 95       	dec	r18
    119a:	e1 f7       	brne	.-8      	; 0x1194 <__ftoa_engine+0x192>
    119c:	11 24       	eor	r1, r1
    119e:	ef 90       	pop	r14
    11a0:	ff 90       	pop	r15
    11a2:	0f 91       	pop	r16
    11a4:	1f 91       	pop	r17
    11a6:	cf 91       	pop	r28
    11a8:	df 91       	pop	r29
    11aa:	99 27       	eor	r25, r25
    11ac:	87 fd       	sbrc	r24, 7
    11ae:	90 95       	com	r25
    11b0:	08 95       	ret

000011b2 <strnlen_P>:
    11b2:	fc 01       	movw	r30, r24
    11b4:	05 90       	lpm	r0, Z+
    11b6:	61 50       	subi	r22, 0x01	; 1
    11b8:	70 40       	sbci	r23, 0x00	; 0
    11ba:	01 10       	cpse	r0, r1
    11bc:	d8 f7       	brcc	.-10     	; 0x11b4 <strnlen_P+0x2>
    11be:	80 95       	com	r24
    11c0:	90 95       	com	r25
    11c2:	8e 0f       	add	r24, r30
    11c4:	9f 1f       	adc	r25, r31
    11c6:	08 95       	ret

000011c8 <memcpy>:
    11c8:	fb 01       	movw	r30, r22
    11ca:	dc 01       	movw	r26, r24
    11cc:	02 c0       	rjmp	.+4      	; 0x11d2 <memcpy+0xa>
    11ce:	01 90       	ld	r0, Z+
    11d0:	0d 92       	st	X+, r0
    11d2:	41 50       	subi	r20, 0x01	; 1
    11d4:	50 40       	sbci	r21, 0x00	; 0
    11d6:	d8 f7       	brcc	.-10     	; 0x11ce <memcpy+0x6>
    11d8:	08 95       	ret

000011da <strnlen>:
    11da:	fc 01       	movw	r30, r24
    11dc:	61 50       	subi	r22, 0x01	; 1
    11de:	70 40       	sbci	r23, 0x00	; 0
    11e0:	01 90       	ld	r0, Z+
    11e2:	01 10       	cpse	r0, r1
    11e4:	d8 f7       	brcc	.-10     	; 0x11dc <strnlen+0x2>
    11e6:	80 95       	com	r24
    11e8:	90 95       	com	r25
    11ea:	8e 0f       	add	r24, r30
    11ec:	9f 1f       	adc	r25, r31
    11ee:	08 95       	ret

000011f0 <fputc>:
    11f0:	0f 93       	push	r16
    11f2:	1f 93       	push	r17
    11f4:	cf 93       	push	r28
    11f6:	df 93       	push	r29
    11f8:	fb 01       	movw	r30, r22
    11fa:	23 81       	ldd	r18, Z+3	; 0x03
    11fc:	21 fd       	sbrc	r18, 1
    11fe:	03 c0       	rjmp	.+6      	; 0x1206 <fputc+0x16>
    1200:	8f ef       	ldi	r24, 0xFF	; 255
    1202:	9f ef       	ldi	r25, 0xFF	; 255
    1204:	28 c0       	rjmp	.+80     	; 0x1256 <fputc+0x66>
    1206:	22 ff       	sbrs	r18, 2
    1208:	16 c0       	rjmp	.+44     	; 0x1236 <fputc+0x46>
    120a:	46 81       	ldd	r20, Z+6	; 0x06
    120c:	57 81       	ldd	r21, Z+7	; 0x07
    120e:	24 81       	ldd	r18, Z+4	; 0x04
    1210:	35 81       	ldd	r19, Z+5	; 0x05
    1212:	42 17       	cp	r20, r18
    1214:	53 07       	cpc	r21, r19
    1216:	44 f4       	brge	.+16     	; 0x1228 <fputc+0x38>
    1218:	a0 81       	ld	r26, Z
    121a:	b1 81       	ldd	r27, Z+1	; 0x01
    121c:	9d 01       	movw	r18, r26
    121e:	2f 5f       	subi	r18, 0xFF	; 255
    1220:	3f 4f       	sbci	r19, 0xFF	; 255
    1222:	31 83       	std	Z+1, r19	; 0x01
    1224:	20 83       	st	Z, r18
    1226:	8c 93       	st	X, r24
    1228:	26 81       	ldd	r18, Z+6	; 0x06
    122a:	37 81       	ldd	r19, Z+7	; 0x07
    122c:	2f 5f       	subi	r18, 0xFF	; 255
    122e:	3f 4f       	sbci	r19, 0xFF	; 255
    1230:	37 83       	std	Z+7, r19	; 0x07
    1232:	26 83       	std	Z+6, r18	; 0x06
    1234:	10 c0       	rjmp	.+32     	; 0x1256 <fputc+0x66>
    1236:	eb 01       	movw	r28, r22
    1238:	09 2f       	mov	r16, r25
    123a:	18 2f       	mov	r17, r24
    123c:	00 84       	ldd	r0, Z+8	; 0x08
    123e:	f1 85       	ldd	r31, Z+9	; 0x09
    1240:	e0 2d       	mov	r30, r0
    1242:	09 95       	icall
    1244:	89 2b       	or	r24, r25
    1246:	e1 f6       	brne	.-72     	; 0x1200 <fputc+0x10>
    1248:	8e 81       	ldd	r24, Y+6	; 0x06
    124a:	9f 81       	ldd	r25, Y+7	; 0x07
    124c:	01 96       	adiw	r24, 0x01	; 1
    124e:	9f 83       	std	Y+7, r25	; 0x07
    1250:	8e 83       	std	Y+6, r24	; 0x06
    1252:	81 2f       	mov	r24, r17
    1254:	90 2f       	mov	r25, r16
    1256:	df 91       	pop	r29
    1258:	cf 91       	pop	r28
    125a:	1f 91       	pop	r17
    125c:	0f 91       	pop	r16
    125e:	08 95       	ret

00001260 <__ultoa_invert>:
    1260:	fa 01       	movw	r30, r20
    1262:	aa 27       	eor	r26, r26
    1264:	28 30       	cpi	r18, 0x08	; 8
    1266:	51 f1       	breq	.+84     	; 0x12bc <__ultoa_invert+0x5c>
    1268:	20 31       	cpi	r18, 0x10	; 16
    126a:	81 f1       	breq	.+96     	; 0x12cc <__ultoa_invert+0x6c>
    126c:	e8 94       	clt
    126e:	6f 93       	push	r22
    1270:	6e 7f       	andi	r22, 0xFE	; 254
    1272:	6e 5f       	subi	r22, 0xFE	; 254
    1274:	7f 4f       	sbci	r23, 0xFF	; 255
    1276:	8f 4f       	sbci	r24, 0xFF	; 255
    1278:	9f 4f       	sbci	r25, 0xFF	; 255
    127a:	af 4f       	sbci	r26, 0xFF	; 255
    127c:	b1 e0       	ldi	r27, 0x01	; 1
    127e:	3e d0       	rcall	.+124    	; 0x12fc <__ultoa_invert+0x9c>
    1280:	b4 e0       	ldi	r27, 0x04	; 4
    1282:	3c d0       	rcall	.+120    	; 0x12fc <__ultoa_invert+0x9c>
    1284:	67 0f       	add	r22, r23
    1286:	78 1f       	adc	r23, r24
    1288:	89 1f       	adc	r24, r25
    128a:	9a 1f       	adc	r25, r26
    128c:	a1 1d       	adc	r26, r1
    128e:	68 0f       	add	r22, r24
    1290:	79 1f       	adc	r23, r25
    1292:	8a 1f       	adc	r24, r26
    1294:	91 1d       	adc	r25, r1
    1296:	a1 1d       	adc	r26, r1
    1298:	6a 0f       	add	r22, r26
    129a:	71 1d       	adc	r23, r1
    129c:	81 1d       	adc	r24, r1
    129e:	91 1d       	adc	r25, r1
    12a0:	a1 1d       	adc	r26, r1
    12a2:	20 d0       	rcall	.+64     	; 0x12e4 <__ultoa_invert+0x84>
    12a4:	09 f4       	brne	.+2      	; 0x12a8 <__ultoa_invert+0x48>
    12a6:	68 94       	set
    12a8:	3f 91       	pop	r19
    12aa:	2a e0       	ldi	r18, 0x0A	; 10
    12ac:	26 9f       	mul	r18, r22
    12ae:	11 24       	eor	r1, r1
    12b0:	30 19       	sub	r19, r0
    12b2:	30 5d       	subi	r19, 0xD0	; 208
    12b4:	31 93       	st	Z+, r19
    12b6:	de f6       	brtc	.-74     	; 0x126e <__ultoa_invert+0xe>
    12b8:	cf 01       	movw	r24, r30
    12ba:	08 95       	ret
    12bc:	46 2f       	mov	r20, r22
    12be:	47 70       	andi	r20, 0x07	; 7
    12c0:	40 5d       	subi	r20, 0xD0	; 208
    12c2:	41 93       	st	Z+, r20
    12c4:	b3 e0       	ldi	r27, 0x03	; 3
    12c6:	0f d0       	rcall	.+30     	; 0x12e6 <__ultoa_invert+0x86>
    12c8:	c9 f7       	brne	.-14     	; 0x12bc <__ultoa_invert+0x5c>
    12ca:	f6 cf       	rjmp	.-20     	; 0x12b8 <__ultoa_invert+0x58>
    12cc:	46 2f       	mov	r20, r22
    12ce:	4f 70       	andi	r20, 0x0F	; 15
    12d0:	40 5d       	subi	r20, 0xD0	; 208
    12d2:	4a 33       	cpi	r20, 0x3A	; 58
    12d4:	18 f0       	brcs	.+6      	; 0x12dc <__ultoa_invert+0x7c>
    12d6:	49 5d       	subi	r20, 0xD9	; 217
    12d8:	31 fd       	sbrc	r19, 1
    12da:	40 52       	subi	r20, 0x20	; 32
    12dc:	41 93       	st	Z+, r20
    12de:	02 d0       	rcall	.+4      	; 0x12e4 <__ultoa_invert+0x84>
    12e0:	a9 f7       	brne	.-22     	; 0x12cc <__ultoa_invert+0x6c>
    12e2:	ea cf       	rjmp	.-44     	; 0x12b8 <__ultoa_invert+0x58>
    12e4:	b4 e0       	ldi	r27, 0x04	; 4
    12e6:	a6 95       	lsr	r26
    12e8:	97 95       	ror	r25
    12ea:	87 95       	ror	r24
    12ec:	77 95       	ror	r23
    12ee:	67 95       	ror	r22
    12f0:	ba 95       	dec	r27
    12f2:	c9 f7       	brne	.-14     	; 0x12e6 <__ultoa_invert+0x86>
    12f4:	00 97       	sbiw	r24, 0x00	; 0
    12f6:	61 05       	cpc	r22, r1
    12f8:	71 05       	cpc	r23, r1
    12fa:	08 95       	ret
    12fc:	9b 01       	movw	r18, r22
    12fe:	ac 01       	movw	r20, r24
    1300:	0a 2e       	mov	r0, r26
    1302:	06 94       	lsr	r0
    1304:	57 95       	ror	r21
    1306:	47 95       	ror	r20
    1308:	37 95       	ror	r19
    130a:	27 95       	ror	r18
    130c:	ba 95       	dec	r27
    130e:	c9 f7       	brne	.-14     	; 0x1302 <__ultoa_invert+0xa2>
    1310:	62 0f       	add	r22, r18
    1312:	73 1f       	adc	r23, r19
    1314:	84 1f       	adc	r24, r20
    1316:	95 1f       	adc	r25, r21
    1318:	a0 1d       	adc	r26, r0
    131a:	08 95       	ret

0000131c <_exit>:
    131c:	f8 94       	cli

0000131e <__stop_program>:
    131e:	ff cf       	rjmp	.-2      	; 0x131e <__stop_program>
