
HeadsUp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000022  00800100  000010e0  00001154  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000010e0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00001176  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000011d4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000108  00000000  00000000  00001214  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001906  00000000  00000000  0000131c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005d7  00000000  00000000  00002c22  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000007f0  00000000  00000000  000031f9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002d8  00000000  00000000  000039ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000060d  00000000  00000000  00003cc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000af9  00000000  00000000  000042d1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d8  00000000  00000000  00004dca  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	c6 c0       	rjmp	.+396    	; 0x18e <__ctors_end>
       2:	00 00       	nop
       4:	d9 c0       	rjmp	.+434    	; 0x1b8 <__bad_interrupt>
       6:	00 00       	nop
       8:	d7 c0       	rjmp	.+430    	; 0x1b8 <__bad_interrupt>
       a:	00 00       	nop
       c:	d5 c0       	rjmp	.+426    	; 0x1b8 <__bad_interrupt>
       e:	00 00       	nop
      10:	d3 c0       	rjmp	.+422    	; 0x1b8 <__bad_interrupt>
      12:	00 00       	nop
      14:	d1 c0       	rjmp	.+418    	; 0x1b8 <__bad_interrupt>
      16:	00 00       	nop
      18:	cf c0       	rjmp	.+414    	; 0x1b8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	cd c0       	rjmp	.+410    	; 0x1b8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	cb c0       	rjmp	.+406    	; 0x1b8 <__bad_interrupt>
      22:	00 00       	nop
      24:	c9 c0       	rjmp	.+402    	; 0x1b8 <__bad_interrupt>
      26:	00 00       	nop
      28:	c7 c0       	rjmp	.+398    	; 0x1b8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	c5 c0       	rjmp	.+394    	; 0x1b8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	c3 c0       	rjmp	.+390    	; 0x1b8 <__bad_interrupt>
      32:	00 00       	nop
      34:	c1 c0       	rjmp	.+386    	; 0x1b8 <__bad_interrupt>
      36:	00 00       	nop
      38:	bf c0       	rjmp	.+382    	; 0x1b8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	bd c0       	rjmp	.+378    	; 0x1b8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	bb c0       	rjmp	.+374    	; 0x1b8 <__bad_interrupt>
      42:	00 00       	nop
      44:	b9 c0       	rjmp	.+370    	; 0x1b8 <__bad_interrupt>
      46:	00 00       	nop
      48:	b7 c0       	rjmp	.+366    	; 0x1b8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	b5 c0       	rjmp	.+362    	; 0x1b8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	b3 c0       	rjmp	.+358    	; 0x1b8 <__bad_interrupt>
      52:	00 00       	nop
      54:	b1 c0       	rjmp	.+354    	; 0x1b8 <__bad_interrupt>
      56:	00 00       	nop
      58:	af c0       	rjmp	.+350    	; 0x1b8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	ad c0       	rjmp	.+346    	; 0x1b8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	ab c0       	rjmp	.+342    	; 0x1b8 <__bad_interrupt>
      62:	00 00       	nop
      64:	a9 c0       	rjmp	.+338    	; 0x1b8 <__bad_interrupt>
      66:	00 00       	nop
      68:	a7 c0       	rjmp	.+334    	; 0x1b8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	a5 c0       	rjmp	.+330    	; 0x1b8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	a3 c0       	rjmp	.+326    	; 0x1b8 <__bad_interrupt>
      72:	00 00       	nop
      74:	a1 c0       	rjmp	.+322    	; 0x1b8 <__bad_interrupt>
      76:	00 00       	nop
      78:	9f c0       	rjmp	.+318    	; 0x1b8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	9d c0       	rjmp	.+314    	; 0x1b8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	9b c0       	rjmp	.+310    	; 0x1b8 <__bad_interrupt>
      82:	00 00       	nop
      84:	99 c0       	rjmp	.+306    	; 0x1b8 <__bad_interrupt>
      86:	00 00       	nop
      88:	97 c0       	rjmp	.+302    	; 0x1b8 <__bad_interrupt>
	...

0000008c <__trampolines_end>:
      8c:	6e 61       	ori	r22, 0x1E	; 30
      8e:	6e 00       	.word	0x006e	; ????

00000090 <__c.2177>:
      90:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      a0:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      b0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      c0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      d0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      e0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      f0:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     100:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     110:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     120:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     130:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     140:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     150:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     160:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     170:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     180:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000018e <__ctors_end>:
     18e:	11 24       	eor	r1, r1
     190:	1f be       	out	0x3f, r1	; 63
     192:	cf ef       	ldi	r28, 0xFF	; 255
     194:	d0 e4       	ldi	r29, 0x40	; 64
     196:	de bf       	out	0x3e, r29	; 62
     198:	cd bf       	out	0x3d, r28	; 61

0000019a <__do_copy_data>:
     19a:	11 e0       	ldi	r17, 0x01	; 1
     19c:	a0 e0       	ldi	r26, 0x00	; 0
     19e:	b1 e0       	ldi	r27, 0x01	; 1
     1a0:	e0 ee       	ldi	r30, 0xE0	; 224
     1a2:	f0 e1       	ldi	r31, 0x10	; 16
     1a4:	00 e0       	ldi	r16, 0x00	; 0
     1a6:	0b bf       	out	0x3b, r16	; 59
     1a8:	02 c0       	rjmp	.+4      	; 0x1ae <__do_copy_data+0x14>
     1aa:	07 90       	elpm	r0, Z+
     1ac:	0d 92       	st	X+, r0
     1ae:	a2 32       	cpi	r26, 0x22	; 34
     1b0:	b1 07       	cpc	r27, r17
     1b2:	d9 f7       	brne	.-10     	; 0x1aa <__do_copy_data+0x10>
     1b4:	54 d2       	rcall	.+1192   	; 0x65e <main>
     1b6:	92 c7       	rjmp	.+3876   	; 0x10dc <_exit>

000001b8 <__bad_interrupt>:
     1b8:	23 cf       	rjmp	.-442    	; 0x0 <__vectors>

000001ba <_ZN3lcd8TWI_INITEv>:
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);// Clear Flag and Enable
}

void lcd::TWI_STOP(){
	
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
     1ba:	e4 e6       	ldi	r30, 0x64	; 100
     1bc:	f0 e0       	ldi	r31, 0x00	; 0
     1be:	80 81       	ld	r24, Z
     1c0:	8f 77       	andi	r24, 0x7F	; 127
     1c2:	80 83       	st	Z, r24
     1c4:	ec eb       	ldi	r30, 0xBC	; 188
     1c6:	f0 e0       	ldi	r31, 0x00	; 0
     1c8:	80 81       	ld	r24, Z
     1ca:	8e 7f       	andi	r24, 0xFE	; 254
     1cc:	80 83       	st	Z, r24
     1ce:	82 e0       	ldi	r24, 0x02	; 2
     1d0:	80 93 b8 00 	sts	0x00B8, r24
     1d4:	e9 eb       	ldi	r30, 0xB9	; 185
     1d6:	f0 e0       	ldi	r31, 0x00	; 0
     1d8:	80 81       	ld	r24, Z
     1da:	8d 7f       	andi	r24, 0xFD	; 253
     1dc:	80 83       	st	Z, r24
     1de:	08 95       	ret

000001e0 <_ZN3lcd22TWI_StartCommunicationEv>:
	
}

void lcd::TWI_StartCommunication(){
	
	TWCR = (1 << TWEN) | (1 << TWINT) | (1 << TWSTA);
     1e0:	84 ea       	ldi	r24, 0xA4	; 164
     1e2:	80 93 bc 00 	sts	0x00BC, r24
	while ( ! (TWCR & (1 << TWINT)));				// wait for flag to be set
     1e6:	ec eb       	ldi	r30, 0xBC	; 188
     1e8:	f0 e0       	ldi	r31, 0x00	; 0
     1ea:	80 81       	ld	r24, Z
     1ec:	88 23       	and	r24, r24
     1ee:	ec f7       	brge	.-6      	; 0x1ea <_ZN3lcd22TWI_StartCommunicationEv+0xa>
}


void lcd::TWI_CheckStatusRegister(uint8_t Status){
	
	if( (TWSR & 0xF8) != Status ) {					// Error check for start condition
     1f0:	80 91 b9 00 	lds	r24, 0x00B9
     1f4:	08 95       	ret

000001f6 <_ZN3lcd16TWI_TransmitDataEhh>:
	
}

void lcd::TWI_TransmitData(uint8_t TwiData, uint8_t StatusCode){
	
	TWDR = TwiData;
     1f6:	60 93 bb 00 	sts	0x00BB, r22
}


void lcd::TWI_ClearFlagAndEnable(){
	
	TWCR = (1 << TWINT) | (1 << TWEN);				// Clear Flag and Enable
     1fa:	84 e8       	ldi	r24, 0x84	; 132
     1fc:	80 93 bc 00 	sts	0x00BC, r24
	
	TWDR = TwiData;
	/*After TWDR is loaded with SLA+W, a specific val must be written to TWCR, instucting the TWINT hardware
	to transmit the SLA+W present in TWDR*/
	TWI_ClearFlagAndEnable();
	while ( ! (TWCR & (1 << TWINT)));	// wait for flag to be set
     200:	ec eb       	ldi	r30, 0xBC	; 188
     202:	f0 e0       	ldi	r31, 0x00	; 0
     204:	80 81       	ld	r24, Z
     206:	88 23       	and	r24, r24
     208:	ec f7       	brge	.-6      	; 0x204 <_ZN3lcd16TWI_TransmitDataEhh+0xe>
}


void lcd::TWI_CheckStatusRegister(uint8_t Status){
	
	if( (TWSR & 0xF8) != Status ) {					// Error check for start condition
     20a:	80 91 b9 00 	lds	r24, 0x00B9
     20e:	08 95       	ret

00000210 <_ZN3lcd4ShowEPh>:
	TWI_CheckStatusRegister(StatusCode);	// works!!

}


void lcd::Show(unsigned char *text){
     210:	ef 92       	push	r14
     212:	ff 92       	push	r15
     214:	0f 93       	push	r16
     216:	1f 93       	push	r17
     218:	cf 93       	push	r28
     21a:	df 93       	push	r29
     21c:	8c 01       	movw	r16, r24
     21e:	eb 01       	movw	r28, r22
	
	int n, d;
	d=0x00;
	
	
	TWI_StartCommunication();
     220:	df df       	rcall	.-66     	; 0x1e0 <_ZN3lcd22TWI_StartCommunicationEv>
	
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     222:	48 e1       	ldi	r20, 0x18	; 24
     224:	6c e7       	ldi	r22, 0x7C	; 124
     226:	c8 01       	movw	r24, r16
     228:	e6 df       	rcall	.-52     	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(SEND_DATA,TW_MT_DATA_ACK);
     22a:	48 e2       	ldi	r20, 0x28	; 40
     22c:	60 e4       	ldi	r22, 0x40	; 64
     22e:	c8 01       	movw	r24, r16
     230:	e2 df       	rcall	.-60     	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
     232:	7e 01       	movw	r14, r28
     234:	80 e1       	ldi	r24, 0x10	; 16
     236:	e8 0e       	add	r14, r24
     238:	f1 1c       	adc	r15, r1
	for(n=0;n<16;n++){
		TWI_TransmitData(*text,TW_MT_DATA_ACK);
     23a:	48 e2       	ldi	r20, 0x28	; 40
     23c:	69 91       	ld	r22, Y+
     23e:	c8 01       	movw	r24, r16
     240:	da df       	rcall	.-76     	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	
	TWI_StartCommunication();
	
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
	TWI_TransmitData(SEND_DATA,TW_MT_DATA_ACK);
	for(n=0;n<16;n++){
     242:	ce 15       	cp	r28, r14
     244:	df 05       	cpc	r29, r15
     246:	c9 f7       	brne	.-14     	; 0x23a <_ZN3lcd4ShowEPh+0x2a>
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);// Clear Flag and Enable
}

void lcd::TWI_STOP(){
	
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
     248:	84 e9       	ldi	r24, 0x94	; 148
     24a:	80 93 bc 00 	sts	0x00BC, r24
		++text;
		}
		
	TWI_STOP();
	
}
     24e:	df 91       	pop	r29
     250:	cf 91       	pop	r28
     252:	1f 91       	pop	r17
     254:	0f 91       	pop	r16
     256:	ff 90       	pop	r15
     258:	ef 90       	pop	r14
     25a:	08 95       	ret

0000025c <_ZN3lcd11SelectLine1Ev>:


void lcd::SelectLine1(void){
     25c:	cf 93       	push	r28
     25e:	df 93       	push	r29
     260:	ec 01       	movw	r28, r24
	
	TWI_StartCommunication();
     262:	be df       	rcall	.-132    	; 0x1e0 <_ZN3lcd22TWI_StartCommunicationEv>
	
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     264:	48 e1       	ldi	r20, 0x18	; 24
     266:	6c e7       	ldi	r22, 0x7C	; 124
     268:	ce 01       	movw	r24, r28
     26a:	c5 df       	rcall	.-118    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     26c:	48 e2       	ldi	r20, 0x28	; 40
     26e:	60 e0       	ldi	r22, 0x00	; 0
     270:	ce 01       	movw	r24, r28
     272:	c1 df       	rcall	.-126    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(LINE_1,TW_MT_DATA_ACK);
     274:	48 e2       	ldi	r20, 0x28	; 40
     276:	60 e8       	ldi	r22, 0x80	; 128
     278:	ce 01       	movw	r24, r28
     27a:	bd df       	rcall	.-134    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);// Clear Flag and Enable
}

void lcd::TWI_STOP(){
	
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
     27c:	84 e9       	ldi	r24, 0x94	; 148
     27e:	80 93 bc 00 	sts	0x00BC, r24
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
	TWI_TransmitData(LINE_1,TW_MT_DATA_ACK);
	
	TWI_STOP();
}
     282:	df 91       	pop	r29
     284:	cf 91       	pop	r28
     286:	08 95       	ret

00000288 <_ZN3lcd11SelectLine2Ev>:


void lcd::SelectLine2(void){
     288:	cf 93       	push	r28
     28a:	df 93       	push	r29
     28c:	ec 01       	movw	r28, r24
	
	TWI_StartCommunication();
     28e:	a8 df       	rcall	.-176    	; 0x1e0 <_ZN3lcd22TWI_StartCommunicationEv>
	
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     290:	48 e1       	ldi	r20, 0x18	; 24
     292:	6c e7       	ldi	r22, 0x7C	; 124
     294:	ce 01       	movw	r24, r28
     296:	af df       	rcall	.-162    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     298:	48 e2       	ldi	r20, 0x28	; 40
     29a:	60 e0       	ldi	r22, 0x00	; 0
     29c:	ce 01       	movw	r24, r28
     29e:	ab df       	rcall	.-170    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(LINE_2,TW_MT_DATA_ACK);
     2a0:	48 e2       	ldi	r20, 0x28	; 40
     2a2:	60 ec       	ldi	r22, 0xC0	; 192
     2a4:	ce 01       	movw	r24, r28
     2a6:	a7 df       	rcall	.-178    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);// Clear Flag and Enable
}

void lcd::TWI_STOP(){
	
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
     2a8:	84 e9       	ldi	r24, 0x94	; 148
     2aa:	80 93 bc 00 	sts	0x00BC, r24
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
	TWI_TransmitData(LINE_2,TW_MT_DATA_ACK);
	
	TWI_STOP();
}
     2ae:	df 91       	pop	r29
     2b0:	cf 91       	pop	r28
     2b2:	08 95       	ret

000002b4 <_ZN3lcd5CGRAMEv>:

void lcd::CGRAM(void)
{
     2b4:	ff 92       	push	r15
     2b6:	0f 93       	push	r16
     2b8:	1f 93       	push	r17
     2ba:	cf 93       	push	r28
     2bc:	df 93       	push	r29
     2be:	ec 01       	movw	r28, r24
 	TWI_StartCommunication();
     2c0:	8f df       	rcall	.-226    	; 0x1e0 <_ZN3lcd22TWI_StartCommunicationEv>
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     2c2:	48 e1       	ldi	r20, 0x18	; 24
     2c4:	6c e7       	ldi	r22, 0x7C	; 124
     2c6:	ce 01       	movw	r24, r28
     2c8:	96 df       	rcall	.-212    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);;
     2ca:	48 e2       	ldi	r20, 0x28	; 40
     2cc:	60 e0       	ldi	r22, 0x00	; 0
     2ce:	ce 01       	movw	r24, r28
     2d0:	92 df       	rcall	.-220    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x38,TW_MT_DATA_ACK);		//go to instructino table 0
     2d2:	48 e2       	ldi	r20, 0x28	; 40
     2d4:	68 e3       	ldi	r22, 0x38	; 56
     2d6:	ce 01       	movw	r24, r28
     2d8:	8e df       	rcall	.-228    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x40,TW_MT_DATA_ACK);		//Set CGRAM address to 0x00
     2da:	48 e2       	ldi	r20, 0x28	; 40
     2dc:	60 e4       	ldi	r22, 0x40	; 64
     2de:	ce 01       	movw	r24, r28
     2e0:	8a df       	rcall	.-236    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);// Clear Flag and Enable
}

void lcd::TWI_STOP(){
	
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
     2e2:	0c eb       	ldi	r16, 0xBC	; 188
     2e4:	10 e0       	ldi	r17, 0x00	; 0
     2e6:	0f 2e       	mov	r0, r31
     2e8:	f4 e9       	ldi	r31, 0x94	; 148
     2ea:	ff 2e       	mov	r15, r31
     2ec:	f0 2d       	mov	r31, r0
     2ee:	f8 01       	movw	r30, r16
     2f0:	f0 82       	st	Z, r15
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2f2:	83 ec       	ldi	r24, 0xC3	; 195
     2f4:	99 e0       	ldi	r25, 0x09	; 9
     2f6:	01 97       	sbiw	r24, 0x01	; 1
     2f8:	f1 f7       	brne	.-4      	; 0x2f6 <_ZN3lcd5CGRAMEv+0x42>
     2fa:	00 c0       	rjmp	.+0      	; 0x2fc <_ZN3lcd5CGRAMEv+0x48>
     2fc:	00 00       	nop
	TWI_TransmitData(0x38,TW_MT_DATA_ACK);		//go to instructino table 0
	TWI_TransmitData(0x40,TW_MT_DATA_ACK);		//Set CGRAM address to 0x00
	TWI_STOP();
	_delay_ms(10);
	
	TWI_StartCommunication();
     2fe:	ce 01       	movw	r24, r28
     300:	6f df       	rcall	.-290    	; 0x1e0 <_ZN3lcd22TWI_StartCommunicationEv>
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     302:	48 e1       	ldi	r20, 0x18	; 24
     304:	6c e7       	ldi	r22, 0x7C	; 124
     306:	ce 01       	movw	r24, r28
     308:	76 df       	rcall	.-276    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     30a:	48 e2       	ldi	r20, 0x28	; 40
     30c:	60 e0       	ldi	r22, 0x00	; 0
     30e:	ce 01       	movw	r24, r28
     310:	72 df       	rcall	.-284    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x00,TW_MT_DATA_ACK);		//write to first CGRAM address
     312:	48 e2       	ldi	r20, 0x28	; 40
     314:	60 e0       	ldi	r22, 0x00	; 0
     316:	ce 01       	movw	r24, r28
     318:	6e df       	rcall	.-292    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x1E,TW_MT_DATA_ACK);
     31a:	48 e2       	ldi	r20, 0x28	; 40
     31c:	6e e1       	ldi	r22, 0x1E	; 30
     31e:	ce 01       	movw	r24, r28
     320:	6a df       	rcall	.-300    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x18,TW_MT_DATA_ACK);
     322:	48 e2       	ldi	r20, 0x28	; 40
     324:	68 e1       	ldi	r22, 0x18	; 24
     326:	ce 01       	movw	r24, r28
     328:	66 df       	rcall	.-308    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x14,TW_MT_DATA_ACK);
     32a:	48 e2       	ldi	r20, 0x28	; 40
     32c:	64 e1       	ldi	r22, 0x14	; 20
     32e:	ce 01       	movw	r24, r28
     330:	62 df       	rcall	.-316    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x12,TW_MT_DATA_ACK);
     332:	48 e2       	ldi	r20, 0x28	; 40
     334:	62 e1       	ldi	r22, 0x12	; 18
     336:	ce 01       	movw	r24, r28
     338:	5e df       	rcall	.-324    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);
     33a:	48 e2       	ldi	r20, 0x28	; 40
     33c:	61 e0       	ldi	r22, 0x01	; 1
     33e:	ce 01       	movw	r24, r28
     340:	5a df       	rcall	.-332    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x00,TW_MT_DATA_ACK);
     342:	48 e2       	ldi	r20, 0x28	; 40
     344:	60 e0       	ldi	r22, 0x00	; 0
     346:	ce 01       	movw	r24, r28
     348:	56 df       	rcall	.-340    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x00,TW_MT_DATA_ACK);		//8 bytes per character
     34a:	48 e2       	ldi	r20, 0x28	; 40
     34c:	60 e0       	ldi	r22, 0x00	; 0
     34e:	ce 01       	movw	r24, r28
     350:	52 df       	rcall	.-348    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);// Clear Flag and Enable
}

void lcd::TWI_STOP(){
	
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
     352:	f8 01       	movw	r30, r16
     354:	f0 82       	st	Z, r15
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);
	TWI_TransmitData(0x00,TW_MT_DATA_ACK);
	TWI_TransmitData(0x00,TW_MT_DATA_ACK);		//8 bytes per character
	//continue writing to remaining CGRAM if desired
	TWI_STOP();
}
     356:	df 91       	pop	r29
     358:	cf 91       	pop	r28
     35a:	1f 91       	pop	r17
     35c:	0f 91       	pop	r16
     35e:	ff 90       	pop	r15
     360:	08 95       	ret

00000362 <_ZN3lcd8init_LCDEv>:

void lcd::init_LCD()
{
     362:	ff 92       	push	r15
     364:	0f 93       	push	r16
     366:	1f 93       	push	r17
     368:	cf 93       	push	r28
     36a:	df 93       	push	r29
     36c:	ec 01       	movw	r28, r24
	TWI_StartCommunication();
     36e:	38 df       	rcall	.-400    	; 0x1e0 <_ZN3lcd22TWI_StartCommunicationEv>
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     370:	48 e1       	ldi	r20, 0x18	; 24
     372:	6c e7       	ldi	r22, 0x7C	; 124
     374:	ce 01       	movw	r24, r28
     376:	3f df       	rcall	.-386    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     378:	48 e2       	ldi	r20, 0x28	; 40
     37a:	60 e0       	ldi	r22, 0x00	; 0
     37c:	ce 01       	movw	r24, r28
     37e:	3b df       	rcall	.-394    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x38,TW_MT_DATA_ACK);						// Function Set: 8 bit bus mode, 2-line mode, single height font
     380:	48 e2       	ldi	r20, 0x28	; 40
     382:	68 e3       	ldi	r22, 0x38	; 56
     384:	ce 01       	movw	r24, r28
     386:	37 df       	rcall	.-402    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
     388:	87 ea       	ldi	r24, 0xA7	; 167
     38a:	91 e6       	ldi	r25, 0x61	; 97
     38c:	01 97       	sbiw	r24, 0x01	; 1
     38e:	f1 f7       	brne	.-4      	; 0x38c <_ZN3lcd8init_LCDEv+0x2a>
     390:	00 c0       	rjmp	.+0      	; 0x392 <_ZN3lcd8init_LCDEv+0x30>
     392:	00 00       	nop
	_delay_ms(100);
	TWI_TransmitData(0x39,TW_MT_DATA_ACK);						// Use Extended instruction set
     394:	48 e2       	ldi	r20, 0x28	; 40
     396:	69 e3       	ldi	r22, 0x39	; 57
     398:	ce 01       	movw	r24, r28
     39a:	2d df       	rcall	.-422    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
     39c:	e7 ea       	ldi	r30, 0xA7	; 167
     39e:	f1 e6       	ldi	r31, 0x61	; 97
     3a0:	31 97       	sbiw	r30, 0x01	; 1
     3a2:	f1 f7       	brne	.-4      	; 0x3a0 <_ZN3lcd8init_LCDEv+0x3e>
     3a4:	00 c0       	rjmp	.+0      	; 0x3a6 <_ZN3lcd8init_LCDEv+0x44>
     3a6:	00 00       	nop
	_delay_ms(100);
	TWI_TransmitData(0x14,TW_MT_DATA_ACK);						// Set Internal Osc Freq
     3a8:	48 e2       	ldi	r20, 0x28	; 40
     3aa:	64 e1       	ldi	r22, 0x14	; 20
     3ac:	ce 01       	movw	r24, r28
     3ae:	23 df       	rcall	.-442    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x78,TW_MT_DATA_ACK);						// Contrast Set
     3b0:	48 e2       	ldi	r20, 0x28	; 40
     3b2:	68 e7       	ldi	r22, 0x78	; 120
     3b4:	ce 01       	movw	r24, r28
     3b6:	1f df       	rcall	.-450    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x5D,TW_MT_DATA_ACK);						// Power/Icon/Contrast Control
     3b8:	48 e2       	ldi	r20, 0x28	; 40
     3ba:	6d e5       	ldi	r22, 0x5D	; 93
     3bc:	ce 01       	movw	r24, r28
     3be:	1b df       	rcall	.-458    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x6D,TW_MT_DATA_ACK);						// Follower Control
     3c0:	48 e2       	ldi	r20, 0x28	; 40
     3c2:	6d e6       	ldi	r22, 0x6D	; 109
     3c4:	ce 01       	movw	r24, r28
     3c6:	17 df       	rcall	.-466    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x0C,TW_MT_DATA_ACK);						// Display On/Off
     3c8:	48 e2       	ldi	r20, 0x28	; 40
     3ca:	6c e0       	ldi	r22, 0x0C	; 12
     3cc:	ce 01       	movw	r24, r28
     3ce:	13 df       	rcall	.-474    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);						// Clear Display
     3d0:	48 e2       	ldi	r20, 0x28	; 40
     3d2:	61 e0       	ldi	r22, 0x01	; 1
     3d4:	ce 01       	movw	r24, r28
     3d6:	0f df       	rcall	.-482    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x06,TW_MT_DATA_ACK);						// Entry Mode Set: Cursor/Shift as characters input
     3d8:	48 e2       	ldi	r20, 0x28	; 40
     3da:	66 e0       	ldi	r22, 0x06	; 6
     3dc:	ce 01       	movw	r24, r28
     3de:	0b df       	rcall	.-490    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
     3e0:	87 ea       	ldi	r24, 0xA7	; 167
     3e2:	91 e6       	ldi	r25, 0x61	; 97
     3e4:	01 97       	sbiw	r24, 0x01	; 1
     3e6:	f1 f7       	brne	.-4      	; 0x3e4 <_ZN3lcd8init_LCDEv+0x82>
     3e8:	00 c0       	rjmp	.+0      	; 0x3ea <_ZN3lcd8init_LCDEv+0x88>
     3ea:	00 00       	nop
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);// Clear Flag and Enable
}

void lcd::TWI_STOP(){
	
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
     3ec:	0c eb       	ldi	r16, 0xBC	; 188
     3ee:	10 e0       	ldi	r17, 0x00	; 0
     3f0:	0f 2e       	mov	r0, r31
     3f2:	f4 e9       	ldi	r31, 0x94	; 148
     3f4:	ff 2e       	mov	r15, r31
     3f6:	f0 2d       	mov	r31, r0
     3f8:	f8 01       	movw	r30, r16
     3fa:	f0 82       	st	Z, r15
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);						// Clear Display
	TWI_TransmitData(0x06,TW_MT_DATA_ACK);						// Entry Mode Set: Cursor/Shift as characters input
	_delay_ms(100);
	TWI_STOP();

	CGRAM();			//define CGRAM
     3fc:	ce 01       	movw	r24, r28
     3fe:	5a df       	rcall	.-332    	; 0x2b4 <_ZN3lcd5CGRAMEv>

	TWI_StartCommunication();
     400:	ce 01       	movw	r24, r28
     402:	ee de       	rcall	.-548    	; 0x1e0 <_ZN3lcd22TWI_StartCommunicationEv>
	TWI_TransmitData(SLA,TW_MT_SLA_ACK);
     404:	48 e1       	ldi	r20, 0x18	; 24
     406:	6c e7       	ldi	r22, 0x7C	; 124
     408:	ce 01       	movw	r24, r28
     40a:	f5 de       	rcall	.-534    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
     40c:	48 e2       	ldi	r20, 0x28	; 40
     40e:	60 e0       	ldi	r22, 0x00	; 0
     410:	ce 01       	movw	r24, r28
     412:	f1 de       	rcall	.-542    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x39,TW_MT_DATA_ACK);
     414:	48 e2       	ldi	r20, 0x28	; 40
     416:	69 e3       	ldi	r22, 0x39	; 57
     418:	ce 01       	movw	r24, r28
     41a:	ed de       	rcall	.-550    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);
     41c:	48 e2       	ldi	r20, 0x28	; 40
     41e:	61 e0       	ldi	r22, 0x01	; 1
     420:	ce 01       	movw	r24, r28
     422:	e9 de       	rcall	.-558    	; 0x1f6 <_ZN3lcd16TWI_TransmitDataEhh>
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);// Clear Flag and Enable
}

void lcd::TWI_STOP(){
	
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
     424:	f8 01       	movw	r30, r16
     426:	f0 82       	st	Z, r15
     428:	87 ea       	ldi	r24, 0xA7	; 167
     42a:	91 e6       	ldi	r25, 0x61	; 97
     42c:	01 97       	sbiw	r24, 0x01	; 1
     42e:	f1 f7       	brne	.-4      	; 0x42c <_ZN3lcd8init_LCDEv+0xca>
     430:	00 c0       	rjmp	.+0      	; 0x432 <_ZN3lcd8init_LCDEv+0xd0>
     432:	00 00       	nop
	TWI_TransmitData(SEND_COMMAND,TW_MT_DATA_ACK);
	TWI_TransmitData(0x39,TW_MT_DATA_ACK);
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);
	TWI_STOP();
	_delay_ms(100);
}
     434:	df 91       	pop	r29
     436:	cf 91       	pop	r28
     438:	1f 91       	pop	r17
     43a:	0f 91       	pop	r16
     43c:	ff 90       	pop	r15
     43e:	08 95       	ret

00000440 <_ZN3lcdC1Ev>:
#include "LCD.h"


lcd::lcd(){
     440:	cf 93       	push	r28
     442:	df 93       	push	r29
     444:	ec 01       	movw	r28, r24
	
		TWI_INIT();
     446:	b9 de       	rcall	.-654    	; 0x1ba <_ZN3lcd8TWI_INITEv>
		init_LCD();
     448:	ce 01       	movw	r24, r28
     44a:	8b df       	rcall	.-234    	; 0x362 <_ZN3lcd8init_LCDEv>
     44c:	87 e8       	ldi	r24, 0x87	; 135
     44e:	93 e1       	ldi	r25, 0x13	; 19
     450:	01 97       	sbiw	r24, 0x01	; 1
     452:	f1 f7       	brne	.-4      	; 0x450 <_ZN3lcdC1Ev+0x10>
     454:	00 c0       	rjmp	.+0      	; 0x456 <_ZN3lcdC1Ev+0x16>
     456:	00 00       	nop
		_delay_ms(20);
		
}
     458:	df 91       	pop	r29
     45a:	cf 91       	pop	r28
     45c:	08 95       	ret

0000045e <_ZN3lcd5printEPhh>:
	print(text2, LINE_BOTTOM);

}


void lcd::print(unsigned char *text, uint8_t valLine){
     45e:	0f 93       	push	r16
     460:	1f 93       	push	r17
     462:	cf 93       	push	r28
     464:	df 93       	push	r29
     466:	ec 01       	movw	r28, r24
     468:	8b 01       	movw	r16, r22
		
	if( valLine == LINE_TOP ){
     46a:	41 11       	cpse	r20, r1
     46c:	0b c0       	rjmp	.+22     	; 0x484 <_ZN3lcd5printEPhh+0x26>
		SelectLine1();
     46e:	f6 de       	rcall	.-532    	; 0x25c <_ZN3lcd11SelectLine1Ev>
     470:	83 ec       	ldi	r24, 0xC3	; 195
     472:	99 e0       	ldi	r25, 0x09	; 9
     474:	01 97       	sbiw	r24, 0x01	; 1
     476:	f1 f7       	brne	.-4      	; 0x474 <_ZN3lcd5printEPhh+0x16>
     478:	00 c0       	rjmp	.+0      	; 0x47a <_ZN3lcd5printEPhh+0x1c>
     47a:	00 00       	nop
		_delay_ms(10);
		Show(text);
     47c:	b8 01       	movw	r22, r16
     47e:	ce 01       	movw	r24, r28
     480:	c7 de       	rcall	.-626    	; 0x210 <_ZN3lcd4ShowEPh>
     482:	0c c0       	rjmp	.+24     	; 0x49c <_ZN3lcd5printEPhh+0x3e>
	}else if( valLine == LINE_BOTTOM ){
     484:	41 30       	cpi	r20, 0x01	; 1
     486:	51 f4       	brne	.+20     	; 0x49c <_ZN3lcd5printEPhh+0x3e>
		SelectLine2();
     488:	ff de       	rcall	.-514    	; 0x288 <_ZN3lcd11SelectLine2Ev>
     48a:	83 ec       	ldi	r24, 0xC3	; 195
     48c:	99 e0       	ldi	r25, 0x09	; 9
     48e:	01 97       	sbiw	r24, 0x01	; 1
     490:	f1 f7       	brne	.-4      	; 0x48e <_ZN3lcd5printEPhh+0x30>
     492:	00 c0       	rjmp	.+0      	; 0x494 <_ZN3lcd5printEPhh+0x36>
     494:	00 00       	nop
		_delay_ms(10);
		Show(text);
     496:	b8 01       	movw	r22, r16
     498:	ce 01       	movw	r24, r28
     49a:	ba de       	rcall	.-652    	; 0x210 <_ZN3lcd4ShowEPh>
	}
		
}
     49c:	df 91       	pop	r29
     49e:	cf 91       	pop	r28
     4a0:	1f 91       	pop	r17
     4a2:	0f 91       	pop	r16
     4a4:	08 95       	ret

000004a6 <_ZN3lcd15test_LCD_ScreenEv>:
	TWI_TransmitData(0x01,TW_MT_DATA_ACK);
	TWI_STOP();
	_delay_ms(100);
}

void lcd::test_LCD_Screen(){
     4a6:	0f 93       	push	r16
     4a8:	1f 93       	push	r17
     4aa:	cf 93       	push	r28
     4ac:	df 93       	push	r29
     4ae:	cd b7       	in	r28, 0x3d	; 61
     4b0:	de b7       	in	r29, 0x3e	; 62
     4b2:	a2 97       	sbiw	r28, 0x22	; 34
     4b4:	0f b6       	in	r0, 0x3f	; 63
     4b6:	f8 94       	cli
     4b8:	de bf       	out	0x3e, r29	; 62
     4ba:	0f be       	out	0x3f, r0	; 63
     4bc:	cd bf       	out	0x3d, r28	; 61
     4be:	8c 01       	movw	r16, r24
	
	unsigned char text1[]={"-! TEST LINE 1 !"};
     4c0:	81 e1       	ldi	r24, 0x11	; 17
     4c2:	e0 e0       	ldi	r30, 0x00	; 0
     4c4:	f1 e0       	ldi	r31, 0x01	; 1
     4c6:	de 01       	movw	r26, r28
     4c8:	52 96       	adiw	r26, 0x12	; 18
     4ca:	01 90       	ld	r0, Z+
     4cc:	0d 92       	st	X+, r0
     4ce:	8a 95       	dec	r24
     4d0:	e1 f7       	brne	.-8      	; 0x4ca <_ZN3lcd15test_LCD_ScreenEv+0x24>
	unsigned char text2[]={"! TEST LINE 2 !-"};
     4d2:	81 e1       	ldi	r24, 0x11	; 17
     4d4:	e1 e1       	ldi	r30, 0x11	; 17
     4d6:	f1 e0       	ldi	r31, 0x01	; 1
     4d8:	de 01       	movw	r26, r28
     4da:	11 96       	adiw	r26, 0x01	; 1
     4dc:	01 90       	ld	r0, Z+
     4de:	0d 92       	st	X+, r0
     4e0:	8a 95       	dec	r24
     4e2:	e1 f7       	brne	.-8      	; 0x4dc <_ZN3lcd15test_LCD_ScreenEv+0x36>

	
	print(text1, LINE_TOP);
     4e4:	40 e0       	ldi	r20, 0x00	; 0
     4e6:	be 01       	movw	r22, r28
     4e8:	6e 5e       	subi	r22, 0xEE	; 238
     4ea:	7f 4f       	sbci	r23, 0xFF	; 255
     4ec:	c8 01       	movw	r24, r16
     4ee:	b7 df       	rcall	.-146    	; 0x45e <_ZN3lcd5printEPhh>
	print(text2, LINE_BOTTOM);
     4f0:	41 e0       	ldi	r20, 0x01	; 1
     4f2:	be 01       	movw	r22, r28
     4f4:	6f 5f       	subi	r22, 0xFF	; 255
     4f6:	7f 4f       	sbci	r23, 0xFF	; 255
     4f8:	c8 01       	movw	r24, r16
     4fa:	b1 df       	rcall	.-158    	; 0x45e <_ZN3lcd5printEPhh>
     4fc:	83 e2       	ldi	r24, 0x23	; 35
     4fe:	94 ef       	ldi	r25, 0xF4	; 244
     500:	01 97       	sbiw	r24, 0x01	; 1
     502:	f1 f7       	brne	.-4      	; 0x500 <_ZN3lcd15test_LCD_ScreenEv+0x5a>
     504:	00 c0       	rjmp	.+0      	; 0x506 <_ZN3lcd15test_LCD_ScreenEv+0x60>
     506:	00 00       	nop
	_delay_ms(250);
	print(text1, LINE_BOTTOM);
     508:	41 e0       	ldi	r20, 0x01	; 1
     50a:	be 01       	movw	r22, r28
     50c:	6e 5e       	subi	r22, 0xEE	; 238
     50e:	7f 4f       	sbci	r23, 0xFF	; 255
     510:	c8 01       	movw	r24, r16
     512:	a5 df       	rcall	.-182    	; 0x45e <_ZN3lcd5printEPhh>
	print(text2, LINE_TOP);
     514:	40 e0       	ldi	r20, 0x00	; 0
     516:	be 01       	movw	r22, r28
     518:	6f 5f       	subi	r22, 0xFF	; 255
     51a:	7f 4f       	sbci	r23, 0xFF	; 255
     51c:	c8 01       	movw	r24, r16
     51e:	9f df       	rcall	.-194    	; 0x45e <_ZN3lcd5printEPhh>
     520:	83 e2       	ldi	r24, 0x23	; 35
     522:	94 ef       	ldi	r25, 0xF4	; 244
     524:	01 97       	sbiw	r24, 0x01	; 1
     526:	f1 f7       	brne	.-4      	; 0x524 <_ZN3lcd15test_LCD_ScreenEv+0x7e>
     528:	00 c0       	rjmp	.+0      	; 0x52a <_ZN3lcd15test_LCD_ScreenEv+0x84>
     52a:	00 00       	nop
	_delay_ms(250);
	print(text1, LINE_TOP);
     52c:	40 e0       	ldi	r20, 0x00	; 0
     52e:	be 01       	movw	r22, r28
     530:	6e 5e       	subi	r22, 0xEE	; 238
     532:	7f 4f       	sbci	r23, 0xFF	; 255
     534:	c8 01       	movw	r24, r16
     536:	93 df       	rcall	.-218    	; 0x45e <_ZN3lcd5printEPhh>
	print(text2, LINE_BOTTOM);
     538:	41 e0       	ldi	r20, 0x01	; 1
     53a:	be 01       	movw	r22, r28
     53c:	6f 5f       	subi	r22, 0xFF	; 255
     53e:	7f 4f       	sbci	r23, 0xFF	; 255
     540:	c8 01       	movw	r24, r16
     542:	8d df       	rcall	.-230    	; 0x45e <_ZN3lcd5printEPhh>

}
     544:	a2 96       	adiw	r28, 0x22	; 34
     546:	0f b6       	in	r0, 0x3f	; 63
     548:	f8 94       	cli
     54a:	de bf       	out	0x3e, r29	; 62
     54c:	0f be       	out	0x3f, r0	; 63
     54e:	cd bf       	out	0x3d, r28	; 61
     550:	df 91       	pop	r29
     552:	cf 91       	pop	r28
     554:	1f 91       	pop	r17
     556:	0f 91       	pop	r16
     558:	08 95       	ret

0000055a <_Z17ds1305_spi_selectv>:
*	with other devices, their Select routines should reset these
*	parameters to their value.
*	Raising the line enables the part
*/
void ds1305_spi_select() {
	SPCR |= (1<<CPHA);
     55a:	8c b5       	in	r24, 0x2c	; 44
     55c:	84 60       	ori	r24, 0x04	; 4
     55e:	8c bd       	out	0x2c, r24	; 44
	PORTB |= (1<<SS_PIN);
     560:	2c 9a       	sbi	0x05, 4	; 5
     562:	08 95       	ret

00000564 <_Z19ds1305_spi_deselectv>:
/*
*	This routine de-selects the device by lowering the CE
*	line. Must be done after the master transmit is complete
*/
void ds1305_spi_deselect() {
	PORTB &= ~(1<<SS_PIN);
     564:	2c 98       	cbi	0x05, 4	; 5
     566:	08 95       	ret

00000568 <_Z11ds1305_Initv>:
}

void ds1305_Init()
{
     568:	cf 93       	push	r28
     56a:	df 93       	push	r29
     56c:	1f 92       	push	r1
     56e:	cd b7       	in	r28, 0x3d	; 61
     570:	de b7       	in	r29, 0x3e	; 62
	volatile char IOReg;
	/* Outputs: MOSI and SCK out, all others inputs */
	DDRB = (1<<DD_MOSI_PIN) | (1<<DD_SCK_PIN) | (1<<DD_SS_PIN);
     572:	80 eb       	ldi	r24, 0xB0	; 176
     574:	84 b9       	out	0x04, r24	; 4
	/* Enable SPI, Master, CPOL=0, CPHA=1, set clock rate fck/16 */
	SPCR = (1<<SPE) | (1<<MSTR) | (1<<SPR0);	// POSSIBLE ERROR: PULLING DATA HIGH
     576:	81 e5       	ldi	r24, 0x51	; 81
     578:	8c bd       	out	0x2c, r24	; 44
	
	/* Clear the SPIF bit in SPSR */
	IOReg = SPSR;
     57a:	8d b5       	in	r24, 0x2d	; 45
     57c:	89 83       	std	Y+1, r24	; 0x01
	IOReg = SPDR;
     57e:	8e b5       	in	r24, 0x2e	; 46
     580:	89 83       	std	Y+1, r24	; 0x01
	ds1305_spi_deselect();
     582:	f0 df       	rcall	.-32     	; 0x564 <_Z19ds1305_spi_deselectv>
}
     584:	0f 90       	pop	r0
     586:	df 91       	pop	r29
     588:	cf 91       	pop	r28
     58a:	08 95       	ret

0000058c <_Z18SPI_MasterTransmith>:
// This routine exchanges 1 byte with the SPI port. 
unsigned char SPI_MasterTransmit(unsigned char cData)
{
	// Set Pointer to beginning of String

	SPDR  = cData;
     58c:	8e bd       	out	0x2e, r24	; 46
	/* wait until Char is sent */
	while (!(SPSR & (1<<SPIF))){
     58e:	0d b4       	in	r0, 0x2d	; 45
     590:	07 fe       	sbrs	r0, 7
     592:	fd cf       	rjmp	.-6      	; 0x58e <_Z18SPI_MasterTransmith+0x2>
		;	
	}
	return SPDR;
     594:	8e b5       	in	r24, 0x2e	; 46
}
     596:	08 95       	ret

00000598 <_Z16ds1305_ReadBlockhPhj>:
/*
*	ReadBlock reads iCount bytes starting at cAddr into the
*	buffer pBuffer
*/
void ds1305_ReadBlock(unsigned char cAddr, unsigned char *pBuffer, unsigned int iCount)
{
     598:	ef 92       	push	r14
     59a:	ff 92       	push	r15
     59c:	0f 93       	push	r16
     59e:	1f 93       	push	r17
     5a0:	cf 93       	push	r28
     5a2:	df 93       	push	r29
     5a4:	18 2f       	mov	r17, r24
     5a6:	e6 2e       	mov	r14, r22
     5a8:	f7 2e       	mov	r15, r23
     5aa:	ea 01       	movw	r28, r20
	ds1305_spi_select();
     5ac:	d6 df       	rcall	.-84     	; 0x55a <_Z17ds1305_spi_selectv>
	SPI_MasterTransmit(cAddr);
     5ae:	81 2f       	mov	r24, r17
     5b0:	ed df       	rcall	.-38     	; 0x58c <_Z18SPI_MasterTransmith>
	while(iCount--)
     5b2:	20 97       	sbiw	r28, 0x00	; 0
     5b4:	49 f0       	breq	.+18     	; 0x5c8 <_Z16ds1305_ReadBlockhPhj+0x30>
     5b6:	0e 2d       	mov	r16, r14
     5b8:	1f 2d       	mov	r17, r15
	{
		*pBuffer++ = SPI_MasterTransmit(0);
     5ba:	80 e0       	ldi	r24, 0x00	; 0
     5bc:	e7 df       	rcall	.-50     	; 0x58c <_Z18SPI_MasterTransmith>
     5be:	f8 01       	movw	r30, r16
     5c0:	81 93       	st	Z+, r24
     5c2:	8f 01       	movw	r16, r30
     5c4:	21 97       	sbiw	r28, 0x01	; 1
*/
void ds1305_ReadBlock(unsigned char cAddr, unsigned char *pBuffer, unsigned int iCount)
{
	ds1305_spi_select();
	SPI_MasterTransmit(cAddr);
	while(iCount--)
     5c6:	c9 f7       	brne	.-14     	; 0x5ba <_Z16ds1305_ReadBlockhPhj+0x22>
	{
		*pBuffer++ = SPI_MasterTransmit(0);
	}
	ds1305_spi_deselect();
     5c8:	cd df       	rcall	.-102    	; 0x564 <_Z19ds1305_spi_deselectv>
}
     5ca:	df 91       	pop	r29
     5cc:	cf 91       	pop	r28
     5ce:	1f 91       	pop	r17
     5d0:	0f 91       	pop	r16
     5d2:	ff 90       	pop	r15
     5d4:	ef 90       	pop	r14
     5d6:	08 95       	ret

000005d8 <_Z17ds1305_WriteBlockhPhj>:
*  WriteBlock sends iCount bytes from the buffer pBuffer
*  to the device at iAddr + 0x80. The device uses a split
*  memory map where all write addresses are at address +0x80
*/
void ds1305_WriteBlock(unsigned char iAddr, unsigned char *pBuffer, unsigned int iCount)
{
     5d8:	ef 92       	push	r14
     5da:	ff 92       	push	r15
     5dc:	0f 93       	push	r16
     5de:	1f 93       	push	r17
     5e0:	cf 93       	push	r28
     5e2:	df 93       	push	r29
     5e4:	18 2f       	mov	r17, r24
     5e6:	e6 2e       	mov	r14, r22
     5e8:	f7 2e       	mov	r15, r23
     5ea:	ea 01       	movw	r28, r20
	ds1305_spi_select();
     5ec:	b6 df       	rcall	.-148    	; 0x55a <_Z17ds1305_spi_selectv>
	SPI_MasterTransmit(iAddr + 0x80);
     5ee:	80 e8       	ldi	r24, 0x80	; 128
     5f0:	81 0f       	add	r24, r17
     5f2:	cc df       	rcall	.-104    	; 0x58c <_Z18SPI_MasterTransmith>
	while(iCount--)
     5f4:	20 97       	sbiw	r28, 0x00	; 0
     5f6:	41 f0       	breq	.+16     	; 0x608 <_Z17ds1305_WriteBlockhPhj+0x30>
     5f8:	0e 2d       	mov	r16, r14
     5fa:	1f 2d       	mov	r17, r15
	{
		SPI_MasterTransmit(*pBuffer++);
     5fc:	f8 01       	movw	r30, r16
     5fe:	81 91       	ld	r24, Z+
     600:	8f 01       	movw	r16, r30
     602:	c4 df       	rcall	.-120    	; 0x58c <_Z18SPI_MasterTransmith>
     604:	21 97       	sbiw	r28, 0x01	; 1
*/
void ds1305_WriteBlock(unsigned char iAddr, unsigned char *pBuffer, unsigned int iCount)
{
	ds1305_spi_select();
	SPI_MasterTransmit(iAddr + 0x80);
	while(iCount--)
     606:	d1 f7       	brne	.-12     	; 0x5fc <_Z17ds1305_WriteBlockhPhj+0x24>
	{
		SPI_MasterTransmit(*pBuffer++);
	}
	ds1305_spi_deselect();
     608:	ad df       	rcall	.-166    	; 0x564 <_Z19ds1305_spi_deselectv>
     60a:	df 91       	pop	r29
     60c:	cf 91       	pop	r28
     60e:	1f 91       	pop	r17
     610:	0f 91       	pop	r16
     612:	ff 90       	pop	r15
     614:	ef 90       	pop	r14
     616:	08 95       	ret

00000618 <_Z14Test_On_PortA0v>:
void Start_RTC();


void Test_On_PortA0(){
	
	DDRA |= 0x01;
     618:	08 9a       	sbi	0x01, 0	; 1
	
	PORTA |= ( 1 << PINA0);
     61a:	10 9a       	sbi	0x02, 0	; 2
     61c:	83 e2       	ldi	r24, 0x23	; 35
     61e:	94 ef       	ldi	r25, 0xF4	; 244
     620:	01 97       	sbiw	r24, 0x01	; 1
     622:	f1 f7       	brne	.-4      	; 0x620 <_Z14Test_On_PortA0v+0x8>
     624:	00 c0       	rjmp	.+0      	; 0x626 <_Z14Test_On_PortA0v+0xe>
     626:	00 00       	nop
	_delay_ms(250);
	PORTA &= ~( 1 << PINA0);
     628:	10 98       	cbi	0x02, 0	; 2
     62a:	83 e2       	ldi	r24, 0x23	; 35
     62c:	94 ef       	ldi	r25, 0xF4	; 244
     62e:	01 97       	sbiw	r24, 0x01	; 1
     630:	f1 f7       	brne	.-4      	; 0x62e <_Z14Test_On_PortA0v+0x16>
     632:	00 c0       	rjmp	.+0      	; 0x634 <_Z14Test_On_PortA0v+0x1c>
     634:	00 00       	nop
	_delay_ms(250);
	PORTA |= ( 1 << PINA0);
     636:	10 9a       	sbi	0x02, 0	; 2
     638:	08 95       	ret

0000063a <_Z9Start_RTCv>:
}


void Start_RTC(){
     63a:	cf 93       	push	r28
     63c:	df 93       	push	r29
     63e:	1f 92       	push	r1
     640:	cd b7       	in	r28, 0x3d	; 61
     642:	de b7       	in	r29, 0x3e	; 62
	
	uint8_t tc = 0;
     644:	19 82       	std	Y+1, r1	; 0x01


	ds1305_Init();
     646:	90 df       	rcall	.-224    	; 0x568 <_Z11ds1305_Initv>
	ds1305_WriteBlock(0x0F,&tc,1);	// Enable timer and unwrite protect memory
     648:	41 e0       	ldi	r20, 0x01	; 1
     64a:	50 e0       	ldi	r21, 0x00	; 0
     64c:	be 01       	movw	r22, r28
     64e:	6f 5f       	subi	r22, 0xFF	; 255
     650:	7f 4f       	sbci	r23, 0xFF	; 255
     652:	8f e0       	ldi	r24, 0x0F	; 15
     654:	c1 df       	rcall	.-126    	; 0x5d8 <_Z17ds1305_WriteBlockhPhj>
	
}
     656:	0f 90       	pop	r0
     658:	df 91       	pop	r29
     65a:	cf 91       	pop	r28
     65c:	08 95       	ret

0000065e <main>:


using namespace std;


int main(){
     65e:	cf 93       	push	r28
     660:	df 93       	push	r29
     662:	cd b7       	in	r28, 0x3d	; 61
     664:	de b7       	in	r29, 0x3e	; 62
     666:	68 97       	sbiw	r28, 0x18	; 24
     668:	0f b6       	in	r0, 0x3f	; 63
     66a:	f8 94       	cli
     66c:	de bf       	out	0x3e, r29	; 62
     66e:	0f be       	out	0x3f, r0	; 63
     670:	cd bf       	out	0x3d, r28	; 61
	
	ds1305_Time dstTime;
	lcd lcdNHD;
     672:	ce 01       	movw	r24, r28
     674:	48 96       	adiw	r24, 0x18	; 24
     676:	e4 de       	rcall	.-568    	; 0x440 <_ZN3lcdC1Ev>
	

	Test_On_PortA0();
     678:	cf df       	rcall	.-98     	; 0x618 <_Z14Test_On_PortA0v>
	lcdNHD.test_LCD_Screen();
     67a:	ce 01       	movw	r24, r28
     67c:	48 96       	adiw	r24, 0x18	; 24
     67e:	13 df       	rcall	.-474    	; 0x4a6 <_ZN3lcd15test_LCD_ScreenEv>
	
	Start_RTC();
     680:	dc df       	rcall	.-72     	; 0x63a <_Z9Start_RTCv>
	
	unsigned char seco[16];
	
	for(;;){
		GetCurrentTime(&dstTime);
     682:	47 e0       	ldi	r20, 0x07	; 7
     684:	50 e0       	ldi	r21, 0x00	; 0
     686:	be 01       	movw	r22, r28
     688:	6f 5e       	subi	r22, 0xEF	; 239
     68a:	7f 4f       	sbci	r23, 0xFF	; 255
     68c:	80 e0       	ldi	r24, 0x00	; 0
     68e:	84 df       	rcall	.-248    	; 0x598 <_Z16ds1305_ReadBlockhPhj>
		seco[0] = ((( dstTime.ucSeconds & 0xF0 ) >> 4 ) + '0');
     690:	89 89       	ldd	r24, Y+17	; 0x11
     692:	98 2f       	mov	r25, r24
     694:	92 95       	swap	r25
     696:	9f 70       	andi	r25, 0x0F	; 15
     698:	90 5d       	subi	r25, 0xD0	; 208
     69a:	99 83       	std	Y+1, r25	; 0x01
		seco[1] = (( dstTime.ucSeconds & 0xF ) + '0' );
     69c:	8f 70       	andi	r24, 0x0F	; 15
     69e:	80 5d       	subi	r24, 0xD0	; 208
     6a0:	8a 83       	std	Y+2, r24	; 0x02
		lcdNHD.print(seco, LINE_TOP);
     6a2:	40 e0       	ldi	r20, 0x00	; 0
     6a4:	be 01       	movw	r22, r28
     6a6:	6f 5f       	subi	r22, 0xFF	; 255
     6a8:	7f 4f       	sbci	r23, 0xFF	; 255
     6aa:	ce 01       	movw	r24, r28
     6ac:	48 96       	adiw	r24, 0x18	; 24
     6ae:	d7 de       	rcall	.-594    	; 0x45e <_ZN3lcd5printEPhh>
     6b0:	2f e3       	ldi	r18, 0x3F	; 63
     6b2:	8d e0       	ldi	r24, 0x0D	; 13
     6b4:	93 e0       	ldi	r25, 0x03	; 3
     6b6:	21 50       	subi	r18, 0x01	; 1
     6b8:	80 40       	sbci	r24, 0x00	; 0
     6ba:	90 40       	sbci	r25, 0x00	; 0
     6bc:	e1 f7       	brne	.-8      	; 0x6b6 <main+0x58>
     6be:	00 c0       	rjmp	.+0      	; 0x6c0 <main+0x62>
     6c0:	00 00       	nop
     6c2:	df cf       	rjmp	.-66     	; 0x682 <main+0x24>

000006c4 <vfprintf>:
     6c4:	2f 92       	push	r2
     6c6:	3f 92       	push	r3
     6c8:	4f 92       	push	r4
     6ca:	5f 92       	push	r5
     6cc:	6f 92       	push	r6
     6ce:	7f 92       	push	r7
     6d0:	8f 92       	push	r8
     6d2:	9f 92       	push	r9
     6d4:	af 92       	push	r10
     6d6:	bf 92       	push	r11
     6d8:	cf 92       	push	r12
     6da:	df 92       	push	r13
     6dc:	ef 92       	push	r14
     6de:	ff 92       	push	r15
     6e0:	0f 93       	push	r16
     6e2:	1f 93       	push	r17
     6e4:	cf 93       	push	r28
     6e6:	df 93       	push	r29
     6e8:	cd b7       	in	r28, 0x3d	; 61
     6ea:	de b7       	in	r29, 0x3e	; 62
     6ec:	63 97       	sbiw	r28, 0x13	; 19
     6ee:	0f b6       	in	r0, 0x3f	; 63
     6f0:	f8 94       	cli
     6f2:	de bf       	out	0x3e, r29	; 62
     6f4:	0f be       	out	0x3f, r0	; 63
     6f6:	cd bf       	out	0x3d, r28	; 61
     6f8:	6c 01       	movw	r12, r24
     6fa:	4b 01       	movw	r8, r22
     6fc:	2a 01       	movw	r4, r20
     6fe:	fc 01       	movw	r30, r24
     700:	17 82       	std	Z+7, r1	; 0x07
     702:	16 82       	std	Z+6, r1	; 0x06
     704:	83 81       	ldd	r24, Z+3	; 0x03
     706:	81 ff       	sbrs	r24, 1
     708:	29 c3       	rjmp	.+1618   	; 0xd5c <vfprintf+0x698>
     70a:	ae 01       	movw	r20, r28
     70c:	4f 5f       	subi	r20, 0xFF	; 255
     70e:	5f 4f       	sbci	r21, 0xFF	; 255
     710:	3a 01       	movw	r6, r20
     712:	f6 01       	movw	r30, r12
     714:	93 81       	ldd	r25, Z+3	; 0x03
     716:	f4 01       	movw	r30, r8
     718:	93 fd       	sbrc	r25, 3
     71a:	85 91       	lpm	r24, Z+
     71c:	93 ff       	sbrs	r25, 3
     71e:	81 91       	ld	r24, Z+
     720:	4f 01       	movw	r8, r30
     722:	88 23       	and	r24, r24
     724:	09 f4       	brne	.+2      	; 0x728 <vfprintf+0x64>
     726:	16 c3       	rjmp	.+1580   	; 0xd54 <vfprintf+0x690>
     728:	85 32       	cpi	r24, 0x25	; 37
     72a:	39 f4       	brne	.+14     	; 0x73a <vfprintf+0x76>
     72c:	93 fd       	sbrc	r25, 3
     72e:	85 91       	lpm	r24, Z+
     730:	93 ff       	sbrs	r25, 3
     732:	81 91       	ld	r24, Z+
     734:	4f 01       	movw	r8, r30
     736:	85 32       	cpi	r24, 0x25	; 37
     738:	31 f4       	brne	.+12     	; 0x746 <vfprintf+0x82>
     73a:	b6 01       	movw	r22, r12
     73c:	90 e0       	ldi	r25, 0x00	; 0
     73e:	38 d4       	rcall	.+2160   	; 0xfb0 <fputc>
     740:	52 01       	movw	r10, r4
     742:	25 01       	movw	r4, r10
     744:	e6 cf       	rjmp	.-52     	; 0x712 <vfprintf+0x4e>
     746:	10 e0       	ldi	r17, 0x00	; 0
     748:	f1 2c       	mov	r15, r1
     74a:	20 e0       	ldi	r18, 0x00	; 0
     74c:	20 32       	cpi	r18, 0x20	; 32
     74e:	a0 f4       	brcc	.+40     	; 0x778 <vfprintf+0xb4>
     750:	8b 32       	cpi	r24, 0x2B	; 43
     752:	69 f0       	breq	.+26     	; 0x76e <vfprintf+0xaa>
     754:	30 f4       	brcc	.+12     	; 0x762 <vfprintf+0x9e>
     756:	80 32       	cpi	r24, 0x20	; 32
     758:	59 f0       	breq	.+22     	; 0x770 <vfprintf+0xac>
     75a:	83 32       	cpi	r24, 0x23	; 35
     75c:	69 f4       	brne	.+26     	; 0x778 <vfprintf+0xb4>
     75e:	20 61       	ori	r18, 0x10	; 16
     760:	2c c0       	rjmp	.+88     	; 0x7ba <vfprintf+0xf6>
     762:	8d 32       	cpi	r24, 0x2D	; 45
     764:	39 f0       	breq	.+14     	; 0x774 <vfprintf+0xb0>
     766:	80 33       	cpi	r24, 0x30	; 48
     768:	39 f4       	brne	.+14     	; 0x778 <vfprintf+0xb4>
     76a:	21 60       	ori	r18, 0x01	; 1
     76c:	26 c0       	rjmp	.+76     	; 0x7ba <vfprintf+0xf6>
     76e:	22 60       	ori	r18, 0x02	; 2
     770:	24 60       	ori	r18, 0x04	; 4
     772:	23 c0       	rjmp	.+70     	; 0x7ba <vfprintf+0xf6>
     774:	28 60       	ori	r18, 0x08	; 8
     776:	21 c0       	rjmp	.+66     	; 0x7ba <vfprintf+0xf6>
     778:	27 fd       	sbrc	r18, 7
     77a:	27 c0       	rjmp	.+78     	; 0x7ca <vfprintf+0x106>
     77c:	30 ed       	ldi	r19, 0xD0	; 208
     77e:	38 0f       	add	r19, r24
     780:	3a 30       	cpi	r19, 0x0A	; 10
     782:	78 f4       	brcc	.+30     	; 0x7a2 <vfprintf+0xde>
     784:	26 ff       	sbrs	r18, 6
     786:	06 c0       	rjmp	.+12     	; 0x794 <vfprintf+0xd0>
     788:	fa e0       	ldi	r31, 0x0A	; 10
     78a:	1f 9f       	mul	r17, r31
     78c:	30 0d       	add	r19, r0
     78e:	11 24       	eor	r1, r1
     790:	13 2f       	mov	r17, r19
     792:	13 c0       	rjmp	.+38     	; 0x7ba <vfprintf+0xf6>
     794:	4a e0       	ldi	r20, 0x0A	; 10
     796:	f4 9e       	mul	r15, r20
     798:	30 0d       	add	r19, r0
     79a:	11 24       	eor	r1, r1
     79c:	f3 2e       	mov	r15, r19
     79e:	20 62       	ori	r18, 0x20	; 32
     7a0:	0c c0       	rjmp	.+24     	; 0x7ba <vfprintf+0xf6>
     7a2:	8e 32       	cpi	r24, 0x2E	; 46
     7a4:	21 f4       	brne	.+8      	; 0x7ae <vfprintf+0xea>
     7a6:	26 fd       	sbrc	r18, 6
     7a8:	d5 c2       	rjmp	.+1450   	; 0xd54 <vfprintf+0x690>
     7aa:	20 64       	ori	r18, 0x40	; 64
     7ac:	06 c0       	rjmp	.+12     	; 0x7ba <vfprintf+0xf6>
     7ae:	8c 36       	cpi	r24, 0x6C	; 108
     7b0:	11 f4       	brne	.+4      	; 0x7b6 <vfprintf+0xf2>
     7b2:	20 68       	ori	r18, 0x80	; 128
     7b4:	02 c0       	rjmp	.+4      	; 0x7ba <vfprintf+0xf6>
     7b6:	88 36       	cpi	r24, 0x68	; 104
     7b8:	41 f4       	brne	.+16     	; 0x7ca <vfprintf+0x106>
     7ba:	f4 01       	movw	r30, r8
     7bc:	93 fd       	sbrc	r25, 3
     7be:	85 91       	lpm	r24, Z+
     7c0:	93 ff       	sbrs	r25, 3
     7c2:	81 91       	ld	r24, Z+
     7c4:	4f 01       	movw	r8, r30
     7c6:	81 11       	cpse	r24, r1
     7c8:	c1 cf       	rjmp	.-126    	; 0x74c <vfprintf+0x88>
     7ca:	9b eb       	ldi	r25, 0xBB	; 187
     7cc:	98 0f       	add	r25, r24
     7ce:	93 30       	cpi	r25, 0x03	; 3
     7d0:	18 f4       	brcc	.+6      	; 0x7d8 <vfprintf+0x114>
     7d2:	20 61       	ori	r18, 0x10	; 16
     7d4:	80 5e       	subi	r24, 0xE0	; 224
     7d6:	06 c0       	rjmp	.+12     	; 0x7e4 <vfprintf+0x120>
     7d8:	9b e9       	ldi	r25, 0x9B	; 155
     7da:	98 0f       	add	r25, r24
     7dc:	93 30       	cpi	r25, 0x03	; 3
     7de:	08 f0       	brcs	.+2      	; 0x7e2 <vfprintf+0x11e>
     7e0:	64 c1       	rjmp	.+712    	; 0xaaa <vfprintf+0x3e6>
     7e2:	2f 7e       	andi	r18, 0xEF	; 239
     7e4:	26 ff       	sbrs	r18, 6
     7e6:	16 e0       	ldi	r17, 0x06	; 6
     7e8:	2f 73       	andi	r18, 0x3F	; 63
     7ea:	32 2e       	mov	r3, r18
     7ec:	85 36       	cpi	r24, 0x65	; 101
     7ee:	19 f4       	brne	.+6      	; 0x7f6 <vfprintf+0x132>
     7f0:	20 64       	ori	r18, 0x40	; 64
     7f2:	32 2e       	mov	r3, r18
     7f4:	08 c0       	rjmp	.+16     	; 0x806 <vfprintf+0x142>
     7f6:	86 36       	cpi	r24, 0x66	; 102
     7f8:	21 f4       	brne	.+8      	; 0x802 <vfprintf+0x13e>
     7fa:	f2 2f       	mov	r31, r18
     7fc:	f0 68       	ori	r31, 0x80	; 128
     7fe:	3f 2e       	mov	r3, r31
     800:	02 c0       	rjmp	.+4      	; 0x806 <vfprintf+0x142>
     802:	11 11       	cpse	r17, r1
     804:	11 50       	subi	r17, 0x01	; 1
     806:	37 fe       	sbrs	r3, 7
     808:	07 c0       	rjmp	.+14     	; 0x818 <vfprintf+0x154>
     80a:	1c 33       	cpi	r17, 0x3C	; 60
     80c:	50 f4       	brcc	.+20     	; 0x822 <vfprintf+0x15e>
     80e:	ee 24       	eor	r14, r14
     810:	e3 94       	inc	r14
     812:	e1 0e       	add	r14, r17
     814:	27 e0       	ldi	r18, 0x07	; 7
     816:	0b c0       	rjmp	.+22     	; 0x82e <vfprintf+0x16a>
     818:	18 30       	cpi	r17, 0x08	; 8
     81a:	38 f0       	brcs	.+14     	; 0x82a <vfprintf+0x166>
     81c:	27 e0       	ldi	r18, 0x07	; 7
     81e:	17 e0       	ldi	r17, 0x07	; 7
     820:	05 c0       	rjmp	.+10     	; 0x82c <vfprintf+0x168>
     822:	27 e0       	ldi	r18, 0x07	; 7
     824:	4c e3       	ldi	r20, 0x3C	; 60
     826:	e4 2e       	mov	r14, r20
     828:	02 c0       	rjmp	.+4      	; 0x82e <vfprintf+0x16a>
     82a:	21 2f       	mov	r18, r17
     82c:	e1 2c       	mov	r14, r1
     82e:	52 01       	movw	r10, r4
     830:	44 e0       	ldi	r20, 0x04	; 4
     832:	a4 0e       	add	r10, r20
     834:	b1 1c       	adc	r11, r1
     836:	f2 01       	movw	r30, r4
     838:	60 81       	ld	r22, Z
     83a:	71 81       	ldd	r23, Z+1	; 0x01
     83c:	82 81       	ldd	r24, Z+2	; 0x02
     83e:	93 81       	ldd	r25, Z+3	; 0x03
     840:	0e 2d       	mov	r16, r14
     842:	a3 01       	movw	r20, r6
     844:	c7 d2       	rcall	.+1422   	; 0xdd4 <__ftoa_engine>
     846:	2c 01       	movw	r4, r24
     848:	09 81       	ldd	r16, Y+1	; 0x01
     84a:	00 ff       	sbrs	r16, 0
     84c:	02 c0       	rjmp	.+4      	; 0x852 <vfprintf+0x18e>
     84e:	03 ff       	sbrs	r16, 3
     850:	07 c0       	rjmp	.+14     	; 0x860 <vfprintf+0x19c>
     852:	31 fc       	sbrc	r3, 1
     854:	08 c0       	rjmp	.+16     	; 0x866 <vfprintf+0x1a2>
     856:	32 fe       	sbrs	r3, 2
     858:	09 c0       	rjmp	.+18     	; 0x86c <vfprintf+0x1a8>
     85a:	30 e2       	ldi	r19, 0x20	; 32
     85c:	23 2e       	mov	r2, r19
     85e:	07 c0       	rjmp	.+14     	; 0x86e <vfprintf+0x1aa>
     860:	2d e2       	ldi	r18, 0x2D	; 45
     862:	22 2e       	mov	r2, r18
     864:	04 c0       	rjmp	.+8      	; 0x86e <vfprintf+0x1aa>
     866:	9b e2       	ldi	r25, 0x2B	; 43
     868:	29 2e       	mov	r2, r25
     86a:	01 c0       	rjmp	.+2      	; 0x86e <vfprintf+0x1aa>
     86c:	21 2c       	mov	r2, r1
     86e:	80 2f       	mov	r24, r16
     870:	8c 70       	andi	r24, 0x0C	; 12
     872:	19 f0       	breq	.+6      	; 0x87a <vfprintf+0x1b6>
     874:	21 10       	cpse	r2, r1
     876:	51 c2       	rjmp	.+1186   	; 0xd1a <vfprintf+0x656>
     878:	8d c2       	rjmp	.+1306   	; 0xd94 <vfprintf+0x6d0>
     87a:	37 fe       	sbrs	r3, 7
     87c:	0f c0       	rjmp	.+30     	; 0x89c <vfprintf+0x1d8>
     87e:	e4 0c       	add	r14, r4
     880:	04 ff       	sbrs	r16, 4
     882:	04 c0       	rjmp	.+8      	; 0x88c <vfprintf+0x1c8>
     884:	8a 81       	ldd	r24, Y+2	; 0x02
     886:	81 33       	cpi	r24, 0x31	; 49
     888:	09 f4       	brne	.+2      	; 0x88c <vfprintf+0x1c8>
     88a:	ea 94       	dec	r14
     88c:	1e 14       	cp	r1, r14
     88e:	74 f5       	brge	.+92     	; 0x8ec <vfprintf+0x228>
     890:	f8 e0       	ldi	r31, 0x08	; 8
     892:	fe 15       	cp	r31, r14
     894:	78 f5       	brcc	.+94     	; 0x8f4 <vfprintf+0x230>
     896:	88 e0       	ldi	r24, 0x08	; 8
     898:	e8 2e       	mov	r14, r24
     89a:	2c c0       	rjmp	.+88     	; 0x8f4 <vfprintf+0x230>
     89c:	36 fc       	sbrc	r3, 6
     89e:	2a c0       	rjmp	.+84     	; 0x8f4 <vfprintf+0x230>
     8a0:	81 2f       	mov	r24, r17
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	84 15       	cp	r24, r4
     8a6:	95 05       	cpc	r25, r5
     8a8:	9c f0       	brlt	.+38     	; 0x8d0 <vfprintf+0x20c>
     8aa:	2c ef       	ldi	r18, 0xFC	; 252
     8ac:	42 16       	cp	r4, r18
     8ae:	2f ef       	ldi	r18, 0xFF	; 255
     8b0:	52 06       	cpc	r5, r18
     8b2:	74 f0       	brlt	.+28     	; 0x8d0 <vfprintf+0x20c>
     8b4:	43 2d       	mov	r20, r3
     8b6:	40 68       	ori	r20, 0x80	; 128
     8b8:	34 2e       	mov	r3, r20
     8ba:	0a c0       	rjmp	.+20     	; 0x8d0 <vfprintf+0x20c>
     8bc:	e2 e0       	ldi	r30, 0x02	; 2
     8be:	f0 e0       	ldi	r31, 0x00	; 0
     8c0:	ec 0f       	add	r30, r28
     8c2:	fd 1f       	adc	r31, r29
     8c4:	e1 0f       	add	r30, r17
     8c6:	f1 1d       	adc	r31, r1
     8c8:	80 81       	ld	r24, Z
     8ca:	80 33       	cpi	r24, 0x30	; 48
     8cc:	19 f4       	brne	.+6      	; 0x8d4 <vfprintf+0x210>
     8ce:	11 50       	subi	r17, 0x01	; 1
     8d0:	11 11       	cpse	r17, r1
     8d2:	f4 cf       	rjmp	.-24     	; 0x8bc <vfprintf+0x1f8>
     8d4:	37 fe       	sbrs	r3, 7
     8d6:	0e c0       	rjmp	.+28     	; 0x8f4 <vfprintf+0x230>
     8d8:	ee 24       	eor	r14, r14
     8da:	e3 94       	inc	r14
     8dc:	e1 0e       	add	r14, r17
     8de:	81 2f       	mov	r24, r17
     8e0:	90 e0       	ldi	r25, 0x00	; 0
     8e2:	48 16       	cp	r4, r24
     8e4:	59 06       	cpc	r5, r25
     8e6:	2c f4       	brge	.+10     	; 0x8f2 <vfprintf+0x22e>
     8e8:	14 19       	sub	r17, r4
     8ea:	04 c0       	rjmp	.+8      	; 0x8f4 <vfprintf+0x230>
     8ec:	ee 24       	eor	r14, r14
     8ee:	e3 94       	inc	r14
     8f0:	01 c0       	rjmp	.+2      	; 0x8f4 <vfprintf+0x230>
     8f2:	10 e0       	ldi	r17, 0x00	; 0
     8f4:	37 fe       	sbrs	r3, 7
     8f6:	06 c0       	rjmp	.+12     	; 0x904 <vfprintf+0x240>
     8f8:	14 14       	cp	r1, r4
     8fa:	15 04       	cpc	r1, r5
     8fc:	34 f4       	brge	.+12     	; 0x90a <vfprintf+0x246>
     8fe:	c2 01       	movw	r24, r4
     900:	01 96       	adiw	r24, 0x01	; 1
     902:	05 c0       	rjmp	.+10     	; 0x90e <vfprintf+0x24a>
     904:	85 e0       	ldi	r24, 0x05	; 5
     906:	90 e0       	ldi	r25, 0x00	; 0
     908:	02 c0       	rjmp	.+4      	; 0x90e <vfprintf+0x24a>
     90a:	81 e0       	ldi	r24, 0x01	; 1
     90c:	90 e0       	ldi	r25, 0x00	; 0
     90e:	21 10       	cpse	r2, r1
     910:	01 96       	adiw	r24, 0x01	; 1
     912:	11 23       	and	r17, r17
     914:	31 f0       	breq	.+12     	; 0x922 <vfprintf+0x25e>
     916:	21 2f       	mov	r18, r17
     918:	30 e0       	ldi	r19, 0x00	; 0
     91a:	2f 5f       	subi	r18, 0xFF	; 255
     91c:	3f 4f       	sbci	r19, 0xFF	; 255
     91e:	82 0f       	add	r24, r18
     920:	93 1f       	adc	r25, r19
     922:	2f 2d       	mov	r18, r15
     924:	30 e0       	ldi	r19, 0x00	; 0
     926:	82 17       	cp	r24, r18
     928:	93 07       	cpc	r25, r19
     92a:	14 f4       	brge	.+4      	; 0x930 <vfprintf+0x26c>
     92c:	f8 1a       	sub	r15, r24
     92e:	01 c0       	rjmp	.+2      	; 0x932 <vfprintf+0x26e>
     930:	f1 2c       	mov	r15, r1
     932:	83 2d       	mov	r24, r3
     934:	89 70       	andi	r24, 0x09	; 9
     936:	41 f4       	brne	.+16     	; 0x948 <vfprintf+0x284>
     938:	ff 20       	and	r15, r15
     93a:	31 f0       	breq	.+12     	; 0x948 <vfprintf+0x284>
     93c:	b6 01       	movw	r22, r12
     93e:	80 e2       	ldi	r24, 0x20	; 32
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	36 d3       	rcall	.+1644   	; 0xfb0 <fputc>
     944:	fa 94       	dec	r15
     946:	f8 cf       	rjmp	.-16     	; 0x938 <vfprintf+0x274>
     948:	22 20       	and	r2, r2
     94a:	21 f0       	breq	.+8      	; 0x954 <vfprintf+0x290>
     94c:	b6 01       	movw	r22, r12
     94e:	82 2d       	mov	r24, r2
     950:	90 e0       	ldi	r25, 0x00	; 0
     952:	2e d3       	rcall	.+1628   	; 0xfb0 <fputc>
     954:	33 fc       	sbrc	r3, 3
     956:	08 c0       	rjmp	.+16     	; 0x968 <vfprintf+0x2a4>
     958:	ff 20       	and	r15, r15
     95a:	31 f0       	breq	.+12     	; 0x968 <vfprintf+0x2a4>
     95c:	b6 01       	movw	r22, r12
     95e:	80 e3       	ldi	r24, 0x30	; 48
     960:	90 e0       	ldi	r25, 0x00	; 0
     962:	26 d3       	rcall	.+1612   	; 0xfb0 <fputc>
     964:	fa 94       	dec	r15
     966:	f8 cf       	rjmp	.-16     	; 0x958 <vfprintf+0x294>
     968:	37 fe       	sbrs	r3, 7
     96a:	58 c0       	rjmp	.+176    	; 0xa1c <vfprintf+0x358>
     96c:	94 2d       	mov	r25, r4
     96e:	85 2d       	mov	r24, r5
     970:	57 fe       	sbrs	r5, 7
     972:	02 c0       	rjmp	.+4      	; 0x978 <vfprintf+0x2b4>
     974:	90 e0       	ldi	r25, 0x00	; 0
     976:	80 e0       	ldi	r24, 0x00	; 0
     978:	29 2e       	mov	r2, r25
     97a:	38 2e       	mov	r3, r24
     97c:	20 e0       	ldi	r18, 0x00	; 0
     97e:	30 e0       	ldi	r19, 0x00	; 0
     980:	a2 01       	movw	r20, r4
     982:	4e 19       	sub	r20, r14
     984:	51 09       	sbc	r21, r1
     986:	5d 87       	std	Y+13, r21	; 0x0d
     988:	4c 87       	std	Y+12, r20	; 0x0c
     98a:	a2 01       	movw	r20, r4
     98c:	42 19       	sub	r20, r2
     98e:	53 09       	sbc	r21, r3
     990:	5f 87       	std	Y+15, r21	; 0x0f
     992:	4e 87       	std	Y+14, r20	; 0x0e
     994:	61 2f       	mov	r22, r17
     996:	70 e0       	ldi	r23, 0x00	; 0
     998:	44 27       	eor	r20, r20
     99a:	55 27       	eor	r21, r21
     99c:	46 1b       	sub	r20, r22
     99e:	57 0b       	sbc	r21, r23
     9a0:	59 8b       	std	Y+17, r21	; 0x11
     9a2:	48 8b       	std	Y+16, r20	; 0x10
     9a4:	5f ef       	ldi	r21, 0xFF	; 255
     9a6:	25 16       	cp	r2, r21
     9a8:	35 06       	cpc	r3, r21
     9aa:	41 f4       	brne	.+16     	; 0x9bc <vfprintf+0x2f8>
     9ac:	b6 01       	movw	r22, r12
     9ae:	8e e2       	ldi	r24, 0x2E	; 46
     9b0:	90 e0       	ldi	r25, 0x00	; 0
     9b2:	2a 8b       	std	Y+18, r18	; 0x12
     9b4:	3b 8b       	std	Y+19, r19	; 0x13
     9b6:	fc d2       	rcall	.+1528   	; 0xfb0 <fputc>
     9b8:	3b 89       	ldd	r19, Y+19	; 0x13
     9ba:	2a 89       	ldd	r18, Y+18	; 0x12
     9bc:	42 14       	cp	r4, r2
     9be:	53 04       	cpc	r5, r3
     9c0:	6c f0       	brlt	.+26     	; 0x9dc <vfprintf+0x318>
     9c2:	4c 85       	ldd	r20, Y+12	; 0x0c
     9c4:	5d 85       	ldd	r21, Y+13	; 0x0d
     9c6:	42 15       	cp	r20, r2
     9c8:	53 05       	cpc	r21, r3
     9ca:	44 f4       	brge	.+16     	; 0x9dc <vfprintf+0x318>
     9cc:	ee 85       	ldd	r30, Y+14	; 0x0e
     9ce:	ff 85       	ldd	r31, Y+15	; 0x0f
     9d0:	e2 0f       	add	r30, r18
     9d2:	f3 1f       	adc	r31, r19
     9d4:	e6 0d       	add	r30, r6
     9d6:	f7 1d       	adc	r31, r7
     9d8:	81 81       	ldd	r24, Z+1	; 0x01
     9da:	01 c0       	rjmp	.+2      	; 0x9de <vfprintf+0x31a>
     9dc:	80 e3       	ldi	r24, 0x30	; 48
     9de:	51 e0       	ldi	r21, 0x01	; 1
     9e0:	25 1a       	sub	r2, r21
     9e2:	31 08       	sbc	r3, r1
     9e4:	2f 5f       	subi	r18, 0xFF	; 255
     9e6:	3f 4f       	sbci	r19, 0xFF	; 255
     9e8:	48 89       	ldd	r20, Y+16	; 0x10
     9ea:	59 89       	ldd	r21, Y+17	; 0x11
     9ec:	24 16       	cp	r2, r20
     9ee:	35 06       	cpc	r3, r21
     9f0:	44 f0       	brlt	.+16     	; 0xa02 <vfprintf+0x33e>
     9f2:	b6 01       	movw	r22, r12
     9f4:	90 e0       	ldi	r25, 0x00	; 0
     9f6:	2a 8b       	std	Y+18, r18	; 0x12
     9f8:	3b 8b       	std	Y+19, r19	; 0x13
     9fa:	da d2       	rcall	.+1460   	; 0xfb0 <fputc>
     9fc:	2a 89       	ldd	r18, Y+18	; 0x12
     9fe:	3b 89       	ldd	r19, Y+19	; 0x13
     a00:	d1 cf       	rjmp	.-94     	; 0x9a4 <vfprintf+0x2e0>
     a02:	24 14       	cp	r2, r4
     a04:	35 04       	cpc	r3, r5
     a06:	39 f4       	brne	.+14     	; 0xa16 <vfprintf+0x352>
     a08:	9a 81       	ldd	r25, Y+2	; 0x02
     a0a:	96 33       	cpi	r25, 0x36	; 54
     a0c:	18 f4       	brcc	.+6      	; 0xa14 <vfprintf+0x350>
     a0e:	95 33       	cpi	r25, 0x35	; 53
     a10:	11 f4       	brne	.+4      	; 0xa16 <vfprintf+0x352>
     a12:	04 ff       	sbrs	r16, 4
     a14:	81 e3       	ldi	r24, 0x31	; 49
     a16:	b6 01       	movw	r22, r12
     a18:	90 e0       	ldi	r25, 0x00	; 0
     a1a:	45 c0       	rjmp	.+138    	; 0xaa6 <vfprintf+0x3e2>
     a1c:	8a 81       	ldd	r24, Y+2	; 0x02
     a1e:	81 33       	cpi	r24, 0x31	; 49
     a20:	09 f0       	breq	.+2      	; 0xa24 <vfprintf+0x360>
     a22:	0f 7e       	andi	r16, 0xEF	; 239
     a24:	b6 01       	movw	r22, r12
     a26:	90 e0       	ldi	r25, 0x00	; 0
     a28:	c3 d2       	rcall	.+1414   	; 0xfb0 <fputc>
     a2a:	11 11       	cpse	r17, r1
     a2c:	05 c0       	rjmp	.+10     	; 0xa38 <vfprintf+0x374>
     a2e:	34 fc       	sbrc	r3, 4
     a30:	16 c0       	rjmp	.+44     	; 0xa5e <vfprintf+0x39a>
     a32:	85 e6       	ldi	r24, 0x65	; 101
     a34:	90 e0       	ldi	r25, 0x00	; 0
     a36:	15 c0       	rjmp	.+42     	; 0xa62 <vfprintf+0x39e>
     a38:	b6 01       	movw	r22, r12
     a3a:	8e e2       	ldi	r24, 0x2E	; 46
     a3c:	90 e0       	ldi	r25, 0x00	; 0
     a3e:	b8 d2       	rcall	.+1392   	; 0xfb0 <fputc>
     a40:	82 e0       	ldi	r24, 0x02	; 2
     a42:	ee 24       	eor	r14, r14
     a44:	e3 94       	inc	r14
     a46:	e8 0e       	add	r14, r24
     a48:	f3 01       	movw	r30, r6
     a4a:	e8 0f       	add	r30, r24
     a4c:	f1 1d       	adc	r31, r1
     a4e:	80 81       	ld	r24, Z
     a50:	b6 01       	movw	r22, r12
     a52:	90 e0       	ldi	r25, 0x00	; 0
     a54:	ad d2       	rcall	.+1370   	; 0xfb0 <fputc>
     a56:	11 50       	subi	r17, 0x01	; 1
     a58:	8e 2d       	mov	r24, r14
     a5a:	99 f7       	brne	.-26     	; 0xa42 <vfprintf+0x37e>
     a5c:	e8 cf       	rjmp	.-48     	; 0xa2e <vfprintf+0x36a>
     a5e:	85 e4       	ldi	r24, 0x45	; 69
     a60:	90 e0       	ldi	r25, 0x00	; 0
     a62:	b6 01       	movw	r22, r12
     a64:	a5 d2       	rcall	.+1354   	; 0xfb0 <fputc>
     a66:	57 fc       	sbrc	r5, 7
     a68:	05 c0       	rjmp	.+10     	; 0xa74 <vfprintf+0x3b0>
     a6a:	41 14       	cp	r4, r1
     a6c:	51 04       	cpc	r5, r1
     a6e:	39 f4       	brne	.+14     	; 0xa7e <vfprintf+0x3ba>
     a70:	04 ff       	sbrs	r16, 4
     a72:	05 c0       	rjmp	.+10     	; 0xa7e <vfprintf+0x3ba>
     a74:	51 94       	neg	r5
     a76:	41 94       	neg	r4
     a78:	51 08       	sbc	r5, r1
     a7a:	8d e2       	ldi	r24, 0x2D	; 45
     a7c:	01 c0       	rjmp	.+2      	; 0xa80 <vfprintf+0x3bc>
     a7e:	8b e2       	ldi	r24, 0x2B	; 43
     a80:	b6 01       	movw	r22, r12
     a82:	90 e0       	ldi	r25, 0x00	; 0
     a84:	95 d2       	rcall	.+1322   	; 0xfb0 <fputc>
     a86:	80 e3       	ldi	r24, 0x30	; 48
     a88:	9a e0       	ldi	r25, 0x0A	; 10
     a8a:	49 16       	cp	r4, r25
     a8c:	51 04       	cpc	r5, r1
     a8e:	2c f0       	brlt	.+10     	; 0xa9a <vfprintf+0x3d6>
     a90:	8f 5f       	subi	r24, 0xFF	; 255
     a92:	5a e0       	ldi	r21, 0x0A	; 10
     a94:	45 1a       	sub	r4, r21
     a96:	51 08       	sbc	r5, r1
     a98:	f7 cf       	rjmp	.-18     	; 0xa88 <vfprintf+0x3c4>
     a9a:	b6 01       	movw	r22, r12
     a9c:	90 e0       	ldi	r25, 0x00	; 0
     a9e:	88 d2       	rcall	.+1296   	; 0xfb0 <fputc>
     aa0:	b6 01       	movw	r22, r12
     aa2:	c2 01       	movw	r24, r4
     aa4:	c0 96       	adiw	r24, 0x30	; 48
     aa6:	84 d2       	rcall	.+1288   	; 0xfb0 <fputc>
     aa8:	4c c1       	rjmp	.+664    	; 0xd42 <vfprintf+0x67e>
     aaa:	83 36       	cpi	r24, 0x63	; 99
     aac:	31 f0       	breq	.+12     	; 0xaba <vfprintf+0x3f6>
     aae:	83 37       	cpi	r24, 0x73	; 115
     ab0:	79 f0       	breq	.+30     	; 0xad0 <vfprintf+0x40c>
     ab2:	83 35       	cpi	r24, 0x53	; 83
     ab4:	09 f0       	breq	.+2      	; 0xab8 <vfprintf+0x3f4>
     ab6:	54 c0       	rjmp	.+168    	; 0xb60 <vfprintf+0x49c>
     ab8:	20 c0       	rjmp	.+64     	; 0xafa <vfprintf+0x436>
     aba:	52 01       	movw	r10, r4
     abc:	e2 e0       	ldi	r30, 0x02	; 2
     abe:	ae 0e       	add	r10, r30
     ac0:	b1 1c       	adc	r11, r1
     ac2:	f2 01       	movw	r30, r4
     ac4:	80 81       	ld	r24, Z
     ac6:	89 83       	std	Y+1, r24	; 0x01
     ac8:	01 e0       	ldi	r16, 0x01	; 1
     aca:	10 e0       	ldi	r17, 0x00	; 0
     acc:	23 01       	movw	r4, r6
     ace:	13 c0       	rjmp	.+38     	; 0xaf6 <vfprintf+0x432>
     ad0:	52 01       	movw	r10, r4
     ad2:	f2 e0       	ldi	r31, 0x02	; 2
     ad4:	af 0e       	add	r10, r31
     ad6:	b1 1c       	adc	r11, r1
     ad8:	f2 01       	movw	r30, r4
     ada:	40 80       	ld	r4, Z
     adc:	51 80       	ldd	r5, Z+1	; 0x01
     ade:	26 ff       	sbrs	r18, 6
     ae0:	03 c0       	rjmp	.+6      	; 0xae8 <vfprintf+0x424>
     ae2:	61 2f       	mov	r22, r17
     ae4:	70 e0       	ldi	r23, 0x00	; 0
     ae6:	02 c0       	rjmp	.+4      	; 0xaec <vfprintf+0x428>
     ae8:	6f ef       	ldi	r22, 0xFF	; 255
     aea:	7f ef       	ldi	r23, 0xFF	; 255
     aec:	c2 01       	movw	r24, r4
     aee:	2a 8b       	std	Y+18, r18	; 0x12
     af0:	54 d2       	rcall	.+1192   	; 0xf9a <strnlen>
     af2:	8c 01       	movw	r16, r24
     af4:	2a 89       	ldd	r18, Y+18	; 0x12
     af6:	2f 77       	andi	r18, 0x7F	; 127
     af8:	14 c0       	rjmp	.+40     	; 0xb22 <vfprintf+0x45e>
     afa:	52 01       	movw	r10, r4
     afc:	f2 e0       	ldi	r31, 0x02	; 2
     afe:	af 0e       	add	r10, r31
     b00:	b1 1c       	adc	r11, r1
     b02:	f2 01       	movw	r30, r4
     b04:	40 80       	ld	r4, Z
     b06:	51 80       	ldd	r5, Z+1	; 0x01
     b08:	26 ff       	sbrs	r18, 6
     b0a:	03 c0       	rjmp	.+6      	; 0xb12 <vfprintf+0x44e>
     b0c:	61 2f       	mov	r22, r17
     b0e:	70 e0       	ldi	r23, 0x00	; 0
     b10:	02 c0       	rjmp	.+4      	; 0xb16 <vfprintf+0x452>
     b12:	6f ef       	ldi	r22, 0xFF	; 255
     b14:	7f ef       	ldi	r23, 0xFF	; 255
     b16:	c2 01       	movw	r24, r4
     b18:	2a 8b       	std	Y+18, r18	; 0x12
     b1a:	34 d2       	rcall	.+1128   	; 0xf84 <strnlen_P>
     b1c:	8c 01       	movw	r16, r24
     b1e:	2a 89       	ldd	r18, Y+18	; 0x12
     b20:	20 68       	ori	r18, 0x80	; 128
     b22:	32 2e       	mov	r3, r18
     b24:	23 fd       	sbrc	r18, 3
     b26:	18 c0       	rjmp	.+48     	; 0xb58 <vfprintf+0x494>
     b28:	8f 2d       	mov	r24, r15
     b2a:	90 e0       	ldi	r25, 0x00	; 0
     b2c:	08 17       	cp	r16, r24
     b2e:	19 07       	cpc	r17, r25
     b30:	98 f4       	brcc	.+38     	; 0xb58 <vfprintf+0x494>
     b32:	b6 01       	movw	r22, r12
     b34:	80 e2       	ldi	r24, 0x20	; 32
     b36:	90 e0       	ldi	r25, 0x00	; 0
     b38:	3b d2       	rcall	.+1142   	; 0xfb0 <fputc>
     b3a:	fa 94       	dec	r15
     b3c:	f5 cf       	rjmp	.-22     	; 0xb28 <vfprintf+0x464>
     b3e:	f2 01       	movw	r30, r4
     b40:	37 fc       	sbrc	r3, 7
     b42:	85 91       	lpm	r24, Z+
     b44:	37 fe       	sbrs	r3, 7
     b46:	81 91       	ld	r24, Z+
     b48:	2f 01       	movw	r4, r30
     b4a:	b6 01       	movw	r22, r12
     b4c:	90 e0       	ldi	r25, 0x00	; 0
     b4e:	30 d2       	rcall	.+1120   	; 0xfb0 <fputc>
     b50:	f1 10       	cpse	r15, r1
     b52:	fa 94       	dec	r15
     b54:	01 50       	subi	r16, 0x01	; 1
     b56:	11 09       	sbc	r17, r1
     b58:	01 15       	cp	r16, r1
     b5a:	11 05       	cpc	r17, r1
     b5c:	81 f7       	brne	.-32     	; 0xb3e <vfprintf+0x47a>
     b5e:	f1 c0       	rjmp	.+482    	; 0xd42 <vfprintf+0x67e>
     b60:	84 36       	cpi	r24, 0x64	; 100
     b62:	11 f0       	breq	.+4      	; 0xb68 <vfprintf+0x4a4>
     b64:	89 36       	cpi	r24, 0x69	; 105
     b66:	51 f5       	brne	.+84     	; 0xbbc <vfprintf+0x4f8>
     b68:	52 01       	movw	r10, r4
     b6a:	27 ff       	sbrs	r18, 7
     b6c:	09 c0       	rjmp	.+18     	; 0xb80 <vfprintf+0x4bc>
     b6e:	f4 e0       	ldi	r31, 0x04	; 4
     b70:	af 0e       	add	r10, r31
     b72:	b1 1c       	adc	r11, r1
     b74:	f2 01       	movw	r30, r4
     b76:	60 81       	ld	r22, Z
     b78:	71 81       	ldd	r23, Z+1	; 0x01
     b7a:	82 81       	ldd	r24, Z+2	; 0x02
     b7c:	93 81       	ldd	r25, Z+3	; 0x03
     b7e:	0a c0       	rjmp	.+20     	; 0xb94 <vfprintf+0x4d0>
     b80:	f2 e0       	ldi	r31, 0x02	; 2
     b82:	af 0e       	add	r10, r31
     b84:	b1 1c       	adc	r11, r1
     b86:	f2 01       	movw	r30, r4
     b88:	60 81       	ld	r22, Z
     b8a:	71 81       	ldd	r23, Z+1	; 0x01
     b8c:	07 2e       	mov	r0, r23
     b8e:	00 0c       	add	r0, r0
     b90:	88 0b       	sbc	r24, r24
     b92:	99 0b       	sbc	r25, r25
     b94:	2f 76       	andi	r18, 0x6F	; 111
     b96:	32 2e       	mov	r3, r18
     b98:	97 ff       	sbrs	r25, 7
     b9a:	09 c0       	rjmp	.+18     	; 0xbae <vfprintf+0x4ea>
     b9c:	90 95       	com	r25
     b9e:	80 95       	com	r24
     ba0:	70 95       	com	r23
     ba2:	61 95       	neg	r22
     ba4:	7f 4f       	sbci	r23, 0xFF	; 255
     ba6:	8f 4f       	sbci	r24, 0xFF	; 255
     ba8:	9f 4f       	sbci	r25, 0xFF	; 255
     baa:	20 68       	ori	r18, 0x80	; 128
     bac:	32 2e       	mov	r3, r18
     bae:	2a e0       	ldi	r18, 0x0A	; 10
     bb0:	30 e0       	ldi	r19, 0x00	; 0
     bb2:	a3 01       	movw	r20, r6
     bb4:	35 d2       	rcall	.+1130   	; 0x1020 <__ultoa_invert>
     bb6:	e8 2e       	mov	r14, r24
     bb8:	e6 18       	sub	r14, r6
     bba:	3e c0       	rjmp	.+124    	; 0xc38 <vfprintf+0x574>
     bbc:	02 2f       	mov	r16, r18
     bbe:	85 37       	cpi	r24, 0x75	; 117
     bc0:	21 f4       	brne	.+8      	; 0xbca <vfprintf+0x506>
     bc2:	0f 7e       	andi	r16, 0xEF	; 239
     bc4:	2a e0       	ldi	r18, 0x0A	; 10
     bc6:	30 e0       	ldi	r19, 0x00	; 0
     bc8:	1d c0       	rjmp	.+58     	; 0xc04 <vfprintf+0x540>
     bca:	09 7f       	andi	r16, 0xF9	; 249
     bcc:	8f 36       	cpi	r24, 0x6F	; 111
     bce:	91 f0       	breq	.+36     	; 0xbf4 <vfprintf+0x530>
     bd0:	18 f4       	brcc	.+6      	; 0xbd8 <vfprintf+0x514>
     bd2:	88 35       	cpi	r24, 0x58	; 88
     bd4:	59 f0       	breq	.+22     	; 0xbec <vfprintf+0x528>
     bd6:	be c0       	rjmp	.+380    	; 0xd54 <vfprintf+0x690>
     bd8:	80 37       	cpi	r24, 0x70	; 112
     bda:	19 f0       	breq	.+6      	; 0xbe2 <vfprintf+0x51e>
     bdc:	88 37       	cpi	r24, 0x78	; 120
     bde:	11 f0       	breq	.+4      	; 0xbe4 <vfprintf+0x520>
     be0:	b9 c0       	rjmp	.+370    	; 0xd54 <vfprintf+0x690>
     be2:	00 61       	ori	r16, 0x10	; 16
     be4:	04 ff       	sbrs	r16, 4
     be6:	09 c0       	rjmp	.+18     	; 0xbfa <vfprintf+0x536>
     be8:	04 60       	ori	r16, 0x04	; 4
     bea:	07 c0       	rjmp	.+14     	; 0xbfa <vfprintf+0x536>
     bec:	24 ff       	sbrs	r18, 4
     bee:	08 c0       	rjmp	.+16     	; 0xc00 <vfprintf+0x53c>
     bf0:	06 60       	ori	r16, 0x06	; 6
     bf2:	06 c0       	rjmp	.+12     	; 0xc00 <vfprintf+0x53c>
     bf4:	28 e0       	ldi	r18, 0x08	; 8
     bf6:	30 e0       	ldi	r19, 0x00	; 0
     bf8:	05 c0       	rjmp	.+10     	; 0xc04 <vfprintf+0x540>
     bfa:	20 e1       	ldi	r18, 0x10	; 16
     bfc:	30 e0       	ldi	r19, 0x00	; 0
     bfe:	02 c0       	rjmp	.+4      	; 0xc04 <vfprintf+0x540>
     c00:	20 e1       	ldi	r18, 0x10	; 16
     c02:	32 e0       	ldi	r19, 0x02	; 2
     c04:	52 01       	movw	r10, r4
     c06:	07 ff       	sbrs	r16, 7
     c08:	09 c0       	rjmp	.+18     	; 0xc1c <vfprintf+0x558>
     c0a:	f4 e0       	ldi	r31, 0x04	; 4
     c0c:	af 0e       	add	r10, r31
     c0e:	b1 1c       	adc	r11, r1
     c10:	f2 01       	movw	r30, r4
     c12:	60 81       	ld	r22, Z
     c14:	71 81       	ldd	r23, Z+1	; 0x01
     c16:	82 81       	ldd	r24, Z+2	; 0x02
     c18:	93 81       	ldd	r25, Z+3	; 0x03
     c1a:	08 c0       	rjmp	.+16     	; 0xc2c <vfprintf+0x568>
     c1c:	f2 e0       	ldi	r31, 0x02	; 2
     c1e:	af 0e       	add	r10, r31
     c20:	b1 1c       	adc	r11, r1
     c22:	f2 01       	movw	r30, r4
     c24:	60 81       	ld	r22, Z
     c26:	71 81       	ldd	r23, Z+1	; 0x01
     c28:	80 e0       	ldi	r24, 0x00	; 0
     c2a:	90 e0       	ldi	r25, 0x00	; 0
     c2c:	a3 01       	movw	r20, r6
     c2e:	f8 d1       	rcall	.+1008   	; 0x1020 <__ultoa_invert>
     c30:	e8 2e       	mov	r14, r24
     c32:	e6 18       	sub	r14, r6
     c34:	0f 77       	andi	r16, 0x7F	; 127
     c36:	30 2e       	mov	r3, r16
     c38:	36 fe       	sbrs	r3, 6
     c3a:	0b c0       	rjmp	.+22     	; 0xc52 <vfprintf+0x58e>
     c3c:	33 2d       	mov	r19, r3
     c3e:	3e 7f       	andi	r19, 0xFE	; 254
     c40:	e1 16       	cp	r14, r17
     c42:	50 f4       	brcc	.+20     	; 0xc58 <vfprintf+0x594>
     c44:	34 fe       	sbrs	r3, 4
     c46:	0a c0       	rjmp	.+20     	; 0xc5c <vfprintf+0x598>
     c48:	32 fc       	sbrc	r3, 2
     c4a:	08 c0       	rjmp	.+16     	; 0xc5c <vfprintf+0x598>
     c4c:	33 2d       	mov	r19, r3
     c4e:	3e 7e       	andi	r19, 0xEE	; 238
     c50:	05 c0       	rjmp	.+10     	; 0xc5c <vfprintf+0x598>
     c52:	0e 2d       	mov	r16, r14
     c54:	33 2d       	mov	r19, r3
     c56:	03 c0       	rjmp	.+6      	; 0xc5e <vfprintf+0x59a>
     c58:	0e 2d       	mov	r16, r14
     c5a:	01 c0       	rjmp	.+2      	; 0xc5e <vfprintf+0x59a>
     c5c:	01 2f       	mov	r16, r17
     c5e:	34 ff       	sbrs	r19, 4
     c60:	0c c0       	rjmp	.+24     	; 0xc7a <vfprintf+0x5b6>
     c62:	fe 01       	movw	r30, r28
     c64:	ee 0d       	add	r30, r14
     c66:	f1 1d       	adc	r31, r1
     c68:	80 81       	ld	r24, Z
     c6a:	80 33       	cpi	r24, 0x30	; 48
     c6c:	11 f4       	brne	.+4      	; 0xc72 <vfprintf+0x5ae>
     c6e:	39 7e       	andi	r19, 0xE9	; 233
     c70:	08 c0       	rjmp	.+16     	; 0xc82 <vfprintf+0x5be>
     c72:	32 ff       	sbrs	r19, 2
     c74:	05 c0       	rjmp	.+10     	; 0xc80 <vfprintf+0x5bc>
     c76:	0e 5f       	subi	r16, 0xFE	; 254
     c78:	04 c0       	rjmp	.+8      	; 0xc82 <vfprintf+0x5be>
     c7a:	83 2f       	mov	r24, r19
     c7c:	86 78       	andi	r24, 0x86	; 134
     c7e:	09 f0       	breq	.+2      	; 0xc82 <vfprintf+0x5be>
     c80:	0f 5f       	subi	r16, 0xFF	; 255
     c82:	33 fd       	sbrc	r19, 3
     c84:	12 c0       	rjmp	.+36     	; 0xcaa <vfprintf+0x5e6>
     c86:	30 ff       	sbrs	r19, 0
     c88:	06 c0       	rjmp	.+12     	; 0xc96 <vfprintf+0x5d2>
     c8a:	1e 2d       	mov	r17, r14
     c8c:	0f 15       	cp	r16, r15
     c8e:	18 f4       	brcc	.+6      	; 0xc96 <vfprintf+0x5d2>
     c90:	1f 0d       	add	r17, r15
     c92:	10 1b       	sub	r17, r16
     c94:	0f 2d       	mov	r16, r15
     c96:	0f 15       	cp	r16, r15
     c98:	60 f4       	brcc	.+24     	; 0xcb2 <vfprintf+0x5ee>
     c9a:	b6 01       	movw	r22, r12
     c9c:	80 e2       	ldi	r24, 0x20	; 32
     c9e:	90 e0       	ldi	r25, 0x00	; 0
     ca0:	3b 8b       	std	Y+19, r19	; 0x13
     ca2:	86 d1       	rcall	.+780    	; 0xfb0 <fputc>
     ca4:	0f 5f       	subi	r16, 0xFF	; 255
     ca6:	3b 89       	ldd	r19, Y+19	; 0x13
     ca8:	f6 cf       	rjmp	.-20     	; 0xc96 <vfprintf+0x5d2>
     caa:	0f 15       	cp	r16, r15
     cac:	10 f4       	brcc	.+4      	; 0xcb2 <vfprintf+0x5ee>
     cae:	f0 1a       	sub	r15, r16
     cb0:	01 c0       	rjmp	.+2      	; 0xcb4 <vfprintf+0x5f0>
     cb2:	f1 2c       	mov	r15, r1
     cb4:	34 ff       	sbrs	r19, 4
     cb6:	11 c0       	rjmp	.+34     	; 0xcda <vfprintf+0x616>
     cb8:	b6 01       	movw	r22, r12
     cba:	80 e3       	ldi	r24, 0x30	; 48
     cbc:	90 e0       	ldi	r25, 0x00	; 0
     cbe:	3b 8b       	std	Y+19, r19	; 0x13
     cc0:	77 d1       	rcall	.+750    	; 0xfb0 <fputc>
     cc2:	3b 89       	ldd	r19, Y+19	; 0x13
     cc4:	32 ff       	sbrs	r19, 2
     cc6:	16 c0       	rjmp	.+44     	; 0xcf4 <vfprintf+0x630>
     cc8:	31 fd       	sbrc	r19, 1
     cca:	03 c0       	rjmp	.+6      	; 0xcd2 <vfprintf+0x60e>
     ccc:	88 e7       	ldi	r24, 0x78	; 120
     cce:	90 e0       	ldi	r25, 0x00	; 0
     cd0:	02 c0       	rjmp	.+4      	; 0xcd6 <vfprintf+0x612>
     cd2:	88 e5       	ldi	r24, 0x58	; 88
     cd4:	90 e0       	ldi	r25, 0x00	; 0
     cd6:	b6 01       	movw	r22, r12
     cd8:	0c c0       	rjmp	.+24     	; 0xcf2 <vfprintf+0x62e>
     cda:	83 2f       	mov	r24, r19
     cdc:	86 78       	andi	r24, 0x86	; 134
     cde:	51 f0       	breq	.+20     	; 0xcf4 <vfprintf+0x630>
     ce0:	31 ff       	sbrs	r19, 1
     ce2:	02 c0       	rjmp	.+4      	; 0xce8 <vfprintf+0x624>
     ce4:	8b e2       	ldi	r24, 0x2B	; 43
     ce6:	01 c0       	rjmp	.+2      	; 0xcea <vfprintf+0x626>
     ce8:	80 e2       	ldi	r24, 0x20	; 32
     cea:	37 fd       	sbrc	r19, 7
     cec:	8d e2       	ldi	r24, 0x2D	; 45
     cee:	b6 01       	movw	r22, r12
     cf0:	90 e0       	ldi	r25, 0x00	; 0
     cf2:	5e d1       	rcall	.+700    	; 0xfb0 <fputc>
     cf4:	e1 16       	cp	r14, r17
     cf6:	30 f4       	brcc	.+12     	; 0xd04 <vfprintf+0x640>
     cf8:	b6 01       	movw	r22, r12
     cfa:	80 e3       	ldi	r24, 0x30	; 48
     cfc:	90 e0       	ldi	r25, 0x00	; 0
     cfe:	58 d1       	rcall	.+688    	; 0xfb0 <fputc>
     d00:	11 50       	subi	r17, 0x01	; 1
     d02:	f8 cf       	rjmp	.-16     	; 0xcf4 <vfprintf+0x630>
     d04:	ea 94       	dec	r14
     d06:	f3 01       	movw	r30, r6
     d08:	ee 0d       	add	r30, r14
     d0a:	f1 1d       	adc	r31, r1
     d0c:	80 81       	ld	r24, Z
     d0e:	b6 01       	movw	r22, r12
     d10:	90 e0       	ldi	r25, 0x00	; 0
     d12:	4e d1       	rcall	.+668    	; 0xfb0 <fputc>
     d14:	e1 10       	cpse	r14, r1
     d16:	f6 cf       	rjmp	.-20     	; 0xd04 <vfprintf+0x640>
     d18:	14 c0       	rjmp	.+40     	; 0xd42 <vfprintf+0x67e>
     d1a:	f4 e0       	ldi	r31, 0x04	; 4
     d1c:	ff 15       	cp	r31, r15
     d1e:	48 f5       	brcc	.+82     	; 0xd72 <vfprintf+0x6ae>
     d20:	84 e0       	ldi	r24, 0x04	; 4
     d22:	f8 1a       	sub	r15, r24
     d24:	33 fe       	sbrs	r3, 3
     d26:	1d c0       	rjmp	.+58     	; 0xd62 <vfprintf+0x69e>
     d28:	21 10       	cpse	r2, r1
     d2a:	24 c0       	rjmp	.+72     	; 0xd74 <vfprintf+0x6b0>
     d2c:	03 ff       	sbrs	r16, 3
     d2e:	27 c0       	rjmp	.+78     	; 0xd7e <vfprintf+0x6ba>
     d30:	0c e8       	ldi	r16, 0x8C	; 140
     d32:	10 e0       	ldi	r17, 0x00	; 0
     d34:	f3 2d       	mov	r31, r3
     d36:	f0 71       	andi	r31, 0x10	; 16
     d38:	3f 2e       	mov	r3, r31
     d3a:	f8 01       	movw	r30, r16
     d3c:	84 91       	lpm	r24, Z
     d3e:	81 11       	cpse	r24, r1
     d40:	21 c0       	rjmp	.+66     	; 0xd84 <vfprintf+0x6c0>
     d42:	ff 20       	and	r15, r15
     d44:	09 f4       	brne	.+2      	; 0xd48 <vfprintf+0x684>
     d46:	fd cc       	rjmp	.-1542   	; 0x742 <vfprintf+0x7e>
     d48:	b6 01       	movw	r22, r12
     d4a:	80 e2       	ldi	r24, 0x20	; 32
     d4c:	90 e0       	ldi	r25, 0x00	; 0
     d4e:	30 d1       	rcall	.+608    	; 0xfb0 <fputc>
     d50:	fa 94       	dec	r15
     d52:	f7 cf       	rjmp	.-18     	; 0xd42 <vfprintf+0x67e>
     d54:	f6 01       	movw	r30, r12
     d56:	86 81       	ldd	r24, Z+6	; 0x06
     d58:	97 81       	ldd	r25, Z+7	; 0x07
     d5a:	23 c0       	rjmp	.+70     	; 0xda2 <vfprintf+0x6de>
     d5c:	8f ef       	ldi	r24, 0xFF	; 255
     d5e:	9f ef       	ldi	r25, 0xFF	; 255
     d60:	20 c0       	rjmp	.+64     	; 0xda2 <vfprintf+0x6de>
     d62:	b6 01       	movw	r22, r12
     d64:	80 e2       	ldi	r24, 0x20	; 32
     d66:	90 e0       	ldi	r25, 0x00	; 0
     d68:	23 d1       	rcall	.+582    	; 0xfb0 <fputc>
     d6a:	fa 94       	dec	r15
     d6c:	f1 10       	cpse	r15, r1
     d6e:	f9 cf       	rjmp	.-14     	; 0xd62 <vfprintf+0x69e>
     d70:	db cf       	rjmp	.-74     	; 0xd28 <vfprintf+0x664>
     d72:	f1 2c       	mov	r15, r1
     d74:	b6 01       	movw	r22, r12
     d76:	82 2d       	mov	r24, r2
     d78:	90 e0       	ldi	r25, 0x00	; 0
     d7a:	1a d1       	rcall	.+564    	; 0xfb0 <fputc>
     d7c:	d7 cf       	rjmp	.-82     	; 0xd2c <vfprintf+0x668>
     d7e:	00 e9       	ldi	r16, 0x90	; 144
     d80:	10 e0       	ldi	r17, 0x00	; 0
     d82:	d8 cf       	rjmp	.-80     	; 0xd34 <vfprintf+0x670>
     d84:	31 10       	cpse	r3, r1
     d86:	80 52       	subi	r24, 0x20	; 32
     d88:	b6 01       	movw	r22, r12
     d8a:	90 e0       	ldi	r25, 0x00	; 0
     d8c:	11 d1       	rcall	.+546    	; 0xfb0 <fputc>
     d8e:	0f 5f       	subi	r16, 0xFF	; 255
     d90:	1f 4f       	sbci	r17, 0xFF	; 255
     d92:	d3 cf       	rjmp	.-90     	; 0xd3a <vfprintf+0x676>
     d94:	23 e0       	ldi	r18, 0x03	; 3
     d96:	2f 15       	cp	r18, r15
     d98:	10 f4       	brcc	.+4      	; 0xd9e <vfprintf+0x6da>
     d9a:	83 e0       	ldi	r24, 0x03	; 3
     d9c:	c2 cf       	rjmp	.-124    	; 0xd22 <vfprintf+0x65e>
     d9e:	f1 2c       	mov	r15, r1
     da0:	c5 cf       	rjmp	.-118    	; 0xd2c <vfprintf+0x668>
     da2:	63 96       	adiw	r28, 0x13	; 19
     da4:	0f b6       	in	r0, 0x3f	; 63
     da6:	f8 94       	cli
     da8:	de bf       	out	0x3e, r29	; 62
     daa:	0f be       	out	0x3f, r0	; 63
     dac:	cd bf       	out	0x3d, r28	; 61
     dae:	df 91       	pop	r29
     db0:	cf 91       	pop	r28
     db2:	1f 91       	pop	r17
     db4:	0f 91       	pop	r16
     db6:	ff 90       	pop	r15
     db8:	ef 90       	pop	r14
     dba:	df 90       	pop	r13
     dbc:	cf 90       	pop	r12
     dbe:	bf 90       	pop	r11
     dc0:	af 90       	pop	r10
     dc2:	9f 90       	pop	r9
     dc4:	8f 90       	pop	r8
     dc6:	7f 90       	pop	r7
     dc8:	6f 90       	pop	r6
     dca:	5f 90       	pop	r5
     dcc:	4f 90       	pop	r4
     dce:	3f 90       	pop	r3
     dd0:	2f 90       	pop	r2
     dd2:	08 95       	ret

00000dd4 <__ftoa_engine>:
     dd4:	28 30       	cpi	r18, 0x08	; 8
     dd6:	08 f0       	brcs	.+2      	; 0xdda <__ftoa_engine+0x6>
     dd8:	27 e0       	ldi	r18, 0x07	; 7
     dda:	33 27       	eor	r19, r19
     ddc:	da 01       	movw	r26, r20
     dde:	99 0f       	add	r25, r25
     de0:	31 1d       	adc	r19, r1
     de2:	87 fd       	sbrc	r24, 7
     de4:	91 60       	ori	r25, 0x01	; 1
     de6:	00 96       	adiw	r24, 0x00	; 0
     de8:	61 05       	cpc	r22, r1
     dea:	71 05       	cpc	r23, r1
     dec:	39 f4       	brne	.+14     	; 0xdfc <__ftoa_engine+0x28>
     dee:	32 60       	ori	r19, 0x02	; 2
     df0:	2e 5f       	subi	r18, 0xFE	; 254
     df2:	3d 93       	st	X+, r19
     df4:	30 e3       	ldi	r19, 0x30	; 48
     df6:	2a 95       	dec	r18
     df8:	e1 f7       	brne	.-8      	; 0xdf2 <__ftoa_engine+0x1e>
     dfa:	08 95       	ret
     dfc:	9f 3f       	cpi	r25, 0xFF	; 255
     dfe:	30 f0       	brcs	.+12     	; 0xe0c <__ftoa_engine+0x38>
     e00:	80 38       	cpi	r24, 0x80	; 128
     e02:	71 05       	cpc	r23, r1
     e04:	61 05       	cpc	r22, r1
     e06:	09 f0       	breq	.+2      	; 0xe0a <__ftoa_engine+0x36>
     e08:	3c 5f       	subi	r19, 0xFC	; 252
     e0a:	3c 5f       	subi	r19, 0xFC	; 252
     e0c:	3d 93       	st	X+, r19
     e0e:	91 30       	cpi	r25, 0x01	; 1
     e10:	08 f0       	brcs	.+2      	; 0xe14 <__ftoa_engine+0x40>
     e12:	80 68       	ori	r24, 0x80	; 128
     e14:	91 1d       	adc	r25, r1
     e16:	df 93       	push	r29
     e18:	cf 93       	push	r28
     e1a:	1f 93       	push	r17
     e1c:	0f 93       	push	r16
     e1e:	ff 92       	push	r15
     e20:	ef 92       	push	r14
     e22:	19 2f       	mov	r17, r25
     e24:	98 7f       	andi	r25, 0xF8	; 248
     e26:	96 95       	lsr	r25
     e28:	e9 2f       	mov	r30, r25
     e2a:	96 95       	lsr	r25
     e2c:	96 95       	lsr	r25
     e2e:	e9 0f       	add	r30, r25
     e30:	ff 27       	eor	r31, r31
     e32:	e2 51       	subi	r30, 0x12	; 18
     e34:	ff 4f       	sbci	r31, 0xFF	; 255
     e36:	99 27       	eor	r25, r25
     e38:	33 27       	eor	r19, r19
     e3a:	ee 24       	eor	r14, r14
     e3c:	ff 24       	eor	r15, r15
     e3e:	a7 01       	movw	r20, r14
     e40:	e7 01       	movw	r28, r14
     e42:	05 90       	lpm	r0, Z+
     e44:	08 94       	sec
     e46:	07 94       	ror	r0
     e48:	28 f4       	brcc	.+10     	; 0xe54 <__ftoa_engine+0x80>
     e4a:	36 0f       	add	r19, r22
     e4c:	e7 1e       	adc	r14, r23
     e4e:	f8 1e       	adc	r15, r24
     e50:	49 1f       	adc	r20, r25
     e52:	51 1d       	adc	r21, r1
     e54:	66 0f       	add	r22, r22
     e56:	77 1f       	adc	r23, r23
     e58:	88 1f       	adc	r24, r24
     e5a:	99 1f       	adc	r25, r25
     e5c:	06 94       	lsr	r0
     e5e:	a1 f7       	brne	.-24     	; 0xe48 <__ftoa_engine+0x74>
     e60:	05 90       	lpm	r0, Z+
     e62:	07 94       	ror	r0
     e64:	28 f4       	brcc	.+10     	; 0xe70 <__ftoa_engine+0x9c>
     e66:	e7 0e       	add	r14, r23
     e68:	f8 1e       	adc	r15, r24
     e6a:	49 1f       	adc	r20, r25
     e6c:	56 1f       	adc	r21, r22
     e6e:	c1 1d       	adc	r28, r1
     e70:	77 0f       	add	r23, r23
     e72:	88 1f       	adc	r24, r24
     e74:	99 1f       	adc	r25, r25
     e76:	66 1f       	adc	r22, r22
     e78:	06 94       	lsr	r0
     e7a:	a1 f7       	brne	.-24     	; 0xe64 <__ftoa_engine+0x90>
     e7c:	05 90       	lpm	r0, Z+
     e7e:	07 94       	ror	r0
     e80:	28 f4       	brcc	.+10     	; 0xe8c <__ftoa_engine+0xb8>
     e82:	f8 0e       	add	r15, r24
     e84:	49 1f       	adc	r20, r25
     e86:	56 1f       	adc	r21, r22
     e88:	c7 1f       	adc	r28, r23
     e8a:	d1 1d       	adc	r29, r1
     e8c:	88 0f       	add	r24, r24
     e8e:	99 1f       	adc	r25, r25
     e90:	66 1f       	adc	r22, r22
     e92:	77 1f       	adc	r23, r23
     e94:	06 94       	lsr	r0
     e96:	a1 f7       	brne	.-24     	; 0xe80 <__ftoa_engine+0xac>
     e98:	05 90       	lpm	r0, Z+
     e9a:	07 94       	ror	r0
     e9c:	20 f4       	brcc	.+8      	; 0xea6 <__ftoa_engine+0xd2>
     e9e:	49 0f       	add	r20, r25
     ea0:	56 1f       	adc	r21, r22
     ea2:	c7 1f       	adc	r28, r23
     ea4:	d8 1f       	adc	r29, r24
     ea6:	99 0f       	add	r25, r25
     ea8:	66 1f       	adc	r22, r22
     eaa:	77 1f       	adc	r23, r23
     eac:	88 1f       	adc	r24, r24
     eae:	06 94       	lsr	r0
     eb0:	a9 f7       	brne	.-22     	; 0xe9c <__ftoa_engine+0xc8>
     eb2:	84 91       	lpm	r24, Z
     eb4:	10 95       	com	r17
     eb6:	17 70       	andi	r17, 0x07	; 7
     eb8:	41 f0       	breq	.+16     	; 0xeca <__ftoa_engine+0xf6>
     eba:	d6 95       	lsr	r29
     ebc:	c7 95       	ror	r28
     ebe:	57 95       	ror	r21
     ec0:	47 95       	ror	r20
     ec2:	f7 94       	ror	r15
     ec4:	e7 94       	ror	r14
     ec6:	1a 95       	dec	r17
     ec8:	c1 f7       	brne	.-16     	; 0xeba <__ftoa_engine+0xe6>
     eca:	e4 e9       	ldi	r30, 0x94	; 148
     ecc:	f0 e0       	ldi	r31, 0x00	; 0
     ece:	68 94       	set
     ed0:	15 90       	lpm	r1, Z+
     ed2:	15 91       	lpm	r17, Z+
     ed4:	35 91       	lpm	r19, Z+
     ed6:	65 91       	lpm	r22, Z+
     ed8:	95 91       	lpm	r25, Z+
     eda:	05 90       	lpm	r0, Z+
     edc:	7f e2       	ldi	r23, 0x2F	; 47
     ede:	73 95       	inc	r23
     ee0:	e1 18       	sub	r14, r1
     ee2:	f1 0a       	sbc	r15, r17
     ee4:	43 0b       	sbc	r20, r19
     ee6:	56 0b       	sbc	r21, r22
     ee8:	c9 0b       	sbc	r28, r25
     eea:	d0 09       	sbc	r29, r0
     eec:	c0 f7       	brcc	.-16     	; 0xede <__ftoa_engine+0x10a>
     eee:	e1 0c       	add	r14, r1
     ef0:	f1 1e       	adc	r15, r17
     ef2:	43 1f       	adc	r20, r19
     ef4:	56 1f       	adc	r21, r22
     ef6:	c9 1f       	adc	r28, r25
     ef8:	d0 1d       	adc	r29, r0
     efa:	7e f4       	brtc	.+30     	; 0xf1a <__ftoa_engine+0x146>
     efc:	70 33       	cpi	r23, 0x30	; 48
     efe:	11 f4       	brne	.+4      	; 0xf04 <__ftoa_engine+0x130>
     f00:	8a 95       	dec	r24
     f02:	e6 cf       	rjmp	.-52     	; 0xed0 <__ftoa_engine+0xfc>
     f04:	e8 94       	clt
     f06:	01 50       	subi	r16, 0x01	; 1
     f08:	30 f0       	brcs	.+12     	; 0xf16 <__ftoa_engine+0x142>
     f0a:	08 0f       	add	r16, r24
     f0c:	0a f4       	brpl	.+2      	; 0xf10 <__ftoa_engine+0x13c>
     f0e:	00 27       	eor	r16, r16
     f10:	02 17       	cp	r16, r18
     f12:	08 f4       	brcc	.+2      	; 0xf16 <__ftoa_engine+0x142>
     f14:	20 2f       	mov	r18, r16
     f16:	23 95       	inc	r18
     f18:	02 2f       	mov	r16, r18
     f1a:	7a 33       	cpi	r23, 0x3A	; 58
     f1c:	28 f0       	brcs	.+10     	; 0xf28 <__ftoa_engine+0x154>
     f1e:	79 e3       	ldi	r23, 0x39	; 57
     f20:	7d 93       	st	X+, r23
     f22:	2a 95       	dec	r18
     f24:	e9 f7       	brne	.-6      	; 0xf20 <__ftoa_engine+0x14c>
     f26:	10 c0       	rjmp	.+32     	; 0xf48 <__ftoa_engine+0x174>
     f28:	7d 93       	st	X+, r23
     f2a:	2a 95       	dec	r18
     f2c:	89 f6       	brne	.-94     	; 0xed0 <__ftoa_engine+0xfc>
     f2e:	06 94       	lsr	r0
     f30:	97 95       	ror	r25
     f32:	67 95       	ror	r22
     f34:	37 95       	ror	r19
     f36:	17 95       	ror	r17
     f38:	17 94       	ror	r1
     f3a:	e1 18       	sub	r14, r1
     f3c:	f1 0a       	sbc	r15, r17
     f3e:	43 0b       	sbc	r20, r19
     f40:	56 0b       	sbc	r21, r22
     f42:	c9 0b       	sbc	r28, r25
     f44:	d0 09       	sbc	r29, r0
     f46:	98 f0       	brcs	.+38     	; 0xf6e <__ftoa_engine+0x19a>
     f48:	23 95       	inc	r18
     f4a:	7e 91       	ld	r23, -X
     f4c:	73 95       	inc	r23
     f4e:	7a 33       	cpi	r23, 0x3A	; 58
     f50:	08 f0       	brcs	.+2      	; 0xf54 <__ftoa_engine+0x180>
     f52:	70 e3       	ldi	r23, 0x30	; 48
     f54:	7c 93       	st	X, r23
     f56:	20 13       	cpse	r18, r16
     f58:	b8 f7       	brcc	.-18     	; 0xf48 <__ftoa_engine+0x174>
     f5a:	7e 91       	ld	r23, -X
     f5c:	70 61       	ori	r23, 0x10	; 16
     f5e:	7d 93       	st	X+, r23
     f60:	30 f0       	brcs	.+12     	; 0xf6e <__ftoa_engine+0x19a>
     f62:	83 95       	inc	r24
     f64:	71 e3       	ldi	r23, 0x31	; 49
     f66:	7d 93       	st	X+, r23
     f68:	70 e3       	ldi	r23, 0x30	; 48
     f6a:	2a 95       	dec	r18
     f6c:	e1 f7       	brne	.-8      	; 0xf66 <__ftoa_engine+0x192>
     f6e:	11 24       	eor	r1, r1
     f70:	ef 90       	pop	r14
     f72:	ff 90       	pop	r15
     f74:	0f 91       	pop	r16
     f76:	1f 91       	pop	r17
     f78:	cf 91       	pop	r28
     f7a:	df 91       	pop	r29
     f7c:	99 27       	eor	r25, r25
     f7e:	87 fd       	sbrc	r24, 7
     f80:	90 95       	com	r25
     f82:	08 95       	ret

00000f84 <strnlen_P>:
     f84:	fc 01       	movw	r30, r24
     f86:	05 90       	lpm	r0, Z+
     f88:	61 50       	subi	r22, 0x01	; 1
     f8a:	70 40       	sbci	r23, 0x00	; 0
     f8c:	01 10       	cpse	r0, r1
     f8e:	d8 f7       	brcc	.-10     	; 0xf86 <strnlen_P+0x2>
     f90:	80 95       	com	r24
     f92:	90 95       	com	r25
     f94:	8e 0f       	add	r24, r30
     f96:	9f 1f       	adc	r25, r31
     f98:	08 95       	ret

00000f9a <strnlen>:
     f9a:	fc 01       	movw	r30, r24
     f9c:	61 50       	subi	r22, 0x01	; 1
     f9e:	70 40       	sbci	r23, 0x00	; 0
     fa0:	01 90       	ld	r0, Z+
     fa2:	01 10       	cpse	r0, r1
     fa4:	d8 f7       	brcc	.-10     	; 0xf9c <strnlen+0x2>
     fa6:	80 95       	com	r24
     fa8:	90 95       	com	r25
     faa:	8e 0f       	add	r24, r30
     fac:	9f 1f       	adc	r25, r31
     fae:	08 95       	ret

00000fb0 <fputc>:
     fb0:	0f 93       	push	r16
     fb2:	1f 93       	push	r17
     fb4:	cf 93       	push	r28
     fb6:	df 93       	push	r29
     fb8:	fb 01       	movw	r30, r22
     fba:	23 81       	ldd	r18, Z+3	; 0x03
     fbc:	21 fd       	sbrc	r18, 1
     fbe:	03 c0       	rjmp	.+6      	; 0xfc6 <fputc+0x16>
     fc0:	8f ef       	ldi	r24, 0xFF	; 255
     fc2:	9f ef       	ldi	r25, 0xFF	; 255
     fc4:	28 c0       	rjmp	.+80     	; 0x1016 <fputc+0x66>
     fc6:	22 ff       	sbrs	r18, 2
     fc8:	16 c0       	rjmp	.+44     	; 0xff6 <fputc+0x46>
     fca:	46 81       	ldd	r20, Z+6	; 0x06
     fcc:	57 81       	ldd	r21, Z+7	; 0x07
     fce:	24 81       	ldd	r18, Z+4	; 0x04
     fd0:	35 81       	ldd	r19, Z+5	; 0x05
     fd2:	42 17       	cp	r20, r18
     fd4:	53 07       	cpc	r21, r19
     fd6:	44 f4       	brge	.+16     	; 0xfe8 <fputc+0x38>
     fd8:	a0 81       	ld	r26, Z
     fda:	b1 81       	ldd	r27, Z+1	; 0x01
     fdc:	9d 01       	movw	r18, r26
     fde:	2f 5f       	subi	r18, 0xFF	; 255
     fe0:	3f 4f       	sbci	r19, 0xFF	; 255
     fe2:	31 83       	std	Z+1, r19	; 0x01
     fe4:	20 83       	st	Z, r18
     fe6:	8c 93       	st	X, r24
     fe8:	26 81       	ldd	r18, Z+6	; 0x06
     fea:	37 81       	ldd	r19, Z+7	; 0x07
     fec:	2f 5f       	subi	r18, 0xFF	; 255
     fee:	3f 4f       	sbci	r19, 0xFF	; 255
     ff0:	37 83       	std	Z+7, r19	; 0x07
     ff2:	26 83       	std	Z+6, r18	; 0x06
     ff4:	10 c0       	rjmp	.+32     	; 0x1016 <fputc+0x66>
     ff6:	eb 01       	movw	r28, r22
     ff8:	09 2f       	mov	r16, r25
     ffa:	18 2f       	mov	r17, r24
     ffc:	00 84       	ldd	r0, Z+8	; 0x08
     ffe:	f1 85       	ldd	r31, Z+9	; 0x09
    1000:	e0 2d       	mov	r30, r0
    1002:	09 95       	icall
    1004:	89 2b       	or	r24, r25
    1006:	e1 f6       	brne	.-72     	; 0xfc0 <fputc+0x10>
    1008:	8e 81       	ldd	r24, Y+6	; 0x06
    100a:	9f 81       	ldd	r25, Y+7	; 0x07
    100c:	01 96       	adiw	r24, 0x01	; 1
    100e:	9f 83       	std	Y+7, r25	; 0x07
    1010:	8e 83       	std	Y+6, r24	; 0x06
    1012:	81 2f       	mov	r24, r17
    1014:	90 2f       	mov	r25, r16
    1016:	df 91       	pop	r29
    1018:	cf 91       	pop	r28
    101a:	1f 91       	pop	r17
    101c:	0f 91       	pop	r16
    101e:	08 95       	ret

00001020 <__ultoa_invert>:
    1020:	fa 01       	movw	r30, r20
    1022:	aa 27       	eor	r26, r26
    1024:	28 30       	cpi	r18, 0x08	; 8
    1026:	51 f1       	breq	.+84     	; 0x107c <__ultoa_invert+0x5c>
    1028:	20 31       	cpi	r18, 0x10	; 16
    102a:	81 f1       	breq	.+96     	; 0x108c <__ultoa_invert+0x6c>
    102c:	e8 94       	clt
    102e:	6f 93       	push	r22
    1030:	6e 7f       	andi	r22, 0xFE	; 254
    1032:	6e 5f       	subi	r22, 0xFE	; 254
    1034:	7f 4f       	sbci	r23, 0xFF	; 255
    1036:	8f 4f       	sbci	r24, 0xFF	; 255
    1038:	9f 4f       	sbci	r25, 0xFF	; 255
    103a:	af 4f       	sbci	r26, 0xFF	; 255
    103c:	b1 e0       	ldi	r27, 0x01	; 1
    103e:	3e d0       	rcall	.+124    	; 0x10bc <__ultoa_invert+0x9c>
    1040:	b4 e0       	ldi	r27, 0x04	; 4
    1042:	3c d0       	rcall	.+120    	; 0x10bc <__ultoa_invert+0x9c>
    1044:	67 0f       	add	r22, r23
    1046:	78 1f       	adc	r23, r24
    1048:	89 1f       	adc	r24, r25
    104a:	9a 1f       	adc	r25, r26
    104c:	a1 1d       	adc	r26, r1
    104e:	68 0f       	add	r22, r24
    1050:	79 1f       	adc	r23, r25
    1052:	8a 1f       	adc	r24, r26
    1054:	91 1d       	adc	r25, r1
    1056:	a1 1d       	adc	r26, r1
    1058:	6a 0f       	add	r22, r26
    105a:	71 1d       	adc	r23, r1
    105c:	81 1d       	adc	r24, r1
    105e:	91 1d       	adc	r25, r1
    1060:	a1 1d       	adc	r26, r1
    1062:	20 d0       	rcall	.+64     	; 0x10a4 <__ultoa_invert+0x84>
    1064:	09 f4       	brne	.+2      	; 0x1068 <__ultoa_invert+0x48>
    1066:	68 94       	set
    1068:	3f 91       	pop	r19
    106a:	2a e0       	ldi	r18, 0x0A	; 10
    106c:	26 9f       	mul	r18, r22
    106e:	11 24       	eor	r1, r1
    1070:	30 19       	sub	r19, r0
    1072:	30 5d       	subi	r19, 0xD0	; 208
    1074:	31 93       	st	Z+, r19
    1076:	de f6       	brtc	.-74     	; 0x102e <__ultoa_invert+0xe>
    1078:	cf 01       	movw	r24, r30
    107a:	08 95       	ret
    107c:	46 2f       	mov	r20, r22
    107e:	47 70       	andi	r20, 0x07	; 7
    1080:	40 5d       	subi	r20, 0xD0	; 208
    1082:	41 93       	st	Z+, r20
    1084:	b3 e0       	ldi	r27, 0x03	; 3
    1086:	0f d0       	rcall	.+30     	; 0x10a6 <__ultoa_invert+0x86>
    1088:	c9 f7       	brne	.-14     	; 0x107c <__ultoa_invert+0x5c>
    108a:	f6 cf       	rjmp	.-20     	; 0x1078 <__ultoa_invert+0x58>
    108c:	46 2f       	mov	r20, r22
    108e:	4f 70       	andi	r20, 0x0F	; 15
    1090:	40 5d       	subi	r20, 0xD0	; 208
    1092:	4a 33       	cpi	r20, 0x3A	; 58
    1094:	18 f0       	brcs	.+6      	; 0x109c <__ultoa_invert+0x7c>
    1096:	49 5d       	subi	r20, 0xD9	; 217
    1098:	31 fd       	sbrc	r19, 1
    109a:	40 52       	subi	r20, 0x20	; 32
    109c:	41 93       	st	Z+, r20
    109e:	02 d0       	rcall	.+4      	; 0x10a4 <__ultoa_invert+0x84>
    10a0:	a9 f7       	brne	.-22     	; 0x108c <__ultoa_invert+0x6c>
    10a2:	ea cf       	rjmp	.-44     	; 0x1078 <__ultoa_invert+0x58>
    10a4:	b4 e0       	ldi	r27, 0x04	; 4
    10a6:	a6 95       	lsr	r26
    10a8:	97 95       	ror	r25
    10aa:	87 95       	ror	r24
    10ac:	77 95       	ror	r23
    10ae:	67 95       	ror	r22
    10b0:	ba 95       	dec	r27
    10b2:	c9 f7       	brne	.-14     	; 0x10a6 <__ultoa_invert+0x86>
    10b4:	00 97       	sbiw	r24, 0x00	; 0
    10b6:	61 05       	cpc	r22, r1
    10b8:	71 05       	cpc	r23, r1
    10ba:	08 95       	ret
    10bc:	9b 01       	movw	r18, r22
    10be:	ac 01       	movw	r20, r24
    10c0:	0a 2e       	mov	r0, r26
    10c2:	06 94       	lsr	r0
    10c4:	57 95       	ror	r21
    10c6:	47 95       	ror	r20
    10c8:	37 95       	ror	r19
    10ca:	27 95       	ror	r18
    10cc:	ba 95       	dec	r27
    10ce:	c9 f7       	brne	.-14     	; 0x10c2 <__ultoa_invert+0xa2>
    10d0:	62 0f       	add	r22, r18
    10d2:	73 1f       	adc	r23, r19
    10d4:	84 1f       	adc	r24, r20
    10d6:	95 1f       	adc	r25, r21
    10d8:	a0 1d       	adc	r26, r0
    10da:	08 95       	ret

000010dc <_exit>:
    10dc:	f8 94       	cli

000010de <__stop_program>:
    10de:	ff cf       	rjmp	.-2      	; 0x10de <__stop_program>
